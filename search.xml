<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Oracle问题记录</title>
      <link href="/2023/01/06/Oracle%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/01/06/Oracle%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本贴用于记录开发中遇到的<code>OracleSQL</code>问题。</p></blockquote><h3 id="Null-值判断问题"><a href="#Null-值判断问题" class="headerlink" title="Null 值判断问题"></a>Null 值判断问题</h3><blockquote><p>问题场景: 获取字段A不等于‘1’的数据数量。(字段A，有可能为<code>null</code>)</p><p>结果发现<code>count</code>后的数量小于实际数量，后来发现是 <code>null 不参与 &lt;&gt; 比较</code>，需要对<code>null</code>做处理。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 错误</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> table_name <span class="keyword">where</span> 字段A <span class="operator">&lt;&gt;</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="comment">-- 正确</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> table_name <span class="keyword">where</span> nvl(字段A,<span class="string">&#x27;0&#x27;</span>) <span class="operator">&lt;&gt;</span> <span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle High Water Mark问题</title>
      <link href="/2022/12/11/OracleHWM/"/>
      <url>/2022/12/11/OracleHWM/</url>
      
        <content type="html"><![CDATA[<blockquote><p>公司写<code>SQL</code>时遇到一个奇怪的问题，往表中频繁插入和删除大量数据，几次操作后，使用<code>Select查询</code>(表中没数据)特别慢，后得知是高水位线的问题。</p><p>该问题已通过: <code>truncate table tableName</code>语句解决。</p><p>本想写篇文章详细记录一下的，现在懒得写的，简单概括下。</p></blockquote><p><code>High Water Mark</code>(简称<code>HWM</code>)，翻译为中文就是<code>高水位线</code>。</p><p>高水位线就是标识段(<code>segment</code>)中已使用过的数据块和未使用的数据块的二者的交界线。</p><p>随着不断的往数据库中插入数据，<code>HWM</code>会越来越高。但是，<font color="red">使用delete语句删除数据时，HWM不会下降。</font></p><p>原则上<code>HWM</code>只会上升，不会下降。</p><p>初始时的<code>HWM</code><br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231534126.png" alt="在这里插入图片描述"></p><p>插入数据后的<code>HWM</code><br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231535314.png" alt="在这里插入图片描述"></p><p>删除(<code>delete</code>语句)数据后的<code>HWM</code><br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231535336.png" alt="在这里插入图片描述"></p><p><code>Oracle</code>中执行<code>Select</code>操作时会扫描<code>HWM</code>下的所有数据块，所以虽然数据被删掉了，但是<code>HWM</code>线并没有下降，扫描就会很慢，相对应着查询也会很慢。</p><p>为了避免出现高水位线的问题，在删除数据时能使用<code>truncate</code>的情况下，尽量使用<code>truncate</code>。<code>truncate</code>和<code>delete</code>的不同自行百度。</p><p>参考：</p><ul><li><a href="https://www.codercto.com/a/24757.html">https://www.codercto.com/a/24757.html</a></li><li><a href="https://blog.csdn.net/weixin_48584982/article/details/124524589">https://blog.csdn.net/weixin_48584982/article/details/124524589</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>保姆级微信双开教程</title>
      <link href="/2022/12/04/%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%BE%AE%E4%BF%A1%E5%8F%8C%E5%BC%80%E6%95%99%E7%A8%8B/"/>
      <url>/2022/12/04/%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%BE%AE%E4%BF%A1%E5%8F%8C%E5%BC%80%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="保姆级微信双开教程"><a href="#保姆级微信双开教程" class="headerlink" title="保姆级微信双开教程"></a>保姆级微信双开教程</h1><blockquote><p>不知道大家是不是和我一样，两个微信账号，一个用于工作，一个用于私人。</p><p>一般来说，日常生活中使用的登录微信的设备也就3种，PC、Android、IOS。这三种设备中，Android经过各种厂商对OS的优化后，基本上都已经实现了微信双开甚至多开的功能，只有PC和IOS，默认还没有支持微信双开的功能，所以本篇文章就是为了记录，PC和IOS，怎么进行微信双开(保姆级别，有手就可以)。</p><p>好久没更新了，水一篇….</p></blockquote><h2 id="PC"><a href="#PC" class="headerlink" title="PC"></a>PC</h2><ul><li>设备: 收破烂都不要的神船笔记本</li><li>系统: 某国际大厂出的Windows11</li><li>微信版本: 新鲜出炉的3.8.0.41</li></ul><h3 id="第一步，创建批处理脚本文件"><a href="#第一步，创建批处理脚本文件" class="headerlink" title="第一步，创建批处理脚本文件"></a>第一步，创建批处理脚本文件</h3><p>桌面右键，新建文本文档，并打开</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231701706.png" alt="img"></p><p>在打开的文本文档中输入一下代码并替换<code>微信安装路径</code>为自己的PC设备上的微信安装的路径</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动第一个微信</span><br><span class="line">start /d <span class="string">&quot;微信安装路径&quot;</span> WeChat.exe</span><br><span class="line"># 启动第二个微信</span><br><span class="line">start /d <span class="string">&quot;微信安装路径&quot;</span> WeChat.exe</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>不知道自己的PC上的微信安装设备的可以右键桌面上的微信图标，打开文件所在位置，打开的文件路径就是微信的安装路径。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231701476.png" alt="img"></p><p>找到路径后，同上，复制路径并替换代码中的<code>微信安装路径</code>。</p><p>例如，我的打开后是在<code>D:\WeChat</code>，那么就把代码中的<code>微信安装路径</code>替换为<code>D:\WeChat</code></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231701987.png" alt="img"></p><p>以我的为例，替换后的代码如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动第一个微信</span><br><span class="line">start /d <span class="string">&quot;D:\WeChat&quot;</span> WeChat.exe</span><br><span class="line"># 启动第二个微信</span><br><span class="line">start /d <span class="string">&quot;D:\WeChat&quot;</span> WeChat.exe</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>到此代码已经编写结束，但是此时代码还是在以文本的形式存在于文本文档中，但是我们需要以批处理的方式运行改段代码，所以需要把该文本文档另存为批处理文件。</p><p>先保存，其次另存为</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231702391.png" alt="img"></p><p>路径随意，放到自己能找到的地方即可，保存类型选择所有文件，文件名随意，但是要以<code>.bat</code>结尾。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231702732.png" alt="img"></p><p>点击保存即可，到此批处理脚本制作完成。</p><h3 id="第二步，运行批处理脚本"><a href="#第二步，运行批处理脚本" class="headerlink" title="第二步，运行批处理脚本"></a>第二步，运行批处理脚本</h3><p>此处就简单了，找到保存的批处理脚本文件，双击即可….</p><p><font color="red">注:默认打开的两个微信窗口是重叠的，并不是只打开了一个</font></p><h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><blockquote><p>此种方式大致原理为：<code>使用自己的AppleID注册Apple开发者账号，使用自己的账号对ipa进行签名</code>。</p><p>但是此种方式有个弊端，就是双开的微信只能使用<code>7天</code>，<code>超过7天就不能用了</code>，解决办法就是按照第三步和第四步再次操作即可。</p></blockquote><ul><li>设备1: 卖肾换的iphone</li><li>设备2: 收破烂都不要的神船笔记本</li><li>IOS版本: 16.1.1</li></ul><h3 id="第一步，安装itunes和爱思助手"><a href="#第一步，安装itunes和爱思助手" class="headerlink" title="第一步，安装itunes和爱思助手"></a>第一步，安装itunes和爱思助手</h3><p>懒得写了，百度搜索一下吧…..</p><h3 id="第二步，下载微信ipa文件"><a href="#第二步，下载微信ipa文件" class="headerlink" title="第二步，下载微信ipa文件"></a>第二步，下载微信ipa文件</h3><p>下载地址: <a href="https://www.aliyundrive.com/s/n99pCRxyNAH">https://www.aliyundrive.com/s/n99pCRxyNAH</a></p><p>密码：<code>2jb0</code></p><p>打开下载的<code>exe文件</code>，点击<code>Extract</code>按钮即可导出微信IPA文件(阿里云盘限制，不能分享ipa文件….)</p><h3 id="第三步，给IPA签名"><a href="#第三步，给IPA签名" class="headerlink" title="第三步，给IPA签名"></a>第三步，给IPA签名</h3><p>打开爱思助手，工具箱，搜索<code>ipa</code>，点击<code>IPA签名</code></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231702325.png" alt="img"></p><p>添加IPA文件，选择，使用<code>AppleID</code>签名，添加<code>AppleID</code>,输入自己的<code>AppleID账号和密码</code>点击确定即可。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231702004.png" alt="img"></p><p>点击开始签名，耐心等待签名成功即可…</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231703384.png" alt="img"></p><p><font color="red">左下角的同步到下载中心一定要勾上…</font></p><h3 id="第四步，安装签名后的微信，并在手机端信任开发者账号"><a href="#第四步，安装签名后的微信，并在手机端信任开发者账号" class="headerlink" title="第四步，安装签名后的微信，并在手机端信任开发者账号"></a>第四步，安装签名后的微信，并在手机端信任开发者账号</h3><p>下载中心，勾选微信，点击安装，耐心等待安装完成即可….</p><p>如果上一步忘了勾选同步到下载中心，默认是看不到签名后的微信的，需要手动添加，点击添加文件，选择文档下的ipa文件即可。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231703144.png" alt="img"></p><p>打开手机设置，通用,VPN与设备管理，开发者APP中选择自己的appleID账号，点击信任“自己的AppleID”即可。</p><p>手机端的忘了截图了，看文字脑补吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> IOS </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用XShell连接Vm虚拟机中安装的Centos</title>
      <link href="/2021/12/25/%E4%BD%BF%E7%94%A8XShell%E8%BF%9E%E6%8E%A5Vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84Centos/"/>
      <url>/2021/12/25/%E4%BD%BF%E7%94%A8XShell%E8%BF%9E%E6%8E%A5Vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84Centos/</url>
      
        <content type="html"><![CDATA[<h2 id="1、配置网络模式"><a href="#1、配置网络模式" class="headerlink" title="1、配置网络模式"></a>1、配置网络模式</h2><p>配置虚拟机中的Centos系统的网络适配器</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231640137.png" alt="在这里插入图片描述"></p><h2 id="2、配置VM的网络虚拟机"><a href="#2、配置VM的网络虚拟机" class="headerlink" title="2、配置VM的网络虚拟机"></a>2、配置VM的网络虚拟机</h2><p>VM软件→编辑→虚拟网络编辑器</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231641266.png" alt="在这里插入图片描述"></p><p>子网IP不一定要使用10.0.0.0，此处使用10.0.0.0是为了避免和其他IP冲突。</p><p>网关IP需要在子网IP网段中。</p><h2 id="3、配置V8虚拟网络适配器"><a href="#3、配置V8虚拟网络适配器" class="headerlink" title="3、配置V8虚拟网络适配器"></a>3、配置V8虚拟网络适配器</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231641317.png" alt="在这里插入图片描述"></p><p>IP地址需要在第二步骤配置的子网IP网段中。</p><h2 id="4、配置Centos静态IP"><a href="#4、配置Centos静态IP" class="headerlink" title="4、配置Centos静态IP"></a>4、配置Centos静态IP</h2><p>启动服务器，使用<code>ip addr</code>查看网卡名称</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231641407.png" alt="在这里插入图片描述"></p><p>比如我的网卡名称就叫做<code>ens33</code>，并且大部分机器都是<code>ens33</code></p><p>进入到<code>/etc/sysconfig/network-scripts</code>，使用vi命令编辑<code>ifcf-ens33</code>文件。</p><p>如下</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">YPE</span>=<span class="string">Ethernet</span></span><br><span class="line"><span class="attr">PROXY_METHOD</span>=<span class="string">none</span></span><br><span class="line"><span class="attr">BROWSER_ONLY</span>=<span class="string">no</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=<span class="string">static</span></span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="string">no</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="string">no</span></span><br><span class="line"><span class="attr">IPV6_ADDR_GEN_MODE</span>=<span class="string">stable-privacy</span></span><br><span class="line"><span class="attr">NAME</span>=<span class="string">ens33</span></span><br><span class="line"><span class="attr">UUID</span>=<span class="string">3e502ba4-72ed-4b45-8009-41c69c6d7e25</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">ens33</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="string">10.0.0.100</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="string">255.255.255.0</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="string">10.0.0.1</span></span><br><span class="line"><span class="attr">DNS1</span>=<span class="string">114.114.114.114</span></span><br><span class="line"><span class="attr">DNS2</span>=<span class="string">8.8.8.8</span></span><br></pre></td></tr></table></figure><p>主要修改一下几个配置</p><ul><li>BOOTPROTO=static：使用静态ip设置</li><li>IPADDR=10.0.0.100：Centos服务器的IP，此IP需要在第二部配置的子网IP网段内。并且后期使用XShell连接时，就是连接此IP</li><li>NETMASK=255.255.255.0：同第二步配置的子网掩码</li><li>GATEWAY=10.0.0.1：同第二步配置的网关地址</li><li>DNS1=114.114.114.114：DNS地址，配置为114.114.114.114即可</li><li>DNS2=8.8.8.8：配置为8.8.8.8即可</li><li>ONBOOT=yes：配置为YES即可</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Xhsell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用XShell连接Vm虚拟机中安装的UbuntuServer20.04</title>
      <link href="/2021/12/25/%E4%BD%BF%E7%94%A8XShell%E8%BF%9E%E6%8E%A5Vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84UbuntuServer20-04/"/>
      <url>/2021/12/25/%E4%BD%BF%E7%94%A8XShell%E8%BF%9E%E6%8E%A5Vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84UbuntuServer20-04/</url>
      
        <content type="html"><![CDATA[<h2 id="1、配置网络桥接模式"><a href="#1、配置网络桥接模式" class="headerlink" title="1、配置网络桥接模式"></a>1、配置网络桥接模式</h2><p>配置虚拟机中的Ubuntu系统的网络适配器</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231639474.png" alt="在这里插入图片描述"></p><h2 id="2、配置VM的网络虚拟机"><a href="#2、配置VM的网络虚拟机" class="headerlink" title="2、配置VM的网络虚拟机"></a>2、配置VM的网络虚拟机</h2><p>VM软件→编辑→虚拟网络编辑器</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231639512.png" alt="在这里插入图片描述"></p><p>子网IP不一定要使用10.0.0.0，此处使用10.0.0.0是为了避免和其他IP冲突。</p><p>网关IP需要在子网IP网段中。</p><h2 id="3、配置V8虚拟网络适配器"><a href="#3、配置V8虚拟网络适配器" class="headerlink" title="3、配置V8虚拟网络适配器"></a>3、配置V8虚拟网络适配器</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231640934.png" alt="在这里插入图片描述"></p><p>IP地址需要在第二步骤配置的子网IP网段中。</p><h2 id="4、配置Ubuntu静态IP"><a href="#4、配置Ubuntu静态IP" class="headerlink" title="4、配置Ubuntu静态IP"></a>4、配置Ubuntu静态IP</h2><p>进入到<code>/etc/netplan</code>路径，使用<code>vim</code>命令编辑<code>yaml</code>网络配置文件。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231640159.png" alt="在这里插入图片描述"></p><p>红框为网络配置文件，建议在修改网络配置文件之前，对源文件进行备份。</p><p>内容如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens33:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">addresses:</span> [<span class="number">10.0</span><span class="number">.0</span><span class="number">.110</span><span class="string">/24</span>]</span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">              <span class="attr">addresses:</span> [<span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span>,<span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>]</span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>主要修改一下几个配置</p><ul><li>dhcp4: false：不使用dhcp服务(动态IP分配)</li><li>addresses: [10.0.0.110/24]：Ubuntu服务器的IP，此IP需要在第二部配置的子网IP网段内。并且后期使用XShell连接时，就是连接此IP</li><li>gateway4: 10.0.0.1：同第二步配置的网关地址</li><li>addresses: [114.114.114.114,8.8.8.8]：DNS地址，配置为114.114.114.114,8.8.8.8即可</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Xhsell </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VsCode下的Remote-SSH插件的使用</title>
      <link href="/2021/12/25/VsCode%E4%B8%8B%E7%9A%84Remote-SSH%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/12/25/VsCode%E4%B8%8B%E7%9A%84Remote-SSH%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="0、前言"><a href="#0、前言" class="headerlink" title="0、前言"></a>0、前言</h2><blockquote><p>众所周知，Vs Code是一个非常NB的编辑器，它可以通过安装不同的插件，满足几乎所有的开发需求。最近了解到微软之前推出过一个Remote-SSH的插件，通过该插件可以在Vs Code上通过SSH连接Linux服务器进行终端操作或者文件编辑。所以本篇博客就是记录下怎么在Vs Code里面通过Remote-SSH插件连接Linux服务器并进行终端操作和文件编辑。</p></blockquote><p><strong>系统环境：</strong></p><ul><li>操作系统：Windows 10</li><li>服务器：Centos 7 64Bit</li><li>软件：Vs Code 1.61.2</li></ul><h2 id="1、安装Remote-SSH插件"><a href="#1、安装Remote-SSH插件" class="headerlink" title="1、安装Remote-SSH插件"></a>1、安装Remote-SSH插件</h2><p>打开Vs Code，插件商店搜索Remote-SSH安装即可</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231644267.png"></p><h2 id="2、配置Linux服务器连接"><a href="#2、配置Linux服务器连接" class="headerlink" title="2、配置Linux服务器连接"></a>2、配置Linux服务器连接</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231644118.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231645146.png"></p><p>选择左侧小电脑，然后点击小齿轮，在弹出的选项中选择第一个即可。如图，第一个就表示将会把远程Linux服务器的连接地址以及用户信息保存在C:\Users\admin\.ssh\config路径下。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231645299.png"></p><ul><li>Host：主机名称</li><li>HostName：主机地址</li><li>User：用户</li></ul><p>输入主机信息并保存后，在左侧列表就会出现配置的主机。</p><h2 id="3、连接远程服务器"><a href="#3、连接远程服务器" class="headerlink" title="3、连接远程服务器"></a>3、连接远程服务器</h2><p>点击按钮连接服务器，打开新的窗口</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231645322.png"></p><p>输入用户密码</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231645909.png"></p><p>连接成功</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231645884.png"></p><h2 id="4、终端操作"><a href="#4、终端操作" class="headerlink" title="4、终端操作"></a>4、终端操作</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231646800.png"></p><p>顶部菜单栏 终端——新建终端即可。</p><h2 id="5、编辑文件"><a href="#5、编辑文件" class="headerlink" title="5、编辑文件"></a>5、编辑文件</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231646597.png"></p><p>顶部菜单栏：文件——打开文件|打开文件夹——选择对应的路径点击确认即可。</p><p><font color="red">注：点击确定后会让重新输入用户密码</font></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231646468.png"></p><p>比如我打开的是home目录，打开后，可以在下方进行终端操作，左侧预览文件，上方直接编辑。</p><h2 id="6、文件上传"><a href="#6、文件上传" class="headerlink" title="6、文件上传"></a>6、文件上传</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231646531.png"></p><p>文件上传同样很简单，直接把文件拖到左侧资源管理下的指定目录下即可。</p><h2 id="到此结束"><a href="#到此结束" class="headerlink" title="到此结束"></a>到此结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10自带OpenSSH的使用</title>
      <link href="/2021/12/25/Win10%E8%87%AA%E5%B8%A6OpenSSH%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/12/25/Win10%E8%87%AA%E5%B8%A6OpenSSH%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="0、前言"><a href="#0、前言" class="headerlink" title="0、前言"></a>0、前言</h2><blockquote><p>昨天写了一篇文章，记录了使用Vs Code的Remote-SSH的插件连接远程Linux服务器的方法。后来觉得还是很麻烦，需要先装Vs Code其次又要装Remote-SSH插件。今天网上查了查，其中有一篇文章提到，微软官方在2018年4月份更新的Win10版本中加入了正式版的OpenSSH，并默认安装在Win10系统中。所以本篇文章就是为了记录怎么在Win10默认环境下，使用OpenSSH远程连接Linux服务器。</p></blockquote><p><strong>系统环境：</strong></p><ul><li>操作系统：Windows 10 21H1</li><li>服务器：Centos 7 64Bit</li></ul><h2 id="1、检查是否安装有OpenSSH"><a href="#1、检查是否安装有OpenSSH" class="headerlink" title="1、检查是否安装有OpenSSH"></a>1、检查是否安装有OpenSSH</h2><ol><li><p>打开系统的设置页面，可以使用快捷键Win+I打开。</p></li><li><p>应用—可选功能</p><ul><li><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231642590.png"></li></ul></li><li><p>查看是否安装</p><ul><li><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231643238.png"></p></li><li><p>如果已安装中列表中没有OpenSSH，则点击添加功能按钮进行添加。</p></li></ul></li></ol><h2 id="2、连接服务器"><a href="#2、连接服务器" class="headerlink" title="2、连接服务器"></a>2、连接服务器</h2><blockquote><p>三种方式，但其本质是一致的。</p><p>连接命令：<code>ssh user@host</code>，默认端口为22，如要指定端口号，则<code>ssh user@host -p port</code></p></blockquote><h3 id="1、运行窗口连接"><a href="#1、运行窗口连接" class="headerlink" title="1、运行窗口连接"></a>1、运行窗口连接</h3><p>Win+R打开运行窗口，输入连接命令，点击确定即可。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231643679.png"></p><h3 id="2、CMD命令窗口连接"><a href="#2、CMD命令窗口连接" class="headerlink" title="2、CMD命令窗口连接"></a>2、CMD命令窗口连接</h3><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231643689.png"></p><h3 id="3、Bat批处理"><a href="#3、Bat批处理" class="headerlink" title="3、Bat批处理"></a>3、Bat批处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:: 关闭回显</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 啥也不会的程序员</span><br><span class="line">:: User,Linux用户</span><br><span class="line"><span class="built_in">set</span> User=root</span><br><span class="line">:: Host,Linux服务器地址</span><br><span class="line"><span class="built_in">set</span> Host=10.0.0.100</span><br><span class="line">:: Port，Linux服务器端口</span><br><span class="line"><span class="built_in">set</span> Port=22</span><br><span class="line">:: ssh连接</span><br><span class="line">ssh %User%@%Host% -p %Port%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h2 id="3、登出"><a href="#3、登出" class="headerlink" title="3、登出"></a>3、登出</h2><blockquote><p>Ctrl+D或者logout命令即可</p></blockquote><h2 id="4、文件上传"><a href="#4、文件上传" class="headerlink" title="4、文件上传"></a>4、文件上传</h2><blockquote><p>命令：<code>scp filePath user@host</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231643862.png"></p><h2 id="5、文件下载"><a href="#5、文件下载" class="headerlink" title="5、文件下载"></a>5、文件下载</h2><blockquote><p>命令：<code>scp user@host:filePath outFilePath</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231644513.png"></p><h2 id="到此结束"><a href="#到此结束" class="headerlink" title="到此结束"></a>到此结束</h2>]]></content>
      
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis事务的简单使用</title>
      <link href="/2021/12/25/Redis%E4%BA%8B%E5%8A%A1%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/12/25/Redis%E4%BA%8B%E5%8A%A1%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>问题：如果<code>Java</code>代码出现了异常，怎么对<code>Redis</code>进行回滚？</strong></p><p>一次和朋友聊天聊到了这个问题，当时第一想法就是，<code>try-catch</code>异常，在<code>catch</code>里对之前插入到<code>Redis</code>的数据进行删除操作。但是接下来又有一个问题：<strong>如果在删除时报错了怎么办？</strong></p><h2 id="什么是事务？"><a href="#什么是事务？" class="headerlink" title="什么是事务？"></a>什么是事务？</h2><p>学过关系型数据库的应该都知道，事务有一个<code>ACID</code>原则，即事务的四大特性：</p><ol><li><code>atomicity(原子性)</code>：一个事务是一个不可分割的工作单位，事务中包括的操作要么都做，要么都不做</li><li><code>consistency(一致性)</code>：事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。</li><li><code>isolation(隔离性)</code>：一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</li><li><code>durability(持久性)</code>：指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响。</li></ol><p>上面的<code>ACID</code>指的是关系型数据库，但是<code>Redis</code>作为一个<code>NoSQL(非关系型数据库)</code>，它的事务肯定是和关系型数据库的不一样。</p><p><code>Redis</code>的事务很简单，简单到它的本质其实就是一个队列。流程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231657634.png" alt="在这里插入图片描述"></p><p>需要说明一下，加入到队列中的<code>Redis</code>命令并不会执行，只有输入了<code>EXEC(提交事务)</code>的命令后，才会依次执行队列中的命令。</p><p><strong>事务的三个阶段：</strong></p><ol><li>开始事务</li><li>命令入对</li><li>执行事务</li></ol><h2 id="Redis事务的简单使用"><a href="#Redis事务的简单使用" class="headerlink" title="Redis事务的简单使用"></a>Redis事务的简单使用</h2><ol><li>使用<code>multi</code>命令，开启事务</li><li>输入<code>redis</code>命令</li><li>使用<code>exec</code>命令，提交事务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启事务</span></span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = zhangsan</span></span><br><span class="line">127.0.0.1:6379&gt; set name zhangsan</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> age = 18</span></span><br><span class="line">127.0.0.1:6379&gt; set age 18</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交事务</span></span><br><span class="line">127.0.0.1:6379&gt; exec</span><br><span class="line">1) OK</span><br><span class="line">2) OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line">2) &quot;age&quot;</span><br></pre></td></tr></table></figure><p>可以看到，开启事务之前，什么数据都没有，只有执行<code>EXEC(提交事务)</code>命令后，才会依次执行被事务包含的命令，并打印<code>OK</code>。</p><h2 id="Redis事务的“原子性”"><a href="#Redis事务的“原子性”" class="headerlink" title="Redis事务的“原子性”"></a>Redis事务的“原子性”</h2><p><code>atomicity(原子性)</code>的要求就是，要么全部执行，要么全部不执行。但是<code>Redis</code>的原子性却有所不同，当事务提交提交之后，会依次执行队列中的命令，如果队列中的其中一个命令执行出错，并不会影响到其他的命令。显然这个不满足原子性的条件，所以<code>Redis事务不是原子性</code>的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启事务</span></span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = zhangsan</span></span><br><span class="line">127.0.0.1:6379&gt; set name zhangsan</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> age = 18</span></span><br><span class="line">127.0.0.1:6379&gt; set age 18</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将key为name的值+1</span></span><br><span class="line">127.0.0.1:6379&gt; incr name</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将key为age的值+1</span></span><br><span class="line">127.0.0.1:6379&gt; incr age</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交事务</span></span><br><span class="line">127.0.0.1:6379&gt; exec</span><br><span class="line">1) OK</span><br><span class="line">2) OK</span><br><span class="line">3) (error) ERR value is not an integer or out of range</span><br><span class="line">4) (integer) 19</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line">2) &quot;age&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> get name</span></span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;zhangsan&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> get age</span></span><br><span class="line">127.0.0.1:6379&gt; get age</span><br><span class="line">&quot;19&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><p>可以看到，执行时报了<code>(error) ERR value is not an integer or out of range</code>错误，但是整体来看，只有<code>incr age</code>命令执行失败其它的都是执行成功 。所以可以看到，确实不符合<code>原子性</code>的要求。</p><p>注：<code>Redis</code>的单条命令是原子性的，但是事务不是原子性的。</p><h2 id="Redis的事务“回滚”"><a href="#Redis的事务“回滚”" class="headerlink" title="Redis的事务“回滚”"></a>Redis的事务“回滚”</h2><p>严格来说，<code>Redis</code>的事务是不能回滚的。<code>Redis</code>只提供了一个<code>DISCARD</code>命令，作用就是取消事务。前面提到过，<code>Redis</code>的事务本质就是一个队列，开启事务之后的所有命令都是被放在队列中，只有执行<code>EXEC(提交事务)</code>命令，才会依次执行队列中的命令。执行<code>DISCARD</code>命令时，会放弃队列中的所用命令，结束本次事务，所以严格来说，<code>Redis</code>的事务是不能回滚的，只能取消，且取消操作需要在执行<code>EXEC(提交事务)</code>命令之前。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启事务</span></span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = zhangsan</span></span><br><span class="line">127.0.0.1:6379&gt; set name zhangsan</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> 取消事务</span></span><br><span class="line">127.0.0.1:6379&gt; discard</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br></pre></td></tr></table></figure><p>可以看到，开启事务之前什么数据都没有，执行<code>DISCARD(取消事务)</code>命令后，也是什么数都没插入。</p><h2 id="Redis事务的WATCH和Unwatch命令"><a href="#Redis事务的WATCH和Unwatch命令" class="headerlink" title="Redis事务的WATCH和Unwatch命令"></a>Redis事务的WATCH和Unwatch命令</h2><blockquote><p><code>WATCH</code>：监视一个或者多个<code>Key</code>，如果在事务执行之前，被监控的<code>Key</code>的值如果被改变，则事务将会被打断。</p><p><code>Unwatch</code>：放弃监控。</p></blockquote><h3 id="WATCH"><a href="#WATCH" class="headerlink" title="WATCH"></a>WATCH</h3><p>监视Name</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 监视 key = name</span></span><br><span class="line">127.0.0.1:6379&gt; watch name</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启事务</span></span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = zhangsan</span></span><br><span class="line">127.0.0.1:6379&gt; set name zhangsan</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> age = 18</span></span><br><span class="line">127.0.0.1:6379&gt; set age 18</span><br><span class="line">QUEUED</span><br></pre></td></tr></table></figure><p>创建一个新的绘画，修改name的值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = list</span></span><br><span class="line">127.0.0.1:6379&gt; set name lisi</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>提交事务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 提交事务</span></span><br><span class="line">127.0.0.1:6379&gt; exec</span><br><span class="line">(nil)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> get name</span></span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;lisi&quot;</span><br></pre></td></tr></table></figure><p>可以看到，和之前的不同，执行<code>exec</code>后返回的不是<code>OK</code>而是<code>nil</code>。同时 事务中设置的name和age的值也不存在，只有在另一个会话中set的name。可以得出结论：<code>被监控的Key的值如果被改变，则整个事务将会执行失败</code>。</p><h3 id="Unwatch"><a href="#Unwatch" class="headerlink" title="Unwatch"></a>Unwatch</h3><p>终端A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 监控 key = name</span></span><br><span class="line">127.0.0.1:6379&gt; watch name</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> 取消监视</span></span><br><span class="line">127.0.0.1:6379&gt; unwatch</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启事务</span></span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = zhangsan</span></span><br><span class="line">127.0.0.1:6379&gt; set name zhangsan</span><br></pre></td></tr></table></figure><p>终端B</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name = list</span></span><br><span class="line">127.0.0.1:6379&gt; set name list</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>终端A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> name wanger</span></span><br><span class="line">127.0.0.1:6379&gt; set name wanger</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交事务</span></span><br><span class="line">127.0.0.1:6379&gt; exec</span><br><span class="line">1) OK</span><br><span class="line">2) OK</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的Key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> get name</span></span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;wanger&quot;</span><br></pre></td></tr></table></figure><p>可以看到，执行了<code>unwatch</code>命令后，在终端B修改<code>name</code>的值，不会出现整个事务失败的问题。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>Redis的单条命令支持原子性，但是事务不支持原子性。</li><li>Redis的事务是不能回滚的，但是可以取消事务(放弃事务)。</li><li>Redis事务有四个方法<ul><li>DISCARD：取消事务(放弃事务)</li><li>EXEC：提交事务(执行事务)</li><li>MULTI：开启事务</li><li>UNWATCH：取消所有监视</li><li>WATCH：监视1个或者多个Key</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Docker在Centos上安装Oracle数据库</title>
      <link href="/2021/12/25/%E5%9F%BA%E4%BA%8EDocker%E5%9C%A8Centos%E4%B8%8A%E5%AE%89%E8%A3%85Oracle%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2021/12/25/%E5%9F%BA%E4%BA%8EDocker%E5%9C%A8Centos%E4%B8%8A%E5%AE%89%E8%A3%85Oracle%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Oracle数据库的占用太大，不想安装在物理机上，毕竟用的也不多，所以想把它装在虚拟机中的Centos服务器上，但是安装Linux版的太麻烦，所以为了简化安装过程，选择了在Docker中安装。</p></blockquote><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><blockquote><p>这一步没什么好说的，如果已经装过了Docker可以跳过此步骤。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror aliyun# 安装docker</span><br><span class="line">systemctl start docker# 启动Docker</span><br></pre></td></tr></table></figure><h2 id="拉取Oracle的镜像"><a href="#拉取Oracle的镜像" class="headerlink" title="拉取Oracle的镜像"></a>拉取Oracle的镜像</h2><blockquote><p>该镜像很大，需要耐心等待….</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g# 拉取镜像，该步骤需要耐心等待...</span><br><span class="line">docker images# 查看镜像</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231647641.png"></p><h2 id="创建Oracle容器"><a href="#创建Oracle容器" class="headerlink" title="创建Oracle容器"></a>创建Oracle容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g</span><br></pre></td></tr></table></figure><h2 id="进入容器切换为Root用户"><a href="#进入容器切换为Root用户" class="headerlink" title="进入容器切换为Root用户"></a>进入容器切换为Root用户</h2><blockquote><p>切换为Root用户。密码为：helowin</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it oracle11g bash# 进入容器内部</span><br><span class="line">su root# 切换为Root用户。密码为：helowin</span><br></pre></td></tr></table></figure><h2 id="配置Oracle的环境变量"><a href="#配置Oracle的环境变量" class="headerlink" title="配置Oracle的环境变量"></a>配置Oracle的环境变量</h2><blockquote><p>使用vi命令修改profile文件，配置Oracle的环境变量</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile# 修改profile文件，配置Oracle的环境变量</span><br></pre></td></tr></table></figure><p>配置内容如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2</span><br><span class="line">export ORACLE_SID=helowin</span><br><span class="line">export PATH=$ORACLE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231647001.png"></p><h2 id="刷新配置文件，使其生效"><a href="#刷新配置文件，使其生效" class="headerlink" title="刷新配置文件，使其生效"></a>刷新配置文件，使其生效</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="登陆sqlplus"><a href="#登陆sqlplus" class="headerlink" title="登陆sqlplus"></a>登陆sqlplus</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su oracle</span><br><span class="line">sqlplus /nolog</span><br></pre></td></tr></table></figure><h2 id="修改sys、system用户的密码"><a href="#修改sys、system用户的密码" class="headerlink" title="修改sys、system用户的密码"></a>修改sys、system用户的密码</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn <span class="operator">/</span><span class="keyword">as</span> sysdba<span class="comment">-- 使用sysdba连接Oracle，最大的权限，os认证，只能在本机上登陆使用。</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231647935.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">system</span> identified <span class="keyword">by</span> <span class="keyword">system</span>;<span class="comment">-- 修改system用户的密码为systemalter user sys identified by sys;-- 修改sys用户的密码为sysalter profile default limit password_life_time unlimited;-- 默认口令是有180天的限制的，如果180没有修改密码，则该用户就无法登陆。此处是去除180密码限制。</span></span><br></pre></td></tr></table></figure><h2 id="创建orcl用户"><a href="#创建orcl用户" class="headerlink" title="创建orcl用户"></a>创建orcl用户</h2><blockquote><p>到上面那一步就可以了，此步骤可有可无。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> orcl identified <span class="keyword">by</span> <span class="number">123456</span>;<span class="comment">-- 创建orcl用户，密码为123456</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">connect</span>,resource,dba <span class="keyword">to</span> orcl;<span class="comment">-- 给orcl用户赋予connect,resource,dba三个角色的权限。</span></span><br></pre></td></tr></table></figure><h2 id="使用PLSQL连接数据库"><a href="#使用PLSQL连接数据库" class="headerlink" title="使用PLSQL连接数据库"></a>使用PLSQL连接数据库</h2><blockquote><p>数据库地址为：<code>服务器IP:1521/helowin</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231647512.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git问题记录</title>
      <link href="/2021/01/29/Git%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/01/29/Git%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>在使用Git的时候经常遇到一个问题，远程分支已经删除了，但是本地依然能够看到远程。这时可以使用命令删除远程已经不存在的分支。<br><code>git remote prune origin</code>：删除远程已经不存在的分支。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结合Redis和MySQL实现的Gateway动态路由</title>
      <link href="/2020/11/29/%E7%BB%93%E5%90%88Redis%E5%92%8CMySQL%E5%AE%9E%E7%8E%B0%E7%9A%84Gateway%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/"/>
      <url>/2020/11/29/%E7%BB%93%E5%90%88Redis%E5%92%8CMySQL%E5%AE%9E%E7%8E%B0%E7%9A%84Gateway%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="Gateway动态路由"><a href="#Gateway动态路由" class="headerlink" title="Gateway动态路由"></a>Gateway动态路由</h1><h2 id="What？"><a href="#What？" class="headerlink" title="What？"></a>What？</h2><p>前段时间买了个服务器，没怎么用，就跑了个在线获取<code>IdeaCode</code>的程序。使用率不怎么高，这次准备在跑一个<code>Gateway</code>网关，以后就把我所有的程序都接入到网关里。但是以前网关里的路由都是硬编码的形式写到配置文件里的，这就意味着我每发布一个程序都要重新打包部署一下网关。</p><p>程序猿的存在就是解决一些需要频繁操作的事件，所以要想办法解决硬编码路由的问题，所以我写了本篇<code>Gateway</code>动态路由。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><code>Gateway</code>的路由配置有两种方式，一种是通过配置文件配置，一种是通过代码配置。我准备做一个类似于管理系统的系统来管理路由配置，所以要使用代码的方式配置路由。</p><p>在项目启动的时候从数据库读取配置并且存到<code>Redis</code>中。<code>Gateway</code>在初始化的时候从<code>Redis</code>中获取配置。</p><h2 id="开发前的准备"><a href="#开发前的准备" class="headerlink" title="开发前的准备"></a>开发前的准备</h2><ol><li>一台电脑（废话，没有电脑怎么开发）</li><li>Nacos注册中心（路由转发需要用到）</li><li>MySQL数据库（持久化的储存路由配置）</li><li>Redis（路由配置缓存）</li><li>JDK1.8（我是基于JDK1.8做的开发）</li><li>Maven（现在可是Maven的天下，总不能一个一个的添加依赖吧）</li></ol><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>Github：<a href="https://github.com/Ys2025/gateway-backend">https://github.com/Ys2025/gateway-backend</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231708386.gif"><br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231708901.png"><br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231708774.png"></p><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><h3 id="1、初始化数据库"><a href="#1、初始化数据库" class="headerlink" title="1、初始化数据库"></a>1、初始化数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `gateway_route` (</span><br><span class="line">  `id` <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `route_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `uri` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `predicates` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `filters` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `ord` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `remarks` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `create_time` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `update_time` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `is_deleted` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `version` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231708886.png" alt="在这里插入图片描述"></p><h3 id="2、创建一个Gateway项目"><a href="#2、创建一个Gateway项目" class="headerlink" title="2、创建一个Gateway项目"></a>2、创建一个Gateway项目</h3><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;cn.yanghuisen.gateway.mapper&quot;)</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>gateway<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba.version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR9<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">GATEWAY</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/gateway_route?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="comment"># Redis地址</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="comment"># Redis端口</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="comment"># RedisDB库</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 链接超市</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">10000ms</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="comment"># 最大连接数</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">1024</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="string">10000ms</span></span><br><span class="line">        <span class="comment"># 最大空闲时间</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">200</span></span><br><span class="line">        <span class="comment"># 最小空闲链接</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span>       <span class="comment"># 逻辑已经删除的值（默认为1）</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span>   <span class="comment"># 逻辑没有删除的值（默认为0）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、配置Redis"><a href="#3、配置Redis" class="headerlink" title="3、配置Redis"></a>3、配置Redis</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/14 20:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义模板</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String,Object&gt; <span class="title">redisTemplate</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建模板</span></span><br><span class="line">        RedisTemplate&lt;String,Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        <span class="comment">// 设置String类型的Key的序列器</span></span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置String类型的value的序列器</span></span><br><span class="line">        redisTemplate.setValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置Hash类型的Key的序列器</span></span><br><span class="line">        redisTemplate.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置hash类型的value的序列器</span></span><br><span class="line">        redisTemplate.setHashValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置连接方式</span></span><br><span class="line">        redisTemplate.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、自定义路由储存库（核心1）"><a href="#4、自定义路由储存库（核心1）" class="headerlink" title="4、自定义路由储存库（核心1）"></a>4、自定义路由储存库（核心1）</h3><blockquote><p>此类用于从<code>Redis</code>获取路由配置信息，以及监听的路由保存和删除</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.route.RouteDefinition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.route.RouteDefinitionRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.support.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Flux;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 0:02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 自定义路由储存库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisRouteDefinitionRepository</span> <span class="keyword">implements</span> <span class="title">RouteDefinitionRepository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String,Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String GATEWAY_ROUTES = <span class="string">&quot;gateway:routes&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取路由信息，此处从Redis获取路由配置信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Flux&lt;RouteDefinition&gt; <span class="title">getRouteDefinitions</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;RouteDefinition&gt; routeDefinitions = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 获取Redis中配置的路由信息</span></span><br><span class="line">        List&lt;Object&gt; routes = redisTemplate.opsForHash().values(GATEWAY_ROUTES);</span><br><span class="line">        <span class="comment">// 遍历路由</span></span><br><span class="line">        routes.forEach(route-&gt;&#123;</span><br><span class="line">            <span class="comment">// 把json反序列话为RouteDefinition类对象</span></span><br><span class="line">            RouteDefinition routeDefinition = JSON.parseObject(route.toString(), RouteDefinition.class);</span><br><span class="line">            routeDefinitions.add(routeDefinition);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> Flux.fromIterable(routeDefinitions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> route</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">save</span><span class="params">(Mono&lt;RouteDefinition&gt; route)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> route.flatMap(routeDefinition -&gt; &#123;</span><br><span class="line">            <span class="comment">// 把路由信息存到Redis中</span></span><br><span class="line">            redisTemplate.opsForHash().put(GATEWAY_ROUTES,routeDefinition.getId(), JSON.toJSONString(routeDefinition));</span><br><span class="line">            <span class="keyword">return</span> Mono.empty();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> routeId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">delete</span><span class="params">(Mono&lt;String&gt; routeId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> routeId.flatMap(id -&gt; &#123;</span><br><span class="line">            <span class="comment">// 判断redis中是否有该id的路由数据</span></span><br><span class="line">            <span class="keyword">if</span> (redisTemplate.opsForHash().hasKey(GATEWAY_ROUTES,id))&#123;</span><br><span class="line">                <span class="comment">// 删除数据</span></span><br><span class="line">                redisTemplate.opsForHash().delete(GATEWAY_ROUTES,id);</span><br><span class="line">                <span class="keyword">return</span> Mono.empty();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Mono.defer(()-&gt; Mono.error(<span class="keyword">new</span> NotFoundException(<span class="string">&quot;Redis中没有该路由:&quot;</span>+id)));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5、SpringBoot启动配置（核心2）"><a href="#5、SpringBoot启动配置（核心2）" class="headerlink" title="5、SpringBoot启动配置（核心2）"></a>5、SpringBoot启动配置（核心2）</h3><blockquote><p>此类用于在<code>SpringBoot</code>启动的时候从数据库读取路由配置信息，并且把信息储存到<code>Redis</code>中。以及发布路由的增删改事件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.dto.GatewayRouteDTO;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.entity.GatewayRoute;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.mapper.GatewayRouteMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.event.RefreshRoutesEvent;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.handler.predicate.PredicateDefinition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.route.RouteDefinition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.route.RouteDefinitionWriter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEventPublisher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEventPublisherAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.util.UriComponentsBuilder;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 0:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayServiceHandler</span> <span class="keyword">implements</span> <span class="title">ApplicationEventPublisherAware</span>, <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String GATEWAY_ROUTES = <span class="string">&quot;gateway:routes&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApplicationEventPublisher publisher;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RouteDefinitionWriter routeDefinitionWriter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GatewayRouteMapper gatewayRouteMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String,Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationEventPublisher</span><span class="params">(ApplicationEventPublisher applicationEventPublisher)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.publisher = applicationEventPublisher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 项目启动的时候执行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 记载路由配置</span></span><br><span class="line">        <span class="keyword">this</span>.loadRouteConfig();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">loadRouteConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始加载网关路由配置信息&quot;</span>);</span><br><span class="line">        <span class="comment">// 删除Redis里的路由配置信息</span></span><br><span class="line">        redisTemplate.delete(GATEWAY_ROUTES);</span><br><span class="line">        <span class="comment">// 从数据库查询数据</span></span><br><span class="line">         List&lt;GatewayRoute&gt; gatewayRoutes = gatewayRouteMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        gatewayRoutes.forEach(gatewayRoute -&gt; &#123;</span><br><span class="line">            RouteDefinition definition = handleData(gatewayRoute);</span><br><span class="line">            <span class="comment">// 保存路由</span></span><br><span class="line">            routeDefinitionWriter.save(Mono.just(definition)).subscribe();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 发布事件，通知更新数据</span></span><br><span class="line">        <span class="keyword">this</span>.publisher.publishEvent(<span class="keyword">new</span> RefreshRoutesEvent(<span class="keyword">this</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dto</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveRoute</span><span class="params">(GatewayRouteDTO dto)</span></span>&#123;</span><br><span class="line">        GatewayRoute gatewayRoute = <span class="keyword">new</span> GatewayRoute();</span><br><span class="line">        BeanUtils.copyProperties(dto,gatewayRoute);</span><br><span class="line">        <span class="comment">// GatewayRoute转为RouteDefinition</span></span><br><span class="line">        RouteDefinition definition = handleData(gatewayRoute);</span><br><span class="line">        <span class="comment">// 保存路由数据</span></span><br><span class="line">        routeDefinitionWriter.save(Mono.just(definition)).subscribe();</span><br><span class="line">        <span class="comment">// 发布事件，通知更新数据</span></span><br><span class="line">        <span class="keyword">this</span>.publisher.publishEvent(<span class="keyword">new</span> RefreshRoutesEvent(<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dto</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateRoute</span><span class="params">(GatewayRouteDTO dto)</span></span>&#123;</span><br><span class="line">        GatewayRoute gatewayRoute = <span class="keyword">new</span> GatewayRoute();</span><br><span class="line">        BeanUtils.copyProperties(dto,gatewayRoute);</span><br><span class="line">        <span class="comment">// GatewayRoute转为RouteDefinition</span></span><br><span class="line">        RouteDefinition definition = handleData(gatewayRoute);</span><br><span class="line">        <span class="comment">// 根据路由ID删除路由信息</span></span><br><span class="line">        routeDefinitionWriter.delete(Mono.just(dto.getOldRouteId())).subscribe();</span><br><span class="line">        <span class="comment">// 重新保存路由数据</span></span><br><span class="line">        routeDefinitionWriter.save(Mono.just(definition)).subscribe();</span><br><span class="line">        <span class="comment">// 发布事件，通知更新数据</span></span><br><span class="line">        <span class="keyword">this</span>.publisher.publishEvent(<span class="keyword">new</span> RefreshRoutesEvent(<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> routeId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteRoute</span><span class="params">(String routeId)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 根据路由ID删除路由信息</span></span><br><span class="line">        routeDefinitionWriter.delete(Mono.just(routeId)).subscribe();</span><br><span class="line">        <span class="comment">// 发布事件，通知更新数据</span></span><br><span class="line">        <span class="keyword">this</span>.publisher.publishEvent(<span class="keyword">new</span> RefreshRoutesEvent(<span class="keyword">this</span>));</span><br><span class="line">        log.info(<span class="string">&quot;删除完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * GatewayRoute转RouteDefinition</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gatewayRoute</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RouteDefinition <span class="title">handleData</span><span class="params">(GatewayRoute gatewayRoute)</span></span>&#123;</span><br><span class="line">        RouteDefinition routeDefinition = <span class="keyword">new</span> RouteDefinition();</span><br><span class="line"></span><br><span class="line">        URI uri = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 判断Uri是不是http地址</span></span><br><span class="line">        <span class="keyword">if</span> (gatewayRoute.getUri().startsWith(<span class="string">&quot;http&quot;</span>))&#123;</span><br><span class="line">            <span class="comment">// http地址</span></span><br><span class="line">            uri = UriComponentsBuilder.fromHttpUrl(gatewayRoute.getUri()).build().toUri();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 微服务服务名</span></span><br><span class="line">            uri = UriComponentsBuilder.fromUriString(<span class="string">&quot;lb://&quot;</span>+gatewayRoute.getUri()).build().toUri();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置路由ID</span></span><br><span class="line">        routeDefinition.setId(gatewayRoute.getRouteId());</span><br><span class="line">        <span class="comment">// 设置uri</span></span><br><span class="line">        routeDefinition.setUri(uri);</span><br><span class="line">        <span class="comment">//谓语(路由转发条件)</span></span><br><span class="line">        PredicateDefinition predicate = <span class="keyword">new</span> PredicateDefinition();</span><br><span class="line">        predicate.setName(<span class="string">&quot;Path&quot;</span>);</span><br><span class="line">        Map&lt;String,String&gt; predicateArgs = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        predicateArgs.put(<span class="string">&quot;pattern&quot;</span>,gatewayRoute.getPredicates());</span><br><span class="line">        predicate.setArgs(predicateArgs);</span><br><span class="line">        routeDefinition.setPredicates(Collections.singletonList(predicate));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置ord</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span>!=gatewayRoute.getOrd())&#123;</span><br><span class="line">            routeDefinition.setOrder(gatewayRoute.getOrd());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> routeDefinition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6、创建entity和DTO类"><a href="#6、创建entity和DTO类" class="headerlink" title="6、创建entity和DTO类"></a>6、创建entity和DTO类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 1:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayRoute</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String routeId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String uri;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String predicates;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String filters;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer ord;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remarks;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逻辑删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDeleted;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 乐观锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 1:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> DTO类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayRouteDTO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String routeId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String oldRouteId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String uri;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String predicates;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String filters;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer ord;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remarks;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer isDeleted;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7、创建Service层接口"><a href="#7、创建Service层接口" class="headerlink" title="7、创建Service层接口"></a>7、创建Service层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.dto.GatewayRouteDTO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 22:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IRouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dto</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">add</span><span class="params">(GatewayRouteDTO dto)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dto</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">update</span><span class="params">(GatewayRouteDTO dto)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除路由</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> routeId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">delete</span><span class="params">(String routeId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;GatewayRouteDTO&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.dto.GatewayRouteDTO;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.entity.GatewayRoute;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.mapper.GatewayRouteMapper;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.service.IRouteService;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 22:40</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">IRouteService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GatewayRouteMapper routeMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(GatewayRouteDTO dto)</span> </span>&#123;</span><br><span class="line">        GatewayRoute gatewayRoute = <span class="keyword">new</span> GatewayRoute();</span><br><span class="line">        BeanUtils.copyProperties(dto,gatewayRoute);</span><br><span class="line">        <span class="keyword">return</span> routeMapper.insert(gatewayRoute);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">(GatewayRouteDTO dto)</span> </span>&#123;</span><br><span class="line">        GatewayRoute gatewayRoute = <span class="keyword">new</span> GatewayRoute();</span><br><span class="line">        BeanUtils.copyProperties(dto,gatewayRoute);</span><br><span class="line">        <span class="keyword">return</span> routeMapper.updateById(gatewayRoute);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">delete</span><span class="params">(String routeId)</span> </span>&#123;</span><br><span class="line">        QueryWrapper&lt;GatewayRoute&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;route_id&quot;</span>,routeId);</span><br><span class="line">        <span class="keyword">return</span> routeMapper.delete(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;GatewayRouteDTO&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;GatewayRouteDTO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;GatewayRoute&gt; gatewayRoutes = routeMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        gatewayRoutes.forEach(gatewayRoute -&gt; &#123;</span><br><span class="line">            GatewayRouteDTO dto = <span class="keyword">new</span> GatewayRouteDTO();</span><br><span class="line">            BeanUtils.copyProperties(gatewayRoute,dto);</span><br><span class="line">            dto.setOldRouteId(gatewayRoute.getRouteId());</span><br><span class="line">            result.add(dto);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8、controller接口"><a href="#8、controller接口" class="headerlink" title="8、controller接口"></a>8、controller接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.dto.GatewayRouteDTO;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.handler.GatewayServiceHandler;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.gateway.service.IRouteService;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/28 22:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 路由API接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/route&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GatewayServiceHandler gatewayServiceHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IRouteService routeService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 刷新路由配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/refresh&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">refresh</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.gatewayServiceHandler.loadRouteConfig();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加路由配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dto</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(<span class="meta">@RequestBody</span> GatewayRouteDTO dto)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(dto.getId()))&#123;</span><br><span class="line">            <span class="keyword">this</span>.gatewayServiceHandler.updateRoute(dto);</span><br><span class="line">            <span class="keyword">this</span>.routeService.update(dto);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.gatewayServiceHandler.saveRoute(dto);</span><br><span class="line">            <span class="keyword">this</span>.routeService.add(dto);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(String routeId)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gatewayServiceHandler.deleteRoute(routeId);</span><br><span class="line">        <span class="keyword">this</span>.routeService.delete(routeId);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;GatewayRouteDTO&gt; <span class="title">list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.routeService.list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9、前端代码"><a href="#9、前端代码" class="headerlink" title="9、前端代码"></a>9、前端代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-row&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-circle-plus-outline&quot; @click=&quot;addRoute&quot;&gt;新增路由&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;success&quot; icon=&quot;el-icon-refresh&quot; @click=&quot;refreshRoute&quot;&gt;刷新路由&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">        :data=&quot;tableData&quot;</span><br><span class="line">        :row-class-name=&quot;tableRowClassName&quot;&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;id&quot;</span><br><span class="line">          label=&quot;ID&quot;</span><br><span class="line">          show-overflow-tooltip&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;routeId&quot;</span><br><span class="line">          label=&quot;routeId&quot;</span><br><span class="line">          show-overflow-tooltip&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;uri&quot;</span><br><span class="line">          label=&quot;uri&quot;</span><br><span class="line">          show-overflow-tooltip&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;predicates&quot;</span><br><span class="line">          label=&quot;predicates&quot;</span><br><span class="line">          show-overflow-tooltip&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;filters&quot;</span><br><span class="line">          label=&quot;filters&quot;</span><br><span class="line">          show-overflow-tooltip&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;ord&quot;</span><br><span class="line">          label=&quot;order&quot;</span><br><span class="line">          width=&quot;150&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;remarks&quot;</span><br><span class="line">          label=&quot;remarks&quot;</span><br><span class="line">          width=&quot;150&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;createTime&quot;</span><br><span class="line">          label=&quot;createTime&quot;</span><br><span class="line">          width=&quot;150&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;updateTime&quot;</span><br><span class="line">          label=&quot;updateTime&quot;</span><br><span class="line">          width=&quot;150&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=&quot;操作&quot;</span><br><span class="line">          fixed=&quot;right&quot;</span><br><span class="line">          width=&quot;150&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">              size=&quot;mini&quot;</span><br><span class="line">              @click=&quot;handleEdit(scope.row)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">              size=&quot;mini&quot;</span><br><span class="line">              type=&quot;danger&quot;</span><br><span class="line">              @click=&quot;handleDelete(scope.row)&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog :title=&quot;dialogTitle&quot; :visible.sync=&quot;dialogFormVisible&quot;&gt;</span><br><span class="line">      &lt;el-form :model=&quot;form&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;RouteId&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.routeId&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;Uri&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.uri&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;Predicates&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.predicates&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;Filters&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.filters&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;Order&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.ord&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;Remarks&quot;&gt;</span><br><span class="line">          &lt;el-input type=&quot;textarea&quot; v-model=&quot;form.remarks&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogFormVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;clickDialog(form)&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      tableData: [],</span><br><span class="line">      dialogFormVisible: false,</span><br><span class="line">      form: &#123;&#125;,</span><br><span class="line">      dialogTitle: &#x27;新增路由&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    tableRowClassName(data) &#123;</span><br><span class="line">      console.log(data)</span><br><span class="line">      if (data.rowIndex%2)&#123;</span><br><span class="line">        return &quot;warning-row&quot;</span><br><span class="line">      &#125;else &#123;</span><br><span class="line">        return &quot;success-row&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleEdit(data) &#123;</span><br><span class="line">      console.log(data);</span><br><span class="line">      this.dialogTitle=&#x27;编辑路由&#x27;</span><br><span class="line">      this.dialogFormVisible = true</span><br><span class="line">      this.form = data</span><br><span class="line">    &#125;,</span><br><span class="line">    handleDelete(data) &#123;</span><br><span class="line">      console.log(data);</span><br><span class="line">      this.$axios.get(&#x27;http://localhost:8080/route/delete&#x27;, &#123;</span><br><span class="line">        params: &#123;</span><br><span class="line">          routeId: data.routeId</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).then(result=&gt; &#123;</span><br><span class="line">        console.log(result);</span><br><span class="line">        this.getList()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    clickDialog(data)&#123;</span><br><span class="line">      console.log(data)</span><br><span class="line">      this.$axios.post(&#x27;http://localhost:8080/route/save&#x27;, this.form).then(result=&gt; &#123;</span><br><span class="line">        console.log(result);</span><br><span class="line">        this.dialogFormVisible = false</span><br><span class="line">        this.getList()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    refreshRoute()&#123;</span><br><span class="line">      this.$axios.get(&#x27;http://localhost:8080/route/refresh&#x27;).then(result =&gt; &#123;</span><br><span class="line">        console.log(result.data);</span><br><span class="line">        this.getList()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    getList()&#123;</span><br><span class="line">      this.$axios.get(&#x27;http://localhost:8080/route/list&#x27;).then(result =&gt; &#123;</span><br><span class="line">        console.log(result.data);</span><br><span class="line">        this.tableData = result.data</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    addRoute()&#123;</span><br><span class="line">      this.dialogTitle=&#x27;新增路由&#x27;</span><br><span class="line">      this.dialogFormVisible = true</span><br><span class="line">      this.form = &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    console.log(1111)</span><br><span class="line">    this.getList()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.el-table .warning-row &#123;</span><br><span class="line">  background: oldlace;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-table .success-row &#123;</span><br><span class="line">  background: #f0f9eb;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>时间原因，代码中没做必填校验。<code>filters</code>暂时没用到，也没写。有空再补充吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gateway负载均衡及集群搭建</title>
      <link href="/2020/11/15/Gateway%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/11/15/Gateway%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Gateway负载均衡及集群搭建"><a href="#Gateway负载均衡及集群搭建" class="headerlink" title="Gateway负载均衡及集群搭建"></a>Gateway负载均衡及集群搭建</h1><p>注：本文写的是<code>Gateway</code>的负载均衡及集群的搭建，<code>Gateway</code>的使用不在本文中介绍。</p><h2 id="Gateway-负载均衡"><a href="#Gateway-负载均衡" class="headerlink" title="Gateway-负载均衡"></a>Gateway-负载均衡</h2><blockquote><p>负载均衡，英文名称为Load Balance，其含义就是指将负载（工作任务）进行平衡、分摊到多个操作单元上进行运行，例如FTP服务器、Web服务器、企业核心应用服务器和其它主要任务服务器等，从而协同完成工作任务。</p></blockquote><p><strong>准备</strong></p><ul><li>Nacos：1.3.1</li><li>JDK版本：1.8</li><li>系统：Win10</li></ul><h3 id="一、创建Gateway项目"><a href="#一、创建Gateway项目" class="headerlink" title="一、创建Gateway项目"></a>一、创建Gateway项目</h3><p>这里不在详细说明<code>Gateway</code>的创建。最简单的方式就是使用<code>IDEA</code>的<code>Spring Initializr</code>创建，只需勾选几下就可以了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gateway-1<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>gateway-1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba.version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR9<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Gateway：网关，本文章中用到的重要依赖</p><p>Nacos：注册中心，Gateway结合Nacos实现请求转发</p><h3 id="二、Application-yml配置文件"><a href="#二、Application-yml配置文件" class="headerlink" title="二、Application.yml配置文件"></a>二、Application.yml配置文件</h3><p>项目创建完毕后就要进行项目的配置了，否则只添加依赖没有任何用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">GATEWAY-1</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848,127.0.0.1:8849,127.0.0.1:8850</span>   <span class="comment">#Nacos集群地址</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">nacos-demo</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://NACOS-DEMO</span>  <span class="comment"># lb表示当前的注册中心，后面是服务名</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/**</span>            <span class="comment"># 根据请求路径匹配</span></span><br></pre></td></tr></table></figure><h3 id="三、负载均衡"><a href="#三、负载均衡" class="headerlink" title="三、负载均衡"></a>三、负载均衡</h3><p>因为是<code>Gateway</code>结合<code>Nacos</code>使用的，而<code>Nacos</code>自带<code>Ribbon</code>负载均衡依赖，所以<code>Gateway</code>默认就开启了负载均衡，默认负载均衡策略就是轮询，如果要修改策略只需要配置一下即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务名</span></span><br><span class="line"><span class="attr">NACOS-DEMO:</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="comment"># 指定负载均衡策略类名</span></span><br><span class="line">    <span class="attr">NFLoadBalancerRuleClassName:</span> <span class="string">com.netflix.loadbalancer.RandomRule</span></span><br><span class="line">    <span class="comment"># Provider服务列表，多个服务之间使用,分隔</span></span><br><span class="line">    <span class="comment"># listOfServers: http://localhost:8088,http://localhost:8888</span></span><br></pre></td></tr></table></figure><p><code>listOfServers</code>可以去掉，会从注册中心获取服务地址</p><p>这样负载均衡就配置好了</p><h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><h4 id="1）、服务熔断"><a href="#1）、服务熔断" class="headerlink" title="1）、服务熔断"></a>1）、服务熔断</h4><blockquote><p>如果服务停止运行了，在通过<code>Gateway</code>请求转发时，就会报错，这时我们就要进行服务熔断，从而保证请求不会报错</p></blockquote><h5 id="1、添加依赖"><a href="#1、添加依赖" class="headerlink" title="1、添加依赖"></a>1、添加依赖</h5><p>需要结合<code>Hystrix</code>进行服务熔断，所以需要添加<code>Hystrix</code>的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-hystrix --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2、创建服务熔断的请求接口"><a href="#2、创建服务熔断的请求接口" class="headerlink" title="2、创建服务熔断的请求接口"></a>2、创建服务熔断的请求接口</h5><p>当服务熔断时<code>Gateway</code>会把请求转发到这个请求接口上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.gateway1.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/15 16:59</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 服务熔断</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FallBackController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/fallback&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fallback</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;错误：FALLBACK&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、修改转发配置"><a href="#3、修改转发配置" class="headerlink" title="3、修改转发配置"></a>3、修改转发配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gateway:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">nacos-demo</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">lb://NACOS-DEMO</span>  <span class="comment"># lb表示当前的注册中心，后面是服务名</span></span><br><span class="line">      <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/**</span>          <span class="comment"># 根据请求路径匹配</span></span><br><span class="line">      <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hystrix</span>     <span class="comment"># 服务熔断</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">fallback</span></span><br><span class="line">            <span class="attr">fallbackUri:</span> <span class="string">forward:/fallback</span></span><br></pre></td></tr></table></figure><p><code>fallbackUri</code>：会把请求转发到<code>/fallback</code>上</p><h5 id="4、服务熔断测试"><a href="#4、服务熔断测试" class="headerlink" title="4、服务熔断测试"></a>4、服务熔断测试</h5><p>首先停止后端服务，然后访问URL<a href="http://localhost:5000/demo/test">http://localhost:5000/demo/test</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231658743.png" alt="在这里插入图片描述"></p><h2 id="Gateway-集群搭建"><a href="#Gateway-集群搭建" class="headerlink" title="Gateway-集群搭建"></a>Gateway-集群搭建</h2><p><code>Gateway</code>自己是不能搭建集群的，所以需要配合<code>Nginx</code>实现集群的搭建及负载均衡。集群搭建很简单， <code>Gateway</code>项目自己不用做改动。</p><p><strong>准备：</strong></p><ul><li>Nginx：1.19.4</li><li>多个Gateway项目(身边没有多余的电脑，我这里是通过修改端口的方法，同时跑两个Gateway)</li></ul><p>Nginx下载地址：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><h3 id="一、Nginx的负载均衡配置"><a href="#一、Nginx的负载均衡配置" class="headerlink" title="一、Nginx的负载均衡配置"></a>一、Nginx的负载均衡配置</h3><p>上面说了，因为<code>Gateway</code>自身不能进行集群的搭建及负载均衡，所以需要在<code>Nginx</code>上进行负载均衡，转发到多个不同的<code>Gateway</code>上</p><p>修改<code>Nginx</code>下的<code>conf</code>下的<code>nginx.conf</code>文件，配置<code>Nginx</code>的反向代理，通过<code>Nginx</code>的反向代理实现负载均衡的配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 负载均衡，默认是轮询策略</span></span><br><span class="line"><span class="attr">upstream</span> <span class="string">backserver &#123;</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">localhost:5000;</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">localhost:5001;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line"><span class="comment">        # 监听端口</span></span><br><span class="line">        <span class="attr">listen</span>       <span class="string">80;</span></span><br><span class="line">        <span class="attr">server_name</span>  <span class="string">localhost;</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        # 根目录</span></span><br><span class="line">        <span class="attr">location</span> <span class="string">/ &#123;</span></span><br><span class="line">            <span class="attr">proxy_pass</span> <span class="string">http://backserver;</span></span><br><span class="line">        <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="二、启动Nginx"><a href="#二、启动Nginx" class="headerlink" title="二、启动Nginx"></a>二、启动Nginx</h3><p>启动：<code>Nginx</code>的启动很简单，只要双击<code>Nginx</code>下的<code>nginx.exe</code>启动即可，或者在Nginx下通过命令行<code>start nginx</code>启动</p><p>停止：Nginx下命令行<code>nginx -s stop</code>停止<code>nginx</code></p><p>到此集群搭建完毕</p>]]></content>
      
      
      
        <tags>
            
            <tag> Gateway </tag>
            
            <tag> Spring </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10-Nacos集群部署</title>
      <link href="/2020/11/15/Win10-Nacos%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
      <url>/2020/11/15/Win10-Nacos%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10-Nacos集群部署"><a href="#Win10-Nacos集群部署" class="headerlink" title="Win10-Nacos集群部署"></a>Win10-Nacos集群部署</h1><blockquote><p>因为工作需要用到<code>Nacos</code>集群部署，所以在此记录下<code>Nacos</code>集群部署的过程以及遇到的坑。</p></blockquote><p><strong>准备工作：</strong></p><ul><li>Nacos版本：1.3.1</li><li>JDK版本：1.8</li><li>系统：Win10</li><li>数据库：MySQL8.0</li></ul><p>Nacos集群部署官方文档：<a href="https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html">https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html</a>（我按照官方文档部署没有成功，可能官方文档的教程只适用于<code>Linux</code>/<code>Unix</code>/<code>Mac</code>）</p><p><font color="red">本次部署是在一台机器上，使用三个不同的端口，模拟三台Nacos机器</font></p><h2 id="一、下载Nacos"><a href="#一、下载Nacos" class="headerlink" title="一、下载Nacos"></a>一、下载Nacos</h2><p>Github：<a href="https://github.com/alibaba/nacos/releases">https://github.com/alibaba/nacos/releases</a></p><h2 id="二、配置数据库"><a href="#二、配置数据库" class="headerlink" title="二、配置数据库"></a>二、配置数据库</h2><p>解压下载好的<code>Nacos</code>，在<code>conf</code>文件下有一个<code>nacos-mysql.sql</code>文件，执行该SQL文件，把数据导入到数据库中</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231659837.png" alt="在这里插入图片描述"></p><p>修改<code>Nacos</code>下的<code>conf</code>文件下的<code>application.properties</code>文件(去掉注释，修改数据库即可)</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Count of DB:</span></span><br><span class="line"><span class="meta">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Connect URL of DB:</span></span><br><span class="line"><span class="meta">db.url.0</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="meta">db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">db.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231659183.png" alt="在这里插入图片描述"></p><h2 id="三、配置集群IP"><a href="#三、配置集群IP" class="headerlink" title="三、配置集群IP"></a>三、配置集群IP</h2><p>在<code>Nacos</code>下的<code>conf</code>文件下有一个<code>cluster.conf.example</code>，复制该文件并修改文件名为<code>cluster.conf</code>。</p><p>编辑<code>cluster.conf</code>文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#it is ip</span></span><br><span class="line"><span class="comment">#example</span></span><br><span class="line"><span class="meta">192.168.0.106</span>:<span class="string">8848</span></span><br><span class="line"><span class="meta">192.168.0.106</span>:<span class="string">8849</span></span><br><span class="line"><span class="meta">192.168.0.106</span>:<span class="string">8850</span></span><br></pre></td></tr></table></figure><p>主要修改最下面的<code>IP:PORT</code>，<code>192.168.0.106</code>是我电脑的内网<code>IP</code>，<code>8848、8849、8850</code>是<code>Nacos</code>端口<br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231659320.png" alt="在这里插入图片描述"></p><p><font color="red">坑1：IP一定要是内网IP，不能是localhost或者127.0.0.1</font></p><h2 id="四、启用集群模式-2020-11-17修改"><a href="#四、启用集群模式-2020-11-17修改" class="headerlink" title="四、启用集群模式(2020-11-17修改)"></a>四、启用集群模式(2020-11-17修改)</h2><p><font color="red">Nacos1.3.2版本之后默认就是集群模式，可以跳过此步骤</font></p><p>此步骤非常重要，否则不会启用集群模式（都是坑啊）</p><p>不知道是不是因为<code>Nacos</code>更新了的原因，现在的<code>Nacos</code>默认启动的是单节点模式，需要手动修改为集群模式</p><p>修改<code>Nacos</code>下的<code>bin</code>目录下的<code>startup.cmd</code>文件</p><p>大致在第<code>27</code>行左右修改<code>set MODE=&quot;standalone“</code>为<code>set MODE=&quot;cluster&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231659220.png"></p><h2 id="五、修改端口"><a href="#五、修改端口" class="headerlink" title="五、修改端口"></a>五、修改端口</h2><p>到上面第四步<code>Nacos</code>集群就已经配置好了，但是现在还只有一份<code>Nacos</code>，需要在这个<code>Nacos</code>配置文件的基础上在复制出<code>2</code>份<code>Nacos</code></p><p>复制之后需要修改一个地方，就是启动端口。</p><p>修改<code>nacos</code>下的<code>conf</code>下的<code>application.properties</code>文件(注意三个<code>nacos</code>的端口不一样，分别是<code>8848</code>、<code>8849</code>、<code>8850</code>，和<code>cluster.conf</code>文件配置的一样)</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Default web server port:</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">8849</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231700074.png" alt="在这里插入图片描述"></p><h2 id="六、启动Nacos"><a href="#六、启动Nacos" class="headerlink" title="六、启动Nacos"></a>六、启动Nacos</h2><p><code>Win10</code>下只要双击运行<code>nacos</code>下的<code>bin</code>下的<code>startup.cmd</code>即可（三个<code>Nacos</code>都要启动）</p><p>启动成后访问 <a href="http://localhost:8848/nacos/">http://localhost:8848/nacos/</a>，左侧的集群管理下的节点列表可以看到目前有三个节点，而且都是在线状态。<br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231700574.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos配置中心疯狂打印日志问题</title>
      <link href="/2020/09/27/Nacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E7%96%AF%E7%8B%82%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/27/Nacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E7%96%AF%E7%8B%82%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>今天弄Nacos配置中心的时候，后端疯狂的打印日志，后来测试了下发现是本地的Nacos本版太高了（1.3.1），和引入的依赖的版本不匹配，后来下载了一个低版本的Nacos(1.2.1)就可以了<br>版本关系：<a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明</a><br><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231638454.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为鸿蒙OS之HelloWorld</title>
      <link href="/2020/09/13/%E5%8D%8E%E4%B8%BA%E9%B8%BF%E8%92%99OS%E4%B9%8BHelloWorld/"/>
      <url>/2020/09/13/%E5%8D%8E%E4%B8%BA%E9%B8%BF%E8%92%99OS%E4%B9%8BHelloWorld/</url>
      
        <content type="html"><![CDATA[<h1 id="华为鸿蒙OS之HelloWorld"><a href="#华为鸿蒙OS之HelloWorld" class="headerlink" title="华为鸿蒙OS之HelloWorld"></a>华为鸿蒙OS之HelloWorld</h1><p>这两天有一个很火的话题<code>华为鸿蒙OS2.0</code>。现在个人开发者也可以进行鸿蒙OS的应用或者硬件开发。作为一个“啥也不会的程序员”，时刻要保持着学习的心态，所以本文将会介绍基于鸿蒙OS的应用开发。</p><p>官网：<a href="https://www.harmonyos.com/">https://www.harmonyos.com/</a></p><h2 id="入学第一课，HelloWorld"><a href="#入学第一课，HelloWorld" class="headerlink" title="入学第一课，HelloWorld"></a>入学第一课，HelloWorld</h2><p>程序员的第一课，<code>HelloWorld</code>，鸿蒙OS也不能例外。</p><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><p>鸿蒙OS开发工具：<a href="https://developer.harmonyos.com/cn/develop/deveco-studio">https://developer.harmonyos.com/cn/develop/deveco-studio</a></p><p>注：目前还只有<code>Windows-64Bit</code>版本的</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231648533.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231649925.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231649513.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231649089.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231650085.png"></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231650413.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231650652.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231651322.png"></p><p>默认安装到C盘，选择取消，手动选择安装位置</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231651196.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231651794.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231652267.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231652433.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231652068.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231653785.png"></p><p>中间少了一个图…</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231652403.png" alt="在这里插入图片描述"></p><p>到此配置结束</p><h3 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h3><p>开发项目时，有三种可选</p><ul><li>TV（TV设备）</li><li>Wearable（可穿戴设备）</li><li>Lite Wearable（可穿戴设备(lite)）</li></ul><p>这里选择的是TV（Java）</p><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231653154.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231653039.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231654230.png"></p><h4 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h4><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231654760.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231654026.png"></p><p>之后浏览器会打开一个页面，按照提示进行开发者账号注册</p><p>注册之后会出现授权页，允许授权（使用Windows自带的浏览器）</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231654701.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231654661.png"></p><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231655295.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231655179.png"></p><p>到此，最简单的HelloWorld运行完毕</p><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231655621.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 鸿蒙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一文搞懂MyBatisPlus的使用（2020/10/18更新，补充多数据源）</title>
      <link href="/2020/09/06/%E4%B8%80%E6%96%87%E6%90%9E%E6%87%82MyBatisPlus%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%882020-10-18%E6%9B%B4%E6%96%B0%EF%BC%8C%E8%A1%A5%E5%85%85%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%EF%BC%89/"/>
      <url>/2020/09/06/%E4%B8%80%E6%96%87%E6%90%9E%E6%87%82MyBatisPlus%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%882020-10-18%E6%9B%B4%E6%96%B0%EF%BC%8C%E8%A1%A5%E5%85%85%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus</a>（简称 MP）是一个 <a href="http://www.mybatis.org/mybatis-3/">MyBatis</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p></blockquote><p>官网：<a href="https://baomidou.com/">https://baomidou.com/</a></p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h2 id="支持数据库"><a href="#支持数据库" class="headerlink" title="支持数据库"></a>支持数据库</h2><ul><li>mysql 、 mariadb 、 oracle 、 db2 、 h2 、 hsql 、 sqlite 、 postgresql 、 sqlserver 、 presto</li><li>达梦数据库 、 虚谷数据库 、 人大金仓数据库</li></ul><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231710013.jpeg" alt="在这里插入图片描述"></p><h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, email) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@baomidou.com&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="创建SpringBoot项目，添加依赖"><a href="#创建SpringBoot项目，添加依赖" class="headerlink" title="创建SpringBoot项目，添加依赖"></a>创建SpringBoot项目，添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mp-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mp-demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for MyBatis-Plus<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--MyBatis-Plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color="red">注：如果引入了MyBatis-Plus就不要在引入MyBtais，两者选一</font></p><h2 id="配置数据库账号密码"><a href="#配置数据库账号密码" class="headerlink" title="配置数据库账号密码"></a>配置数据库账号密码</h2><p>修改application.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mpdemo?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8</span></span><br></pre></td></tr></table></figure><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><h3 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h3><p>使用<code>Lombok</code>减少代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/8/15 20:41</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 用户实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mapper接口"><a href="#mapper接口" class="headerlink" title="mapper接口"></a>mapper接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.mpdemo.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/8/15 20:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 用户Mapper接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UserMapper接口继承BaseMapper，泛型参数为实体类对象</p><h3 id="配置扫描注解"><a href="#配置扫描注解" class="headerlink" title="配置扫描注解"></a>配置扫描注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/8/15 20:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;cn.yanghuisen.mpdemo.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MpDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MpDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>@MapperScan</code>指定扫描的<code>mapper</code>接口路径</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="查询所有的数据"><a href="#查询所有的数据" class="headerlink" title="查询所有的数据"></a>查询所有的数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.mpdemo.entity.User;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.mpdemo.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span> <span class="comment">// 测试注解</span></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span>    <span class="comment">// 使用Spring环境</span></span><br><span class="line"><span class="meta">@Slf4j</span>  <span class="comment">// 日志打印</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MpDemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectListTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;*****查询User列表*****&quot;</span>);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        log.info(<span class="string">&quot;*****打印userList*****&quot;</span>);</span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User(id=1, name=Jone, age=18, email=test1@baomidou.com)</span><br><span class="line">User(id=2, name=Jack, age=20, email=test2@baomidou.com)</span><br><span class="line">User(id=3, name=Tom, age=28, email=test3@baomidou.com)</span><br><span class="line">User(id=4, name=Sandy, age=21, email=test4@baomidou.com)</span><br><span class="line">User(id=5, name=Billie, age=24, email=test5@baomidou.com)</span><br></pre></td></tr></table></figure><p>到此就可以体会到MyBatis-Plus的强大魅力，只需要简单的配置就可以实现基本的CRUD操作。</p><h1 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h1><p>开始日志，查看具体SQL命令</p><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231711310.png" alt="image.png"></p><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><h2 id="TableName"><a href="#TableName" class="headerlink" title="@TableName"></a>@TableName</h2><p>表名注解</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必须指定</th><th align="center">默认值</th><th>描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td>表名</td></tr><tr><td align="center">schema</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td>schema</td></tr><tr><td align="center">keepGlobalPrefix</td><td align="center">boolean</td><td align="center">否</td><td align="center">false</td><td>是否保持使用全局的 tablePrefix 的值(如果设置了全局 tablePrefix 且自行设置了 value 的值)</td></tr><tr><td align="center">resultMap</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td>xml 中 resultMap 的 id</td></tr><tr><td align="center">autoResultMap</td><td align="center">boolean</td><td align="center">否</td><td align="center">false</td><td>是否自动构建 resultMap 并使用(如果设置 resultMap 则不会进行 resultMap 的自动构建并注入)</td></tr></tbody></table><h2 id="TableId"><a href="#TableId" class="headerlink" title="@TableId"></a>@TableId</h2><p>主键注解</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必须指定</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">主键字段名</td></tr><tr><td align="center">type</td><td align="center">Enum</td><td align="center">否</td><td align="center">IdType.NONE</td><td align="center">主键类型</td></tr></tbody></table><p><strong>IdType</strong></p><p>主键生成方式</p><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">AUTO</td><td align="center">数据库ID自增</td></tr><tr><td align="center">NONE</td><td align="center">无状态,该类型为未设置主键类型(注解里等于跟随全局,全局里约等于 INPUT)</td></tr><tr><td align="center">INPUT</td><td align="center">insert前自行set主键值</td></tr><tr><td align="center">ASSIGN_ID</td><td align="center">分配ID(主键类型为Number(Long和Integer)或String)(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextId</code>(默认实现类为<code>DefaultIdentifierGenerator</code>雪花算法)</td></tr><tr><td align="center">ASSIGN_UUID</td><td align="center">分配UUID,主键类型为String(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextUUID</code>(默认default方法)</td></tr><tr><td align="center"><del>ID_WORKER</del></td><td align="center"><del>分布式全局唯一ID 长整型类型(please use <code>ASSIGN_ID</code>)</del></td></tr><tr><td align="center"><del>UUID</del></td><td align="center"><del>32位UUID字符串(please use <code>ASSIGN_UUID</code>)</del></td></tr><tr><td align="center"><del>ID_WORKER_STR</del></td><td align="center"><del>分布式全局唯一ID 字符串类型(please use <code>ASSIGN_ID</code>)</del></td></tr></tbody></table><h2 id="TableField"><a href="#TableField" class="headerlink" title="@TableField"></a>@TableField</h2><p>字段注解(非主键)</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必须指定</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">数据库字段名</td></tr><tr><td align="center">el</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">映射为原生 <code>#&#123; ... &#125;</code> 逻辑,相当于写在 xml 里的 <code>#&#123; ... &#125;</code> 部分</td></tr><tr><td align="center">exist</td><td align="center">boolean</td><td align="center">否</td><td align="center">true</td><td align="center">是否为数据库表字段</td></tr><tr><td align="center">condition</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">字段 <code>where</code> 实体查询比较条件,有值设置则按设置的值为准,没有则为默认全局的 <code>%s=#&#123;%s&#125;</code>,<a href="https://github.com/baomidou/mybatis-plus/blob/3.0/mybatis-plus-annotation/src/main/java/com/baomidou/mybatisplus/annotation/SqlCondition.java">参考</a></td></tr><tr><td align="center">update</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">字段 <code>update set</code> 部分注入, 例如：update=”%s+1”：表示更新时会set version=version+1(该属性优先级高于 <code>el</code> 属性)</td></tr><tr><td align="center">insertStrategy</td><td align="center">Enum</td><td align="center">N</td><td align="center">DEFAULT</td><td align="center">举例：NOT_NULL: <code>insert into table_a(&lt;if test=&quot;columnProperty != null&quot;&gt;column&lt;/if&gt;) values (&lt;if test=&quot;columnProperty != null&quot;&gt;#&#123;columnProperty&#125;&lt;/if&gt;)</code></td></tr><tr><td align="center">updateStrategy</td><td align="center">Enum</td><td align="center">N</td><td align="center">DEFAULT</td><td align="center">举例：IGNORED: <code>update table_a set column=#&#123;columnProperty&#125;</code></td></tr><tr><td align="center">whereStrategy</td><td align="center">Enum</td><td align="center">N</td><td align="center">DEFAULT</td><td align="center">举例：NOT_EMPTY: <code>where &lt;if test=&quot;columnProperty != null and columnProperty!=&#39;&#39;&quot;&gt;column=#&#123;columnProperty&#125;&lt;/if&gt;</code></td></tr><tr><td align="center">fill</td><td align="center">Enum</td><td align="center">否</td><td align="center">FieldFill.DEFAULT</td><td align="center">字段自动填充策略</td></tr><tr><td align="center">select</td><td align="center">boolean</td><td align="center">否</td><td align="center">true</td><td align="center">是否进行 select 查询</td></tr><tr><td align="center">keepGlobalFormat</td><td align="center">boolean</td><td align="center">否</td><td align="center">false</td><td align="center">是否保持使用全局的 format 进行处理</td></tr><tr><td align="center">jdbcType</td><td align="center">JdbcType</td><td align="center">否</td><td align="center">JdbcType.UNDEFINED</td><td align="center">JDBC类型 (该默认值不代表会按照该值生效)</td></tr><tr><td align="center">typeHandler</td><td align="center">Class&lt;? extends TypeHandler&gt;</td><td align="center">否</td><td align="center">UnknownTypeHandler.class</td><td align="center">类型处理器 (该默认值不代表会按照该值生效)</td></tr><tr><td align="center">numericScale</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">指定小数点后保留的位数</td></tr></tbody></table><p><strong>FieldStrategy</strong></p><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">IGNORED</td><td align="center">忽略判断</td></tr><tr><td align="center">NOT_NULL</td><td align="center">非NULL判断</td></tr><tr><td align="center">NOT_EMPTY</td><td align="center">非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)</td></tr><tr><td align="center">DEFAULT</td><td align="center">追随全局配置</td></tr></tbody></table><p><strong>FieldFill</strong></p><p>字段填充策略</p><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">DEFAULT</td><td align="center">默认不处理</td></tr><tr><td align="center">INSERT</td><td align="center">插入时填充字段</td></tr><tr><td align="center">UPDATE</td><td align="center">更新时填充字段</td></tr><tr><td align="center">INSERT_UPDATE</td><td align="center">插入和更新时填充字段</td></tr></tbody></table><h2 id="TableLogic"><a href="#TableLogic" class="headerlink" title="@TableLogic"></a>@TableLogic</h2><p>表字段逻辑处理注解（逻辑删除）</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必须指定</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">逻辑未删除值</td></tr><tr><td align="center">delval</td><td align="center">String</td><td align="center">否</td><td align="center">“”</td><td align="center">逻辑删除值</td></tr></tbody></table><h1 id="CRUD接口"><a href="#CRUD接口" class="headerlink" title="CRUD接口"></a>CRUD接口</h1><h2 id="MapperCRUD接口"><a href="#MapperCRUD接口" class="headerlink" title="MapperCRUD接口"></a>MapperCRUD接口</h2><blockquote><p>这里只是一部分查询接口，完整的查询接口请查看官方文档。</p></blockquote><h3 id="insert-插入数据"><a href="#insert-插入数据" class="headerlink" title="insert-插入数据"></a>insert-插入数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(<span class="string">&quot;Ahh&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;admin@yanghuisen.cn&quot;</span>);</span><br><span class="line">    userMapper.insert(user);</span><br><span class="line">    log.info(user.toString());</span><br><span class="line">    selectListTest();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用insert方法进行数据插入，传入一个user对象。插入成功后会把生成的ID，回填到user对象中。</p><p>注：默认使用的是<strong>雪花算法</strong>生成对应的ID，如果要修改ID生成算法可以在实体类上添加注解<code>@TableId</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：如果要使用auto自增主键的话，需要开启数据库的主键ID自增。</p><h3 id="update-更新数据"><a href="#update-更新数据" class="headerlink" title="update-更新数据"></a>update-更新数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">6L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;啊哈哈&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;admin@yanghuisen.cn&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> i = userMapper.updateById(user);</span><br><span class="line">    log.info(i+<span class="string">&quot;&quot;</span>);</span><br><span class="line">    selectListTest();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：<code>updateById</code>传入的是user对象，不是具体的ID。</p><h3 id="select-查询数据"><a href="#select-查询数据" class="headerlink" title="select-查询数据"></a>select-查询数据</h3><h4 id="批量查询"><a href="#批量查询" class="headerlink" title="批量查询"></a>批量查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectUserByBatchId</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line">    userList.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Map条件查询"><a href="#Map条件查询" class="headerlink" title="Map条件查询"></a>Map条件查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectUserByMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;id&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Jone&quot;</span>);</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectByMap(map);</span><br><span class="line">    userList.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delete-删除数据"><a href="#delete-删除数据" class="headerlink" title="delete-删除数据"></a>delete-删除数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteUserById</span><span class="params">()</span></span>&#123;</span><br><span class="line">    userMapper.deleteById(<span class="number">1302239794451763202L</span>);</span><br><span class="line">    selectListTest();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除同样有批量删除和map删除，使用方式和查询的一样</p><h1 id="条件构造器"><a href="#条件构造器" class="headerlink" title="条件构造器"></a>条件构造器</h1><p>细心的就会发现，上面的CRUD都是一些简单的操作，如果是复杂的就没办法了，所以这时就要用到了条件构造器。</p><p>条件构造器有很多，具体的还请查看官方网文档，这里只会列举几个使用方法。</p><h2 id="isNotNull-不为空"><a href="#isNotNull-不为空" class="headerlink" title="isNotNull-不为空"></a>isNotNull-不为空</h2><p>查询name不为空的用户，并且邮箱部位空的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">isNotNullTest</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 查询name不为空的用户，并且邮箱部位空的用户</span></span><br><span class="line">QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line"><span class="comment">// name不为null</span></span><br><span class="line">wrapper.isNotNull(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"><span class="comment">// email部位null</span></span><br><span class="line">wrapper.isNotNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">userMapper.selectList(wrapper).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ge-大于等于"><a href="#ge-大于等于" class="headerlink" title="ge-大于等于"></a>ge-大于等于</h2><p>查询age大于等于22的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">geTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询age大于等于22的用户</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.ge(<span class="string">&quot;age&quot;</span>,<span class="number">22</span>);</span><br><span class="line">    userMapper.selectList(wrapper).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="eq-等于"><a href="#eq-等于" class="headerlink" title="eq-等于"></a>eq-等于</h2><p>查询name等于Jone的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eqTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询name等于Jone的用户</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Jone&quot;</span>);</span><br><span class="line">    System.out.println(userMapper.selectOne(wrapper));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>selectOne：只查询一条数据</p><h2 id="between-X与N之间的值"><a href="#between-X与N之间的值" class="headerlink" title="between-X与N之间的值"></a>between-X与N之间的值</h2><p>查询年龄在20到25之间的用户的数量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">betweenTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询年龄在20到25之间的用户的数量</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.between(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>,<span class="number">25</span>);</span><br><span class="line">    Integer count = userMapper.selectCount(wrapper);</span><br><span class="line">    System.out.println(count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>selectCount：查询数量</p><h2 id="like-模糊查询"><a href="#like-模糊查询" class="headerlink" title="like-模糊查询"></a>like-模糊查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">likeTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询name中包含a的用户</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.like(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; maps = userMapper.selectMaps(wrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>selectMaps：返回<code>List&lt;Map&gt;</code>形式的数据</p><h2 id="notLike-模糊查询"><a href="#notLike-模糊查询" class="headerlink" title="notLike-模糊查询"></a>notLike-模糊查询</h2><p>查询name中不包含a的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notLikeTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询name中不包含a的用户</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.notLike(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; maps = userMapper.selectMaps(wrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="likeLeft-左模糊查询"><a href="#likeLeft-左模糊查询" class="headerlink" title="likeLeft-左模糊查询"></a>likeLeft-左模糊查询</h2><p>查询name中以e结尾的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">likeLeftTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询name中以e结尾的用户</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.likeLeft(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;e&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; maps = userMapper.selectMaps(wrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="likeRight-左模糊查询"><a href="#likeRight-左模糊查询" class="headerlink" title="likeRight-左模糊查询"></a>likeRight-左模糊查询</h2><p>查询name中以j开头的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">likeRightTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 查询name中以j结开头的用户</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.likeRight(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;j&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; maps = userMapper.selectMaps(wrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="inSql"><a href="#inSql" class="headerlink" title="inSql"></a>inSql</h2><p>id 在子查询中查询出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inSqlTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// id 在子查询中查询出来</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.inSql(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;select id from user where id &lt; 5&quot;</span>);</span><br><span class="line">    List&lt;Object&gt; objects = userMapper.selectObjs(wrapper);</span><br><span class="line">    objects.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>selectObjs：返回<code>List&lt;Object&gt;</code>形式的数据</p><h2 id="orderByDesc-降序排序"><a href="#orderByDesc-降序排序" class="headerlink" title="orderByDesc-降序排序"></a>orderByDesc-降序排序</h2><p>根据id进行降序排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">orderByDescTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 根据id进行降序排序</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.orderByDesc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectList(wrapper);</span><br><span class="line">    userList.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h1><p>MyBatisPlus也提供了分页插件，但是需要稍微的配置一下</p><p>在配置类中添加分页插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/9/6 15:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> MyBatisPlus配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试分页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pageTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 第1页，5条数据</span></span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">    userMapper.selectPage(page,<span class="keyword">null</span>);</span><br><span class="line">    page.getRecords().forEach(System.out::println);</span><br><span class="line">    log.info(<span class="string">&quot;总条数：&quot;</span>+page.getTotal());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码生成器、"><a href="#代码生成器、" class="headerlink" title="代码生成器、"></a>代码生成器、</h1><blockquote><p>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</p></blockquote><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p><code>MyBatisPlus</code>在 <code>3.0.3</code>版本之后移除了代码生成器与模板引擎的默认依赖，需要手动添加相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/9/6 19:01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 代码生成</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGeneration</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 构建一个代码生成器对象</span></span><br><span class="line">        AutoGenerator autoGenerator = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line">        <span class="comment">// 配置策略</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        <span class="comment">// 获取项目路径</span></span><br><span class="line">        String projectPath = System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置输出目录</span></span><br><span class="line">        gc.setOutputDir(projectPath+<span class="string">&quot;src/main/java&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置作者</span></span><br><span class="line">        gc.setAuthor(<span class="string">&quot;啊哈哈&quot;</span>);</span><br><span class="line">        <span class="comment">// 是否打开资源管理器，false，不打开</span></span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// 是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// service名称</span></span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        <span class="comment">// ID类型</span></span><br><span class="line">        gc.setIdType(IdType.ASSIGN_ID);</span><br><span class="line">        <span class="comment">// 日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置数据源</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/mpdemo?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包的配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        <span class="comment">// 设置模块名称</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置包名</span></span><br><span class="line">        pc.setParent(<span class="string">&quot;cn.yanghuisen.mpdemo&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;t_user&quot;</span>);</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 自动lombok</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 逻辑删除</span></span><br><span class="line">        strategy.setLogicDeleteFieldName(<span class="string">&quot;flag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自动填充配置</span></span><br><span class="line">        TableFill createTime = <span class="keyword">new</span> TableFill(<span class="string">&quot;create_time&quot;</span>, FieldFill.INSERT);</span><br><span class="line">        TableFill updateTime = <span class="keyword">new</span> TableFill(<span class="string">&quot;update_time&quot;</span>, FieldFill.INSERT_UPDATE);</span><br><span class="line">        ArrayList&lt;TableFill&gt; fills = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        fills.add(createTime);</span><br><span class="line">        fills.add(updateTime);</span><br><span class="line">        strategy.setTableFillList(fills);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 乐观锁</span></span><br><span class="line">        strategy.setVersionFieldName(<span class="string">&quot;version&quot;</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把全局配置设置到代码生成器中</span></span><br><span class="line">        autoGenerator.setGlobalConfig(gc);</span><br><span class="line">        <span class="comment">// 把数据源设置到代码生成器中</span></span><br><span class="line">        autoGenerator.setDataSource(dsc);</span><br><span class="line">        <span class="comment">// 把包配置设置到代码生成器中</span></span><br><span class="line">        autoGenerator.setPackageInfo(pc);</span><br><span class="line">        <span class="comment">// 把策略配置设置到代码生成器中</span></span><br><span class="line">        autoGenerator.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行</span></span><br><span class="line">        autoGenerator.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="多数据源（2020-10-18补充）"><a href="#多数据源（2020-10-18补充）" class="headerlink" title="多数据源（2020-10-18补充）"></a>多数据源（2020-10-18补充）</h1><blockquote><p>多数据源，顾名思义，就是配置多个数据来源。一般项目中都是使用一个数据源就足够了，但是也有例外的时候，有时候就需要根据不同的业务需求连接不同的数据库进行查询。</p><p><code>MyBatis-Plus</code>中已经集成了多数据源的功能，只需要简单的配置就可以使用。</p></blockquote><h2 id="多数据源的使用"><a href="#多数据源的使用" class="headerlink" title="多数据源的使用"></a>多数据源的使用</h2><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><p><code>Mybatis-Plus</code>虽然支持多数据源配置，但是没有集成到<code>MyBatis-Plus</code>的的依赖中，需要单独添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/dynamic-datasource-spring-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面依赖是截止到我写多数据源这个文档的时候的最新的版本</p><h3 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h3><p>修改<code>application.yaml</code>文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="attr">primary:</span> <span class="string">master</span> <span class="comment"># 设置默认的数据源</span></span><br><span class="line">      <span class="attr">strict:</span> <span class="literal">false</span> <span class="comment"># 是否启用严格模式,默认不启动. 严格模式下未匹配到数据源直接报错, 非严格模式下则使用默认数据源primary所设置的数据源</span></span><br><span class="line">      <span class="attr">datasource:</span> <span class="comment"># 数据源</span></span><br><span class="line">        <span class="attr">master:</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mpdemo?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">        <span class="attr">slave_1:</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/slave_1?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8</span></span><br></pre></td></tr></table></figure><h3 id="DS"><a href="#DS" class="headerlink" title="@DS"></a>@DS</h3><table><thead><tr><th>注解</th><th>结果</th></tr></thead><tbody><tr><td>没有注解</td><td>使用默认数据源</td></tr><tr><td><code>@DS(&quot;dsName&quot;)</code></td><td>dsName为数据源名称</td></tr></tbody></table><p><code>@DS</code>注解就是切换数据源的关键，该注解可以声明在类和方法上。<font color="red">如果同时在类和方法上都声明了该注解，则方法上的优先于类上的</font>。（建议只在<code>service</code>上设数据源）</p><p>切换数据源非常简单，只需要在<code>service</code>方法上添加<code>@DS</code>注解即可，并且传递数据源名称即可</p><p>例子1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@DS(&quot;master&quot;)</span>   <span class="comment">// 默认就是master数据源，可以省略</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">master</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">    userList.forEach(x-&gt;log.info(x.toString()));</span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子2：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@DS(&quot;slave_1&quot;)</span>  <span class="comment">// 切换至slave_1数据源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">slave_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">    userList.forEach(x-&gt;log.info(x.toString()));</span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就完成了数据源的切换</p><h3 id="方法内切换数据源"><a href="#方法内切换数据源" class="headerlink" title="方法内切换数据源"></a>方法内切换数据源</h3><p>上面的数据源切换有一个问题，就是在一个方法内还是只能使用一个数据源，如果要在方法内切换到别的数据源是无法做到的。比如以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@DS(&quot;slave_1&quot;)</span>  <span class="comment">// 切换至slave_1数据源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">slave_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">    userList.forEach(x-&gt;log.info(x.toString()));</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    脑补这里有段代码，要切换至master数据源    </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种问题我在公司就遇到了，单使用<code>@DS</code>注解也是不行的。</p><p>这时就要用到<code>DynamicDataSourceContextHolder</code>类了，通过<code>DynamicDataSourceContextHolder</code>，在方法内切数据源</p><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@DS(&quot;slave_1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 切换数据源，参数为数据源名称</span></span><br><span class="line">    DynamicDataSourceContextHolder.push(<span class="string">&quot;master&quot;</span>);</span><br><span class="line">    List&lt;User&gt; userList = <span class="keyword">this</span>.dsMaster();</span><br><span class="line">    <span class="comment">// 移除数据源，数据源使用之后要移除掉，移除之后会恢复到@DS注解指定的数据源</span></span><br><span class="line">    DynamicDataSourceContextHolder.poll();</span><br><span class="line">    userList.forEach(x-&gt;log.info(x.toString()));</span><br><span class="line">    log.info(<span class="string">&quot;----切换数据源----&quot;</span>);</span><br><span class="line">    userList = <span class="keyword">this</span>.dsMaster();</span><br><span class="line">    userList.forEach(x-&gt;log.info(x.toString()));</span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>DynamicDataSourceContextHolder.push(&quot;master&quot;);</code>切换到指定数据源，并且使用之后要使用<code>DynamicDataSourceContextHolder.poll();</code>恢复到<code>@DS</code>指定的数据源。</p><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h2><p>在阿里巴巴开发手册中明确规定，所有的数据库表中都应该含有<code>create_time</code>和<code>update_time</code>两个字段(用于表示该条记录的创建和修改时间)。通过自动填充可以自动化的设置这两个字段的值，避免每次都要手动设置。自动填充有两种方式。</p><ul><li>方式一：数据库级别</li><li>方式二：代码级别s</li></ul><h3 id="数据库级别"><a href="#数据库级别" class="headerlink" title="数据库级别"></a>数据库级别</h3><p>数据库级别的就很简单了，给表中添加<code>create_time</code>和<code>update_time</code>字段后，设置下就好了。不同的数据库工具设置方法不一样，这里以<code>Navicat</code>为例。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231711977.png" alt="image.png"></p><p>不建议使用这种方式，一般工作中不允许随意改变数据库</p><h3 id="代码级别"><a href="#代码级别" class="headerlink" title="代码级别"></a>代码级别</h3><p>注：代码级别设置自动填充的话，需要关闭数据库级别的自动填充(取消Navicat中的根据当前时间戳更新)</p><p>通过<code>@TableField</code>注解设置填充策略。</p><p>修改实体类，添加<code>@TableField</code>注解，设置填充策略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置填充策略-插入时填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置填充策略-插入和更新时填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写自动填充处理器类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/9/6 15:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 自动填充处理器类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入时的填充策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新时的填充策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样在进行插入和更新操作时，就可以自动填充时间到数据库了。</p><h2 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h2><h3 id="什么是乐观锁，什么是悲观锁"><a href="#什么是乐观锁，什么是悲观锁" class="headerlink" title="什么是乐观锁，什么是悲观锁"></a>什么是乐观锁，什么是悲观锁</h3><blockquote><p><code>乐观锁</code>，顾名思义，很乐观。就是它总会知道自己不会出现问题，无论干什么都不会上锁。如果出现问题，再次更新测试。</p><p><code>悲观锁</code>，顾名思义，很悲观。就是它做什么都会上锁，再去操作。</p></blockquote><p>乐观锁在数据库中一般使用<code>version</code>字段表示。</p><h3 id="乐观锁的实现机制："><a href="#乐观锁的实现机制：" class="headerlink" title="乐观锁的实现机制："></a>乐观锁的实现机制：</h3><ul><li>取出记录时，获取当前version</li><li>更新时，带上这个version</li><li>执行更新时， set version = newVersion where version = oldVersion</li><li>如果version不对，就更新失败</li></ul><h3 id="乐观锁的实现"><a href="#乐观锁的实现" class="headerlink" title="乐观锁的实现"></a>乐观锁的实现</h3><p>给数据库表添加<code>version</code>字段，默认值为<code>1</code></p><p>实体类添加<code>version</code>属性，并给其添加<code>@Version</code>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/8/15 20:41</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 用户实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置填充策略-插入时填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置填充策略-插入和更新时填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 乐观锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建配置类，注册乐观锁插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/9/6 15:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> MyBatisPlus配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h2><blockquote><p>物理删除：直接把数据中的数据删除</p><p>逻辑删除：在数据中没有被删除，而是通过一个变量(字段)来表示其失效(删除)状态</p></blockquote><p>添加<code>flag</code>字段（用于表示是否是删除状态），类型为<code>int</code>，默认值为<code>0</code></p><ul><li>0：没有删除</li><li>1：已经删除</li></ul><p>实体类中添加<code>flag</code>属性，并且设置注解<code>@TableLogic</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.mpdemo.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/8/15 20:41</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> 用户实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置填充策略-插入时填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置填充策略-插入和更新时填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 乐观锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逻辑删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>application.yml</code>进行配置逻辑删除</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span>       <span class="comment"># 逻辑已经删除的值（默认为1）</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span>   <span class="comment"># 逻辑没有删除的值（默认为0）</span></span><br></pre></td></tr></table></figure><p>测试逻辑删除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteUserById</span><span class="params">()</span></span>&#123;</span><br><span class="line">    userMapper.deleteById(<span class="number">7L</span>);</span><br><span class="line">    selectListTest();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：在添加逻辑删除后，在查询时会自动过滤掉逻辑删除的记录。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mybatis </tag>
            
            <tag> MybatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(四)SpringCloud之Feign声明式服务调用</title>
      <link href="/2020/07/03/%E5%9B%9B-SpringCloud%E4%B9%8BFeign%E5%A3%B0%E6%98%8E%E5%BC%8F%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8/"/>
      <url>/2020/07/03/%E5%9B%9B-SpringCloud%E4%B9%8BFeign%E5%A3%B0%E6%98%8E%E5%BC%8F%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h1><h2 id="1、创建Maven聚合项目"><a href="#1、创建Maven聚合项目" class="headerlink" title="1、创建Maven聚合项目"></a>1、创建Maven聚合项目</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231706698.png" alt="在这里插入图片描述"></p><ul><li>Feign-Demo：父项目</li><li>eureka-server：Eureka注册中心</li><li>eureka-server02：Eureka注册中心</li><li>service-provider：服务提供者</li><li>service-consumer：服务消费者</li></ul><p>父项目:pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Feign-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service-provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service-consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 继承 spring-boot-starter-parent 依赖 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用继承方式，实现复用，符合继承的都可以被使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        集中定义依赖组件版本号，但不引入，</span></span><br><span class="line"><span class="comment">        在子工程中用到声明的依赖时，可以不加依赖的版本号，</span></span><br><span class="line"><span class="comment">        这样可以统一管理工程中用到的依赖版本</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Cloud Hoxton.SR5 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖管理 父项目只是声明依赖，子项目需要写明需要的依赖(可以省略版本信息) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- spring cloud 依赖 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、eureka注册中心"><a href="#2、eureka注册中心" class="headerlink" title="2、eureka注册中心"></a>2、eureka注册中心</h2><h3 id="2-1、eureka-server"><a href="#2-1、eureka-server" class="headerlink" title="2.1、eureka-server"></a>2.1、eureka-server</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Feign-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- netflix eureka server 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8761</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment"># 应用名称(集群下相同)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka01</span>            <span class="comment"># 主机名，不配置的时候将根据操作系统的主机名来获取</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 设置服务注册中心地址，指向另一个注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 注册中心对外暴露的注册地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启 EurekaServer 注解</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2、eureka-server02"><a href="#2-2、eureka-server02" class="headerlink" title="2.2、eureka-server02"></a>2.2、eureka-server02</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Feign-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-server02<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- netflix eureka server 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment"># 应用名称(集群下相同)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8762</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka02</span>            <span class="comment"># 主机名，不配置的时候将根据操作系统的主机名来获取</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 设置服务注册中心地址，指向另一个注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 注册中心对外暴露的注册地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启 EurekaServer 注解</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServer02Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServer02Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、provider服务提供者"><a href="#3、provider服务提供者" class="headerlink" title="3、provider服务提供者"></a>3、provider服务提供者</h2><h3 id="3-1、service-provider"><a href="#3-1、service-provider" class="headerlink" title="3.1、service-provider"></a>3.1、service-provider</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Feign-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>service-provider<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- netflix eureka client 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">1</span>, <span class="string">&quot;华为手机&quot;</span>, <span class="number">1</span>, <span class="number">5800D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">2</span>, <span class="string">&quot;联想笔记本&quot;</span>, <span class="number">1</span>, <span class="number">6888D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">3</span>, <span class="string">&quot;小米平板&quot;</span>, <span class="number">5</span>, <span class="number">2020D</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> productService.selectProductList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启 EurekaClient 注解，目前版本如果配置了 Eureka 注册中心，默认会开启该注解</span></span><br><span class="line"><span class="comment">//@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceProviderApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceProviderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2、service-provider02"><a href="#3-2、service-provider02" class="headerlink" title="3.2、service-provider02"></a>3.2、service-provider02</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Feign-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-provider02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>service-provider02<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- netflix eureka client 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">1</span>, <span class="string">&quot;华为手机&quot;</span>, <span class="number">1</span>, <span class="number">5800D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">2</span>, <span class="string">&quot;联想笔记本&quot;</span>, <span class="number">1</span>, <span class="number">6888D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">3</span>, <span class="string">&quot;小米平板&quot;</span>, <span class="number">5</span>, <span class="number">2020D</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> productService.selectProductList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启 EurekaClient 注解，目前版本如果配置了 Eureka 注册中心，默认会开启该注解</span></span><br><span class="line"><span class="comment">//@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceProviderApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceProviderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、consumer服务消费者"><a href="#4、consumer服务消费者" class="headerlink" title="4、consumer服务消费者"></a>4、consumer服务消费者</h2><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Feign-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>service-consumer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- netflix eureka client 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--去除jackson-dataformat-xml，否则会返回xml文件，而不是JSON--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring cloud openfeign 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eureka中默认集成<code>com.fasterxml.jackson.dataformat</code>，用于返回xml格式的数据，但是由于xml的等级比JSON高，所以在要返回JSON的时候，将会被替换为XML，剔除<code>com.fasterxml.jackson.dataformat</code>后就可以正常返回JSON数据。</p><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9090</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-consumer</span> <span class="comment"># 应用名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>         <span class="comment"># 是否将自己注册到注册中心，默认为 true</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">10</span> <span class="comment"># 表示 Eureka Client 间隔多久去服务器拉取注册信息，默认为 30 秒</span></span><br><span class="line">    <span class="attr">service-url:</span>                        <span class="comment"># 设置服务注册中心地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/,http://localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line">    <span class="keyword">private</span> String orderAddress;</span><br><span class="line">    <span class="keyword">private</span> Double totalPrice;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Product&gt; productList;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明需要调用的服务</span></span><br><span class="line"><span class="meta">@FeignClient(&quot;service-provider&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 配置需要调用的服务地址及参数</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/product/list&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Order(id, <span class="string">&quot;order-001&quot;</span>, <span class="string">&quot;中国&quot;</span>, <span class="number">22788D</span>,</span><br><span class="line">                productService.selectProductList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderService.selectOrderById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启 EurekaClient 注解，目前版本如果配置了 Eureka 注册中心，默认会开启该注解</span></span><br><span class="line"><span class="comment">//@EnableEurekaClient</span></span><br><span class="line"><span class="comment">// 开启 FeignClients 注解</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceConsumerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动项目，先启动两个注册中心，再启动两个服务提供者，最后启动服务消费者</p><p>访问：<a href="http://localhost:9090/order/1">http://localhost:9090/order/1</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231707840.png" alt="在这里插入图片描述"></p><h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><h2 id="1、全局"><a href="#1、全局" class="headerlink" title="1、全局"></a>1、全局</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RandomRule <span class="title">randomRule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> RandomRule();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、局部"><a href="#2、局部" class="headerlink" title="2、局部"></a>2、局部</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 负载均衡策略</span></span><br><span class="line"><span class="comment"># service-provider 为调用的服务的名称</span></span><br><span class="line"><span class="attr">service-provider:</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="attr">NFLoadBalancerRuleClassName:</span> <span class="string">com.netflix.loadbalancer.RandomRule</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Feign </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(三)SpringCloud之Consul注册中心</title>
      <link href="/2020/07/03/%E4%B8%89-SpringCloud%E4%B9%8BConsul%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
      <url>/2020/07/03/%E4%B8%89-SpringCloud%E4%B9%8BConsul%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Consul注册中心"><a href="#Consul注册中心" class="headerlink" title="Consul注册中心"></a>Consul注册中心</h1><h1 id="Consul介绍"><a href="#Consul介绍" class="headerlink" title="Consul介绍"></a>Consul介绍</h1><p>Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其它分布式 服务注册与发现的方案，Consul 的方案更“一站式”，内置了服务注册与发现框架、分布一致性协议实 现、健康检查、Key/Value 存储、多数据中心方案，不再需要依赖其它工具（比如 ZooKeeper 等），使 用起来也较为简单。</p><p>Consul 使用 Go 语言编写，因此具有天然可移植性（支持Linux、Windows 和 Mac OS）；安装包仅 包含一个可执行文件，方便部署，与 Docker 等轻量级容器可无缝配合。</p><h1 id="Consul特性"><a href="#Consul特性" class="headerlink" title="Consul特性"></a>Consul特性</h1><ul><li>Raft算法</li><li>服务发现</li><li>健康检查</li><li>Key/Value储存</li><li>多数据中心</li><li>支持Http和Dns协议接口</li><li>官方提供Web管理界面</li></ul><h1 id="Consul角色"><a href="#Consul角色" class="headerlink" title="Consul角色"></a>Consul角色</h1><h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><p>客户端，无状态，将Htpp和DNS接口请求转发给局域网内的服务端集群。</p><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><p>服务端，保存配置信息，高可用集群，每个书中心的server数量推荐3个或5个。</p><h1 id="Consule安装"><a href="#Consule安装" class="headerlink" title="Consule安装"></a>Consule安装</h1><h2 id="1、下载Consul"><a href="#1、下载Consul" class="headerlink" title="1、下载Consul"></a>1、下载Consul</h2><p><a href="https://www.consul.io/downloads">https://www.consul.io/downloads</a></p><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><p>Consul的安装及其简单，下载后的Consul程序只有一个exe文件，只需要在cmd命令下执行相应命令即可。</p><h2 id="3、启动Consul"><a href="#3、启动Consul" class="headerlink" title="3、启动Consul"></a>3、启动Consul</h2><p>Consul可执行文件同级目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -dev表示开发模式运行，也可以使用-server，表示服务模式运行 -client=0.0.0.0，绑定客户端接口的ip</span></span><br><span class="line">consul agent -dev -client=0.0.0.0</span><br></pre></td></tr></table></figure><p>为了方便启动，避免每次启动都要执行上述命令，可以编写一个批处理脚本</p><p>run.bat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:: -dev表示开发模式运行，也可以使用-server，表示服务模式运行 -client=0.0.0.0，绑定客户端接口的ip</span><br><span class="line">consul agent -dev -client=0.0.0.0</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>访问管理页面：<a href="http://localhost:8500/%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%E8%A1%A8%E7%A4%BA%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F">http://localhost:8500/，如下图表示启动成功</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231704386.png" alt="在这里插入图片描述"></p><h1 id="Consul的入门使用"><a href="#Consul的入门使用" class="headerlink" title="Consul的入门使用"></a>Consul的入门使用</h1><h2 id="1、创建Maven聚合项目"><a href="#1、创建Maven聚合项目" class="headerlink" title="1、创建Maven聚合项目"></a>1、创建Maven聚合项目</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231704772.png" alt="在这里插入图片描述"></p><ul><li>Consul-Demo：父项目</li><li>service-consumer：子项目-服务消费者</li><li>service-provier：子项目-服务提供者</li></ul><p>父项目：pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Consul-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service-provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service-consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 继承 spring-boot-starter-parent 依赖 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用继承方式，实现复用，符合继承的都可以被使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        集中定义依赖组件版本号，但不引入，</span></span><br><span class="line"><span class="comment">        在子工程中用到声明的依赖时，可以不加依赖的版本号，</span></span><br><span class="line"><span class="comment">        这样可以统一管理工程中用到的依赖版本</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Cloud Hoxton.SR5 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖管理 父项目只是声明依赖，子项目需要写明需要的依赖(可以省略版本信息) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- spring cloud 依赖 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、Service-Provider：服务提供者"><a href="#2、Service-Provider：服务提供者" class="headerlink" title="2、Service-Provider：服务提供者"></a>2、Service-Provider：服务提供者</h2><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Consul-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>service-provider<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring cloud consul 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot actuator 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7070</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-provider</span> <span class="comment"># 应用名称</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="comment"># 配置 Consul 注册中心</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="comment"># 注册中心的访问地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="comment"># 服务发现相关配置</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">register:</span> <span class="literal">true</span>                                <span class="comment"># 是否需要注册</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">$&#123;spring.application.name&#125;-01</span>    <span class="comment"># 注册实例 id（必须唯一）</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span>      <span class="comment"># 服务名称</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;server.port&#125;</span>                          <span class="comment"># 服务端口</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>                       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">        <span class="attr">ip-address:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;</span> <span class="comment"># 服务请求 ip</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务提供者启动类：ServiceProviderApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/16 20:09</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 服务提供者启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceProviderApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceProviderApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类：Product.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span>                       <span class="comment">// lombok生成set、get方法</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span>          <span class="comment">// lombok生成无参构造器</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span>         <span class="comment">// lombok生成全参构造器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务接口：ProductService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务接口实现类：ProductServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">1</span>, <span class="string">&quot;华为手机&quot;</span>, <span class="number">1</span>, <span class="number">5800D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">2</span>, <span class="string">&quot;联想笔记本&quot;</span>, <span class="number">1</span>, <span class="number">6888D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">3</span>, <span class="string">&quot;小米平板&quot;</span>, <span class="number">5</span>, <span class="number">2020D</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层：ProductController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> productService.selectProductList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动项目，查看服务提供者是否成功注册到Consul注册中心。</p><p>访问：<a href="http://localhost:8500/">http://localhost:8500/</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231705626.png" alt="在这里插入图片描述"><br>按照创建provider的方式创建provider02，并修改配置文件的端口和实例ID</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7071</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-provider</span> <span class="comment"># 应用名称</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="comment"># 配置 Consul 注册中心</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="comment"># 注册中心的访问地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="comment"># 服务发现相关配置</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">register:</span> <span class="literal">true</span>                                <span class="comment"># 是否需要注册</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">$&#123;spring.application.name&#125;-02</span>    <span class="comment"># 注册实例 id（必须唯一）</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span>      <span class="comment"># 服务名称</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;server.port&#125;</span>                          <span class="comment"># 服务端口</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>                       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">        <span class="attr">ip-address:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;</span> <span class="comment"># 服务请求 ip</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动provider02，访问：<a href="http://localhost:8500/">http://localhost:8500/</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231705053.png" alt="在这里插入图片描述"></p><h2 id="3、Service-Consumer：服务消费者"><a href="#3、Service-Consumer：服务消费者" class="headerlink" title="3、Service-Consumer：服务消费者"></a>3、Service-Consumer：服务消费者</h2><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Consul-Demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>service-consumer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring cloud consul 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot actuator 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9090</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-consumer</span> <span class="comment"># 应用名称</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="comment"># 配置 Consul 注册中心</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="comment"># 注册中心的访问地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="comment"># 服务发现相关配置</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">register:</span> <span class="literal">false</span>                               <span class="comment"># 是否需要注册</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">$&#123;spring.application.name&#125;-01</span>    <span class="comment"># 注册实例 id（必须唯一）</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span>      <span class="comment"># 服务名称</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;server.port&#125;</span>                          <span class="comment"># 服务端口</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>                       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">        <span class="attr">ip-address:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;</span> <span class="comment"># 服务请求 ip</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类：Product.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类：Order.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line">    <span class="keyword">private</span> String orderAddress;</span><br><span class="line">    <span class="keyword">private</span> Double totalPrice;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Product&gt; productList;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费者服务接口：OrderService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费者服务接口：OrderServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.ParameterizedTypeReference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Order(id, <span class="string">&quot;order-001&quot;</span>, <span class="string">&quot;中国&quot;</span>, <span class="number">22788D</span>,</span><br><span class="line">                selectProductListByLoadBalancerAnnotation());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Product&gt; <span class="title">selectProductListByLoadBalancerAnnotation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ResponseEntity: 封装了返回数据</span></span><br><span class="line">        ResponseEntity&lt;List&lt;Product&gt;&gt; response = restTemplate.exchange(</span><br><span class="line">                <span class="string">&quot;http://service-provider/product/list&quot;</span>,</span><br><span class="line">                HttpMethod.GET,</span><br><span class="line">                <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> ParameterizedTypeReference&lt;List&lt;Product&gt;&gt;() &#123;</span><br><span class="line">                &#125;);</span><br><span class="line">        <span class="keyword">return</span> response.getBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层：OrderController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderService.selectOrderById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费者启动类：ServiceConsumerApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceConsumerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动消费者服务，访问：<a href="http://localhost:9090/order/1">http://localhost:9090/order/1</a></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231705230.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Consul </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(二)SpringCloud之Ribbon负载均衡</title>
      <link href="/2020/07/03/%E4%BA%8C-SpringCloud%E4%B9%8BRibbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2020/07/03/%E4%BA%8C-SpringCloud%E4%B9%8BRibbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="Ribbon负载均衡的使用"><a href="#Ribbon负载均衡的使用" class="headerlink" title="Ribbon负载均衡的使用"></a>Ribbon负载均衡的使用</h1><h1 id="1、什么是Ribbon"><a href="#1、什么是Ribbon" class="headerlink" title="1、什么是Ribbon"></a>1、什么是Ribbon</h1><p>Spring Cloud Ribbon是一个基于HTTP和TCP的客户端负载均衡工具，它基于Netflix Ribbon实现。通过Spring Cloud的封装，可以让我们轻松地将面向服务的REST模版请求自动转换成客户端负载均衡的服务调用。Spring Cloud Ribbon虽然只是一个工具类框架，它不像服务注册中心、配置中心、API网关那样需要独立部署，但是它几乎存在于每一个Spring Cloud构建的微服务和基础设施中。包括Feign提供的声明式服务嗲用也是基于该Ribbon实现的。</p><p>Ribbon默认提供7种负载均衡算法</p><ul><li>轮询策略(默认)</li><li>权重轮询策略</li><li>随机策略</li><li>最少并发策略</li><li>重试策略</li><li>可用性敏感策略</li><li>区域敏感策略</li></ul><p>如果以上七种算法都不满足需求，还可以自定义负载均衡算法</p><h1 id="2、Ribbon的作用是什么"><a href="#2、Ribbon的作用是什么" class="headerlink" title="2、Ribbon的作用是什么"></a>2、Ribbon的作用是什么</h1><p>Ribbon提供了一套适用于微服务的负载均衡解决方案。</p><h1 id="3、负载均衡不同方案的区别"><a href="#3、负载均衡不同方案的区别" class="headerlink" title="3、负载均衡不同方案的区别"></a>3、负载均衡不同方案的区别</h1><p>目前业界主流的负载均衡方案可以分为两类</p><ul><li>集中式负载均衡(服务器负载均衡)</li><li>进程式负载均衡(客户端负载均衡，Ribbon就属于该方案)</li></ul><h2 id="3-1、集中式负载均衡"><a href="#3-1、集中式负载均衡" class="headerlink" title="3.1、集中式负载均衡"></a>3.1、集中式负载均衡</h2><p>集中式负载均衡既是在Consumer和provider之间使用独立的负载均衡设置(硬件或者软件)，由该设置负责把访问请求通过某种策略转发只provider。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231657562.png" alt="在这里插入图片描述"></p><h2 id="3-2、进程内负载均衡"><a href="#3-2、进程内负载均衡" class="headerlink" title="3.2、进程内负载均衡"></a>3.2、进程内负载均衡</h2><p>将负载均衡逻辑集成到Consumer，Consumer从服务注册中心货值有哪些地址可以使用，然后自己再从这些地址中选择出一个适合的Provider。Ribbon就属于这种，它只是一个雷虎，集成与Consumer进程，Consumer通过它来获取Provider的地址。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231657522.png" alt="在这里插入图片描述"></p><h1 id="4、负载均衡策略"><a href="#4、负载均衡策略" class="headerlink" title="4、负载均衡策略"></a>4、负载均衡策略</h1><h2 id="4-1、轮询策略-默认"><a href="#4-1、轮询策略-默认" class="headerlink" title="4.1、轮询策略(默认)"></a>4.1、轮询策略(默认)</h2><p>ClassName：<code>RoundRobinRule</code></p><p>实现原理：按照顺序依次获取，每次都获取下一个，循环。</p><h2 id="4-2、权重轮询策略"><a href="#4-2、权重轮询策略" class="headerlink" title="4.2、权重轮询策略"></a>4.2、权重轮询策略</h2><p>ClassName：<code>WeightedResponseTimeRule</code></p><p>实现原理：根据每个Provider的相应时间分配一个权重，相应时间越长，权重越小，被选中的可能性就越低。一开始为轮询策略，并开启一个计时器，每30秒收集一次每个Provider的平均响应时间，当信息足够时，给每个Provider附上一个权重，并按权重随机选择Provider，权重越高的Provider会被高概率选中。</p><h2 id="4-3、随机策略"><a href="#4-3、随机策略" class="headerlink" title="4.3、随机策略"></a>4.3、随机策略</h2><p>ClassName：<code>RandomRule</code></p><p>实现原理：从Provider中随机选取一个。</p><h2 id="4-4、最少并发数策略"><a href="#4-4、最少并发数策略" class="headerlink" title="4.4、最少并发数策略"></a>4.4、最少并发数策略</h2><p>ClassName：<code>BestAvailableRule</code></p><p>实现原理：选在请求中并发量最小的Provider，排除熔断的Provider。</p><h2 id="4-5、重试策略"><a href="#4-5、重试策略" class="headerlink" title="4.5、重试策略"></a>4.5、重试策略</h2><p>ClassName：<code>RetryRule</code></p><p>实现原理：轮询策略的增强版，区别在于，轮询策略当服务器不可用时，不会做任何处理，而重试策略在服务不可用时会重新尝试集群中的其他节点。</p><h2 id="4-6、可用性策略"><a href="#4-6、可用性策略" class="headerlink" title="4.6、可用性策略"></a>4.6、可用性策略</h2><p>ClassName：<code>AvailabilityFilteringRule</code></p><p>实现原理：过滤掉性能差的Provider，过滤掉Eureka中处于一直连接失败的Provide。过滤掉高并发的Provider。</p><h2 id="4-7、区域敏感策略"><a href="#4-7、区域敏感策略" class="headerlink" title="4.7、区域敏感策略"></a>4.7、区域敏感策略</h2><p>ClassName：<code>ZoneAvoidanceRule</code></p><p>实现原理：以一个区域为单位，一旦这个这个区域中的服务出现不可用，则丢弃整个区域，从其他区域中选取可用的Provider。如果这个IP区域中有一个或多个实例不可达或响应变慢，都会降低该区域内其他IPs被选中的权重。</p><h1 id="5、使用"><a href="#5、使用" class="headerlink" title="5、使用"></a>5、使用</h1><h2 id="5-1、入门使用"><a href="#5-1、入门使用" class="headerlink" title="5.1、入门使用"></a>5.1、入门使用</h2><p>Provider02添加依赖</p><p>Eureka中包含Ribbon依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- netflix eureka client 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring boot actuator 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Provider配置文件</p><p>多个Provider之间端口不可重复。但是应用名称要一致。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7070</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-provider</span> <span class="comment"># 应用名称(集群下相同)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 设置服务注册中心地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@localhost:8761/eureka/,http://root:123456@localhost:8762/eureka/</span></span><br><span class="line"><span class="comment"># 度量指标监控与健康检查</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">shutdown</span>         <span class="comment"># 开启 shutdown 端点访问</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">shutdown:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span>               <span class="comment"># 开启 shutdown 实现优雅停服</span></span><br></pre></td></tr></table></figure><p>配置完成，默认就是轮询策略。</p><h2 id="5-2、指定其他负载均衡策略"><a href="#5-2、指定其他负载均衡策略" class="headerlink" title="5.2、指定其他负载均衡策略"></a>5.2、指定其他负载均衡策略</h2><p>Ribbon是进程内负载均衡，所以需要在Consumer中进行指定要使用的负载均衡策略。</p><h3 id="5-2-1、全局"><a href="#5-2-1、全局" class="headerlink" title="5.2.1、全局"></a>5.2.1、全局</h3><p>在启动类中或配置类中注入负载均衡策略对象，则所有的服务在请求时均使用该策略。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IOC容器注入RandomRule</span></span><br><span class="line"><span class="comment">// RandomRule轮询策略</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RandomRule <span class="title">randomRule</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> RandomRule();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-2、局部"><a href="#5-2-2、局部" class="headerlink" title="5.2.2、局部"></a>5.2.2、局部</h3><p>修改配置文件指定服务的负载均衡策略</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service-provider是服务的名称</span></span><br><span class="line"><span class="attr">service-provider:</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="comment"># 指定负载均衡策略类名</span></span><br><span class="line">    <span class="attr">NFLoadBalancerRuleClassName:</span> <span class="string">com.netflix.loadbalancer.RandomRule</span></span><br></pre></td></tr></table></figure><h1 id="6、点对点直连"><a href="#6、点对点直连" class="headerlink" title="6、点对点直连"></a>6、点对点直连</h1><p>在开发中，每次测试都从注册中心获取服务，比较麻，所以可以直接绕过注册中心，直连服务提供者获取服务。这种就叫做点对点直连。</p><p><strong>添加修改依赖</strong></p><p>注释掉Consumer原有的Eureka依赖，添加Ribbon依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- netflix eureka server 依赖 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/dependency&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改Consumer配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service-provider是服务的名称</span></span><br><span class="line"><span class="attr">service-provider:</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="comment"># 指定负载均衡策略类名</span></span><br><span class="line">    <span class="attr">NFLoadBalancerRuleClassName:</span> <span class="string">com.netflix.loadbalancer.RandomRule</span></span><br><span class="line">    <span class="comment"># Provider服务列表，多个服务之间使用,分隔</span></span><br><span class="line">    <span class="attr">listOfServers:</span> <span class="string">http://localhost:7070,http://localhost:7071</span></span><br><span class="line"><span class="comment"># 关闭Eureka实现Ribbon点对点直连</span></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">eureka:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span>  <span class="comment"># false关闭</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Ribbon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(一)SpringCloud之Eureka注册中心</title>
      <link href="/2020/07/03/%E4%B8%80-SpringCloud%E4%B9%8BEureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
      <url>/2020/07/03/%E4%B8%80-SpringCloud%E4%B9%8BEureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Eureka注册中心"><a href="#Eureka注册中心" class="headerlink" title="Eureka注册中心"></a>Eureka注册中心</h1><h1 id="1、什么是注册中心"><a href="#1、什么是注册中心" class="headerlink" title="1、什么是注册中心"></a>1、什么是注册中心</h1><p>打个比方，注册中心就好比手机中的通讯录，所有的联系人的联系方式就在这个通讯录中储存。当需要打电话的时候，只需要查询通讯录就可以获取某个联系人的联系方式。</p><p>注册中心类似于通信录，只不过注册中心储存的不是联系人的联系方式，而是每个服务的信息，从注册中心获取服务就好比通讯录的查询联系人，向注册中心注册服务，就好比通讯录的保存联系人，先有注册，才能查找。</p><blockquote><p>注：注册中心只不过是用来注册和获取服务，并不会用来调取服务，具体的调取服务有获取服务方实现。就好比通讯录只负责储存和查询联系人，查到联系人后使用拨号软件拨打查询到的联系人电话。</p></blockquote><h1 id="2、CAP原则和BASE理论"><a href="#2、CAP原则和BASE理论" class="headerlink" title="2、CAP原则和BASE理论"></a>2、CAP原则和BASE理论</h1><h2 id="2-1、CAP原则"><a href="#2-1、CAP原则" class="headerlink" title="2.1、CAP原则"></a>2.1、CAP原则</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231709050.jpeg" alt="在这里插入图片描述"></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>Consistency</td><td><strong>一致性</strong>。也叫做原子性。系统在执行某些操作后数据仍然处于一致的状态。在分布式系统中，更新操作执行成功后所有的用户都应该读到最新的值，这样的系统被认为是具有强一致性的。等同于所有节点访问同一份最新的数据副本。</td></tr><tr><td>Availability</td><td><strong>可用性</strong>。每一个操作总是能够在一定的时间内返回结果，这里需要注意的是”一定时间内”和”返回结果”。一定时间内指的是在可以容忍的范围内返回结果，结果可以是成功或者是失败，且不保证获取的数据为最新数据。</td></tr><tr><td>Partition tolerance</td><td><strong>分区容错性</strong>。分布式系统在遇到任何网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务，除非整个网络环境都发生了故障。</td></tr></tbody></table><p>CAP原则又称CAP定理。值得是在系统中，<code>Consistency</code>、<code>Availability</code>和<code>Partition tolerance</code>三者不可兼得。最多只能同时满足其中两者。</p><p>CAP 由 Eric Brewer 在 2000 年 PODC 会议上提出。该猜想在提出两年后被证明成立，成为我们熟知的 <code>CAP</code>定理。<code>CAP</code>三者不可兼得。</p><ul><li>CA：一致性和可用性。如果同时要满足一致性和可用性，那么只有单体应用可以实现。因为如果是分布式应用的话，如果要保证多个系统的一致性，可定要消耗时间。那么可用性肯定就达不到要求。只有单体应用，可以满足<code>CA</code>。</li><li>CP：一致性和分区容错性。这种典型的案例就是涉及到金钱的系统。涉及到金钱的系统肯定要保证数据一致，在分布式中多台服务器要保证数据一致，肯定不能再一定的时间内返回数据。好比在进行金钱转账的时候，宁愿牺牲可用性，也要保证数据一致性。</li><li>AP：可用性和分区容容错性。这种的经典案例就是抢购性的系统。例如春运的火车票，有时候明明看到还有票，但是在下单的时候却被告知没票了，这就是因为需要满足可用性，在一定的时间内返回数据，从而放弃了数据的一致性。但是这种情况在最后会有一个最终一致性。好比购票，显示的是还有车票，但是下单时却显示失败，就是因为最终一致性。在最后的时候会进行一致性判断。</li></ul><blockquote><p>如今，对于大多数互联网应用场景，主机众多，部署分散，并且规模也越来越大，节点只会越来越多，所以节点故障、网络故障时常态，分区容错性也就成为了一个分布式系统必然要面对的问题。那么就只能在C和A之前进行取舍。但是对于设计金钱的系统却不同，涉及到金钱的是非常重要的，宁愿牺牲A，也要保证C。如果出现机器故障的话，宁愿停止服务。</p><p>没有最好的策略，只有最符合当前系统的策略。</p></blockquote><h2 id="2-2、BASE理论"><a href="#2-2、BASE理论" class="headerlink" title="2.2、BASE理论"></a>2.2、BASE理论</h2><p>CAP 理论已经提出好多年了，难道真的没有办法解决这个问题吗？也许可以做些改变。比如 C 不必使用那么强的一致性，可以先将数据存起来，稍后再更新，实现所谓的 “最终一致性”。这个思路又是一个庞大的问题，同时也引出了第二个理论 BASE 理论。</p><p>BASE全称为 Basically Available(基本可用)、Soft state(软状态)和Eventually consistent(最终一致性)三个短语句的缩写，来自 ebay 的架构师提出。</p><p>BASE 理论是对 CAP 中一致性和可用性权衡的结果，其来源于对大型互联网分布式实践的总结，是基于 CAP 定理逐步演化而来的。其核心思想是：既然无法做到强一致性（Strong consistency），但每个应用都可以根据自身的业务特点，采用适当的方式来使系统达到最终一致性（Eventual consistency）。</p><h3 id="2-2-1、Basically-Available-基本可用"><a href="#2-2-1、Basically-Available-基本可用" class="headerlink" title="2.2.1、Basically Available(基本可用)"></a>2.2.1、Basically Available(基本可用)</h3><p>基本可用是指分布式系统在出现故障时，允许损失部分可用性（例如响应时间、功能上的可用性）。需要注意的是，基本可用绝不等价于系统不可用。</p><ul><li>响应时间上的丢失：例如原先查询数据只需要0.5秒，但是现在由于机器故障可以运行返回响应时间变为1~2秒。</li><li>功能上的可用性：例如双十一购物的时候，为了满足非常庞大的流量冲击，为了保证系统的大方向的稳定，允许对一些服务降级处理（缩减服务器集群，给别的访问量大的使用）或者停止一些非必要的服务。</li></ul><h3 id="2-2-2、Soft-state（软状态）"><a href="#2-2-2、Soft-state（软状态）" class="headerlink" title="2.2.2、Soft state（软状态）"></a>2.2.2、Soft state（软状态）</h3><p>相对于原子性而言，要求多个节点的数据副本都是一致的，这是一种 “硬状态”。</p><p>软状态是指允许系统存在中间状态，而该中间状态不会影响系统整体可用性。分布式存储中一般一份数据会有多个副本，允许不同副本数据同步的延时就是软状态的体现。</p><h3 id="2-2-3、Eventually-consistent（最终一致性）"><a href="#2-2-3、Eventually-consistent（最终一致性）" class="headerlink" title="2.2.3、Eventually consistent（最终一致性）"></a>2.2.3、Eventually consistent（最终一致性）</h3><p>系统不可能一直是软状态，必须有个时间期限。在期限过后，应当保证所有副本保持数据一致性。从而达到数据的最终一致性。这个时间期限取决于网络延时，系统负载，数据复制方案设计等等因素。</p><p>实际上，不只是分布式系统使用最终一致性，关系型数据库在某个功能上，也是使用最终一致性的，比如备份，数据库的复制都是需要时间的，这个复制过程中，业务读取到的值就是旧值。当然，最终还是达成了数据一致性。这也算是一个最终一致性的经典案例。</p><h1 id="3、为什么需要注册中心"><a href="#3、为什么需要注册中心" class="headerlink" title="3、为什么需要注册中心"></a>3、为什么需要注册中心</h1><p>在分布式系统中，不仅仅是需要在注册中心找到服务和服务地址的映射关系那么简单，还需要考虑很多的复杂问题：</p><ul><li>服务注册后，如何被及时的发现</li><li>服务宕机后，如何及时处理下线</li><li>服务如何有效的水平扩展</li><li>服务发现时，如何进行路由</li><li>服务异常时，如何进行降级</li><li>注册溪红心如果实现自身的高可用</li></ul><p>这些问题的解决都依赖于注册中心。简单看，注册中心的功能有点类似于 DNS 服务器或者负载均衡器，而实际上，注册中心作为微服务的基础组件，可能要更加复杂，也需要更多的灵活性和时效性。当然上面的问题，单单使用注册中心是无法完成的，还需要使用SpringCloud的其他组件共同完成。</p><p>注册中心解决了一下问题：</p><ul><li>服务管理</li><li>服务之间的自动发现</li><li>服务的依赖关系管理</li></ul><h1 id="4、Eureka"><a href="#4、Eureka" class="headerlink" title="4、Eureka"></a>4、Eureka</h1><h2 id="4-1、Eureka介绍"><a href="#4-1、Eureka介绍" class="headerlink" title="4.1、Eureka介绍"></a>4.1、Eureka介绍</h2><p>Eureka是Netflix开发的服务发现框架，本身是一个基于REST的服务，主要用于定位运行在AWS域中的中间层服务，以达到负载均衡和中间层服务故障转移的目的。SpringCloud将它集成在其子项目spring-cloud-netflix中，以实现SpringCloud的服务发现功能。</p><h2 id="4-2、Eureka注册中心的各个角色"><a href="#4-2、Eureka注册中心的各个角色" class="headerlink" title="4.2、Eureka注册中心的各个角色"></a>4.2、Eureka注册中心的各个角色</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231709936.jpeg" alt="在这里插入图片描述"></p><ol><li><strong>Eureka Server：</strong>通过 Register、Get、Renew 等接口提供服务的注册和发现。</li><li><strong>Service Provider（Eureka Client）：</strong>服务提供方，把自身的服务实例注册到 Eureka Server 中。</li><li><strong>Service Consumer（Eureka Client）：</strong>服务调用方，通过 Eureka Server 获取服务列表，消费服务。</li></ol><h2 id="4-3、Eureka入门案例"><a href="#4-3、Eureka入门案例" class="headerlink" title="4.3、Eureka入门案例"></a>4.3、Eureka入门案例</h2><h3 id="4-3-1、创建Mave聚合项目"><a href="#4-3-1、创建Mave聚合项目" class="headerlink" title="4.3.1、创建Mave聚合项目"></a>4.3.1、创建Mave聚合项目</h3><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231709094.png" alt="在这里插入图片描述"></p><ul><li>server01：注册中心</li><li>server02：注册中心（后期搭建集群版准备）</li><li>provider：服务提供者</li><li>consumer：服务消费者</li></ul><h3 id="4-3-2、添加依赖，配置文件"><a href="#4-3-2、添加依赖，配置文件" class="headerlink" title="4.3.2、添加依赖，配置文件"></a>4.3.2、添加依赖，配置文件</h3><h4 id="4-3-2-1、父项目"><a href="#4-3-2-1、父项目" class="headerlink" title="4.3.2.1、父项目"></a>4.3.2.1、父项目</h4><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 继承 spring-boot-starter-parent 依赖 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用继承方式，实现复用，符合继承的都可以被使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        集中定义依赖组件版本号，但不引入，</span></span><br><span class="line"><span class="comment">        在子工程中用到声明的依赖时，可以不加依赖的版本号，</span></span><br><span class="line"><span class="comment">        这样可以统一管理工程中用到的依赖版本</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud Hoxton.SR1 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 项目依赖管理 父项目只是声明依赖，子项目需要写明需要的依赖(可以省略版本信息) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring cloud 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-2-2、server02"><a href="#4-3-2-2、server02" class="headerlink" title="4.3.2.2、server02"></a>4.3.2.2、server02</h4><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- netflix eureka server 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8761</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment"># 应用名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span>  <span class="comment"># 主机名，不配置的时候将根据操作系统的主机名来获取</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>   <span class="comment"># 是否将自己注册到注册中心，默认为 true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>         <span class="comment"># 是否从注册中心获取服务注册信息，默认为 true</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 注册中心对外暴露的注册地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>如果是单节点需要把<code>register-with-eureka</code>和<code>fetch-registry</code>设置为false，否则会报错</p></blockquote><h3 id="4-3-3、单节点启动"><a href="#4-3-3、单节点启动" class="headerlink" title="4.3.3、单节点启动"></a>4.3.3、单节点启动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/15 15:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span>     <span class="comment">// 开启EurekaServer注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServer01Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServer01Application.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问：<a href="http://localhost:8761/">http://localhost:8761/</a></p><h3 id="4-3-4、高可用（集群）"><a href="#4-3-4、高可用（集群）" class="headerlink" title="4.3.4、高可用（集群）"></a>4.3.4、高可用（集群）</h3><p>server02</p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- netflix eureka server 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>server02:application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8762</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment"># 应用名称(集群下相同)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka02</span>            <span class="comment"># 主机名，不配置的时候将根据操作系统的主机名来获取</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 设置服务注册中心地址，指向另一个注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 注册中心对外暴露的注册地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure><p>server01:application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8761</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment"># 应用名称(集群下相同)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka01</span>            <span class="comment"># 主机名，不配置的时候将根据操作系统的主机名来获取</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 设置服务注册中心地址，指向另一个注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 注册中心对外暴露的注册地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8762/eureka/</span></span><br></pre></td></tr></table></figure><p>server02：启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/15 15:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServer02Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServer01Application.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问：<a href="http://localhost:8761/">http://localhost:8761/</a> 或者 <a href="http://localhost:8762/">http://localhost:8762/</a></p><h3 id="4-3-5、显示IP-端口"><a href="#4-3-5、显示IP-端口" class="headerlink" title="4.3.5、显示IP+端口"></a>4.3.5、显示IP+端口</h3><p>(server01和server02)：application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br></pre></td></tr></table></figure><h3 id="4-3-6、provider"><a href="#4-3-6、provider" class="headerlink" title="4.3.6、provider"></a>4.3.6、provider</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- netflix eureka client 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7070</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-provider</span> <span class="comment"># 应用名称(集群下相同)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 设置服务注册中心地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/,http://localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> productService.selectProductList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类：接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务类：实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> com.example.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">selectProductList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">1</span>, <span class="string">&quot;华为手机&quot;</span>, <span class="number">2</span>, <span class="number">5888D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">2</span>, <span class="string">&quot;联想笔记本&quot;</span>, <span class="number">1</span>, <span class="number">6888D</span>),</span><br><span class="line">                <span class="keyword">new</span> Product(<span class="number">3</span>, <span class="string">&quot;小米平板&quot;</span>, <span class="number">5</span>, <span class="number">2666D</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启 EurekaClient 注解，目前版本如果配置了 Eureka 注册中心，默认会开启该注解</span></span><br><span class="line"><span class="comment">//@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceProviderApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceProviderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问：<a href="http://localhost:8761/">http://localhost:8761/</a> 或者 <a href="http://localhost:8762/%E3%80%82%E6%9F%A5%E7%9C%8B%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85%E6%98%AF%E5%90%A6%E5%B7%B2%E7%BB%8F%E6%B3%A8%E5%86%8C%E5%88%B0%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83">http://localhost:8762/。查看服务提供者是否已经注册到注册中心</a></p><h3 id="4-3-7、consumer"><a href="#4-3-7、consumer" class="headerlink" title="4.3.7、consumer"></a>4.3.7、consumer</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- netflix eureka client 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring boot web 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- lombok 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring boot test 依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9090</span> <span class="comment"># 端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-consumer</span> <span class="comment"># 应用名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>         <span class="comment"># 是否将自己注册到注册中心，默认为 true</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">10</span> <span class="comment"># 表示 Eureka Client 间隔多久去服务器拉取注册信息，默认为 30 秒</span></span><br><span class="line">    <span class="attr">service-url:</span>                        <span class="comment"># 设置服务注册中心地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/,http://localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer productNum;</span><br><span class="line">    <span class="keyword">private</span> Double productPrice;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line">    <span class="keyword">private</span> String orderAddress;</span><br><span class="line">    <span class="keyword">private</span> Double totalPrice;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Product&gt; productList;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费服务：接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderService.selectOrderById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费服务：方式一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.ParameterizedTypeReference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Order(id, <span class="string">&quot;order-001&quot;</span>, <span class="string">&quot;中国&quot;</span>, <span class="number">31994D</span>,</span><br><span class="line">                selectProductListByDiscoveryClient());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Product&gt; <span class="title">selectProductListByDiscoveryClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取服务列表</span></span><br><span class="line">        List&lt;String&gt; serviceIds = discoveryClient.getServices();</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(serviceIds))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据服务名称获取服务</span></span><br><span class="line">        List&lt;ServiceInstance&gt; serviceInstances = discoveryClient.getInstances(<span class="string">&quot;service-provider&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(serviceInstances))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        ServiceInstance si = serviceInstances.get(<span class="number">0</span>);</span><br><span class="line">        sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">&quot;http://&quot;</span> + si.getHost() + <span class="string">&quot;:&quot;</span> + si.getPort() + <span class="string">&quot;/product/list&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ResponseEntity: 封装了返回数据</span></span><br><span class="line">        ResponseEntity&lt;List&lt;Product&gt;&gt; response = restTemplate.exchange(</span><br><span class="line">                sb.toString(),</span><br><span class="line">                HttpMethod.GET,</span><br><span class="line">                <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> ParameterizedTypeReference&lt;List&lt;Product&gt;&gt;() &#123;&#125;);</span><br><span class="line">        <span class="keyword">return</span> response.getBody();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费服务：方式二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalancerClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.ParameterizedTypeReference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoadBalancerClient loadBalancerClient; <span class="comment">// Ribbon 负载均衡器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Order(id, <span class="string">&quot;order-001&quot;</span>, <span class="string">&quot;中国&quot;</span>, <span class="number">31994D</span>,</span><br><span class="line">                selectProductListByLoadBalancerClient());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Product&gt; <span class="title">selectProductListByLoadBalancerClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据服务名称获取服务</span></span><br><span class="line">        ServiceInstance si = loadBalancerClient.choose(<span class="string">&quot;service-provider&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == si)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">&quot;http://&quot;</span> + si.getHost() + <span class="string">&quot;:&quot;</span> + si.getPort() + <span class="string">&quot;/product/list&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ResponseEntity: 封装了返回数据</span></span><br><span class="line">        ResponseEntity&lt;List&lt;Product&gt;&gt; response = restTemplate.exchange(</span><br><span class="line">                sb.toString(),</span><br><span class="line">                HttpMethod.GET,</span><br><span class="line">                <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> ParameterizedTypeReference&lt;List&lt;Product&gt;&gt;() &#123;&#125;);</span><br><span class="line">        <span class="keyword">return</span> response.getBody();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消费服务：方式三</p><p>启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@LoadBalanced</span> <span class="comment">// 负载均衡注解</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Order;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.yanghuisen.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalancerClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.ParameterizedTypeReference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询订单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Order(id, <span class="string">&quot;order-001&quot;</span>, <span class="string">&quot;中国&quot;</span>, <span class="number">31994D</span>,</span><br><span class="line">                selectProductListByLoadBalancerAnnotation());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Product&gt; <span class="title">selectProductListByLoadBalancerAnnotation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ResponseEntity: 封装了返回数据</span></span><br><span class="line">        ResponseEntity&lt;List&lt;Product&gt;&gt; response = restTemplate.exchange(</span><br><span class="line">                <span class="string">&quot;http://service-provider/product/list&quot;</span>,</span><br><span class="line">                HttpMethod.GET,</span><br><span class="line">                <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> ParameterizedTypeReference&lt;List&lt;Product&gt;&gt;() &#123;&#125;);</span><br><span class="line">        <span class="keyword">return</span> response.getBody();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问：<a href="http://localhost:9090/order/1">http://localhost:9090/order/1</a></p><h3 id="4-3-8、自我保护"><a href="#4-3-8、自我保护" class="headerlink" title="4.3.8、自我保护"></a>4.3.8、自我保护</h3><p>一般情况下，服务在 Eureka 上注册后，会每 30 秒发送心跳包，Eureka 通过心跳来判断服务是否健康，同时会定期删除超过 90 秒没有发送心跳的服务。</p><p><strong>有两种情况会导致 Eureka Server 收不到微服务的心跳</strong></p><ul><li>微服务自身的原因</li><li>微服务与 Eureka 之间的网络故障</li></ul><p><strong>自我保护模式</strong></p><p>Eureka Server 在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期，同时提示一个警告。这种算法叫做 Eureka Server 的自我保护模式。</p><p><strong>为什么要启动自我保护</strong></p><ul><li>因为同时保留”好数据”与”坏数据”总比丢掉任何数据要更好，当网络故障恢复后，这个 Eureka 节点会退出”自我保护模式”。</li><li>Eureka 还有客户端缓存功能（也就是微服务的缓存功能）。即使 Eureka 集群中所有节点都宕机失效，微服务的 Provider 和 Consumer 都能正常通信。</li><li>微服务的负载均衡策略会自动剔除死亡的微服务节点。</li></ul><p><strong>关闭自我保护</strong></p><p>server01和server02：application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">enable-self-preservation:</span> <span class="literal">false</span> <span class="comment"># true：开启自我保护模式，false：关闭自我保护模式</span></span><br><span class="line">    <span class="attr">eviction-interval-timer-in-ms:</span> <span class="number">60000</span> <span class="comment"># 清理间隔（单位：毫秒，默认是 60*1000）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-3-9、优雅停服"><a href="#4-3-9、优雅停服" class="headerlink" title="4.3.9、优雅停服"></a>4.3.9、优雅停服</h3><p>配置了优雅停服以后，将不需要 Eureka Server 中配置关闭自我保护。本文使用 actuator 实现。</p><p><strong>1、添加依赖</strong></p><p>provider：pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring boot actuator 依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2、配置文件</strong></p><p>provider:application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 度量指标监控与健康检查</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">shutdown</span>         <span class="comment"># 开启 shutdown 端点访问</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">shutdown:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span>               <span class="comment"># 开启 shutdown 实现优雅停服</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 POST 请求访问：<a href="http://localhost:7070/actuator/shutdown">http://localhost:7070/actuator/shutdown</a></p><h3 id="4-3-10、Eureka安全认证"><a href="#4-3-10、Eureka安全认证" class="headerlink" title="4.3.10、Eureka安全认证"></a>4.3.10、Eureka安全认证</h3><p><strong>1、添加依赖</strong></p><p>server01和server02：pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring boot security 依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2、配置文件</strong></p><p>server01和server02：application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 安全认证</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3、修改访问集群节点的 url</strong></p><p>server01和server02：application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka01</span>            <span class="comment"># 主机名，不配置的时候将根据操作系统的主机名来获取</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 设置服务注册中心地址，指向另一个注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 注册中心对外暴露的注册地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>provider:application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>       <span class="comment"># 是否使用 ip 地址注册</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span> <span class="comment"># ip:port</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span>                  <span class="comment"># 设置服务注册中心地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@localhost:8761/eureka/,http://root:123456@localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>consumer：application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置 Eureka Server 注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>         <span class="comment"># 是否将自己注册到注册中心，默认为 true</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">10</span> <span class="comment"># 表示 Eureka Client 间隔多久去服务器拉取注册信息，默认为 30 秒</span></span><br><span class="line">    <span class="attr">service-url:</span>                        <span class="comment"># 设置服务注册中心地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@localhost:8761/eureka/,http://root:123456@localhost:8762/eureka/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-3-11、过滤CSRF"><a href="#4-3-11、过滤CSRF" class="headerlink" title="4.3.11、过滤CSRF"></a>4.3.11、过滤CSRF</h3><p>Eureka 会自动化配置 CSRF 防御机制，Spring Security 认为 POST, PUT, and DELETE http methods 都是有风险的，如果这些 method 发送过程中没有带上 CSRF token 的话，会被直接拦截并返回 403 forbidden。</p><p>官方给出了解决的方法，具体可以参考 <a href="https://links.jianshu.com/go?to=https://github.com/spring-cloud/spring-cloud-netflix/issues/2754">spring cloud issue 2754</a>，里面有大量的讨论，这里提供两种解决方案。</p><p>首先注册中心配置一个 <code>@EnableWebSecurity</code> 配置类，继承 <code>org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter</code>，然后重写 <code>configure</code> 方法。</p><p><strong>方案一：忽略/eureka/的所有请求</strong></p><p>server01和server02：配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 安全认证配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.configure(http); <span class="comment">// 加这句是为了访问 eureka 控制台和 /actuator 时能做安全控制</span></span><br><span class="line">        http.csrf().ignoringAntMatchers(<span class="string">&quot;/eureka/**&quot;</span>); <span class="comment">// 忽略 /eureka/** 的所有请求</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>方案二：保持密码验证的同时禁用 CSRF 防御机制</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 安全认证配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 注意，如果直接 disable 的话会把安全验证也禁用掉</span></span><br><span class="line">        http.csrf().disable().authorizeRequests()</span><br><span class="line">                .anyRequest()</span><br><span class="line">                .authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .httpBasic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Eureka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(〇)SpringCloud之SpringCloud是什么</title>
      <link href="/2020/07/03/%E3%80%87-SpringCloud%E4%B9%8BSpringCloud%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2020/07/03/%E3%80%87-SpringCloud%E4%B9%8BSpringCloud%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringCloud是什么"><a href="#SpringCloud是什么" class="headerlink" title="SpringCloud是什么"></a>SpringCloud是什么</h1><p>聊SpringCloud之前先聊聊微服务</p><h1 id="1、微服务是什么"><a href="#1、微服务是什么" class="headerlink" title="1、微服务是什么"></a>1、微服务是什么</h1><p>微服务架构是一种架构概念，旨在通过将功能分解到各个离散的服务中以实现对解决方案的解耦</p><p>微服务架构是个很有趣的概念，它的主要作用是将功能分解到离散的各个服务当中，从而降低系统的耦合性，并提供更加灵活的服务支持。</p><p><strong>概念：</strong>把一个大型的单个应用程序和服务拆分为数个甚至数十个的支持微服务，它可扩展单个组件而不是整个的应用程序堆栈，从而满足服务等级协议。</p><p><strong>定义：</strong>围绕业务领域组件来创建应用，这些应用可独立地进行开发、管理和迭代。在分散的组件中使用云架构和平台式部署、管理和服务功能，使产品交付变得更加简单。</p><p><strong>本质：</strong>用一些功能比较明确、业务比较精练的服务去解决更大、更实际的问题。</p><h1 id="2、微服务架构的演变"><a href="#2、微服务架构的演变" class="headerlink" title="2、微服务架构的演变"></a>2、微服务架构的演变</h1><p>微服务架构不是一下就出来的，而是经过市场的发展，技术的升级而逐渐出现的。</p><h2 id="2-1、单体应用"><a href="#2-1、单体应用" class="headerlink" title="2.1、单体应用"></a>2.1、单体应用</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231712112.png" alt="在这里插入图片描述"></p><p>单体应用就是将所有的功能都打包成一个独立的单元。当网站访问量很小是，只需要一个应用，将所有功能部署到一起，以便减少部署节点和成本。</p><p><strong>特点：</strong></p><ul><li>所有的功能都集成在一个项目 中</li><li>所有的功能打包成war包部署到服务器</li><li>应用与数据库分开部署</li><li>通过部署应用集群和数据库集群来提高系统的性能</li></ul><p><strong>优点：</strong></p><ul><li>开发简单。一个IDE就可以快速构建单体应用。</li><li>便于共享。单个文档包含所有的功能，传递共享很方便。</li><li>易于测试。一旦部署，所有的服务或特性就可以使用了，简化了测试过程，没有额外的依赖。</li><li>容易部署。项目就一个war包，Tomcat安装好了之后，丢进去就可以运行。</li></ul><p><strong>缺点：</strong></p><ul><li>妨碍持续交互，就是说产品上线后，如果后期需要修改代码，则需要对整个项目进行重新打包，再次上传到服务器。</li><li>不够灵活，就是随着时间推移，功能越来越多，那么在编译打包部署项目的时候，就会很慢，降低了团队开发的灵活性。</li><li>技术栈受限，就是说一旦确定了使用一种语言，就不能使用别的语言，不能混合别的语言，需要考虑各语言之间的兼容性。</li><li>可靠性差，就说是，一旦一个地方出了问题，整个项目就会崩掉。</li><li>伸缩性差，就比如说，在某个场景下某功能并发量会很大，需要加机器，但是如果是单体应用，整个应用是一体的，就需要对整个应用都加机器，造成不必要的性能浪费。、</li><li>技术债务，就是说，单体应用写代码的时候不会分的很细，什么技术都使用了，写在了一起，耦合度很高，后期维护什么的很不方便，原本两天就能完成的工作，就会变得很麻烦。</li></ul><h2 id="2-2、垂直应用"><a href="#2-2、垂直应用" class="headerlink" title="2.2、垂直应用"></a>2.2、垂直应用</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231712770.png" alt="在这里插入图片描述"></p><p>将单体应用的每个功能拆分文为项目独立存在。</p><p><strong>特点：</strong></p><ul><li>以单体结构规模的项目为单位进行垂直划分，就是将一个大项目拆分成一个一个单体结构项目。</li><li>项目与项目之间存在数据冗余，耦合性较大，比如上图中三个项目都存在用户信息。</li><li>项目之间的接口多为数据同步功能，如：数据库之间的数据库，通过网络接口进行数据库同步。</li></ul><p><strong>优点：</strong></p><ul><li>架构简单、开发成本低</li><li>避免单体无线扩张，就是说单体应用越开发功能越多，但是垂直应用不会，垂直应用本来就是每个功能独立拆分出来的，后期如果要要新增功能，直接独立为一个新的项目就行。</li><li>系统拆分，流量分担，解决并发问题。单体应用都是在一起的，而垂直应用是拆分开的，对服务器来说，不会像单体应用一样有那么大的压力。</li><li>可以针对不同的功能进行升级，不用像单体应用一样，一处改动，就需要对整个项目进行编译打包数据。</li><li>系统间相对独立。各个功能是分开的，一个功能出现问题，最多就是该功能无法使用，而不会造成整个大项目的崩溃。</li></ul><p><strong>缺点：</strong></p><ul><li>垂直应用各个之间是独立了，相同功能代码都需要重复编写，代码冗余。</li><li>系统之间相互调用，IP如果发生改变，调用系统需要手动更改。各个功能之间的调用是根据IP和端口连接调用的，如果一个功能的ip或者端口发生了改变，则调用该功能的项目都要手动更改为新的ip或者端口。</li><li>伸缩性依旧很差，如果要加机器，还要对整个拆分后的项目进行增加。成本高。</li></ul><h2 id="2-3、SOA面向服务架构"><a href="#2-3、SOA面向服务架构" class="headerlink" title="2.3、SOA面向服务架构"></a>2.3、SOA面向服务架构</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231712326.png" alt="在这里插入图片描述"></p><p> <strong>特点：</strong></p><ul><li>基于 SOA 的架构思想将重复公用的功能抽取为组件，以服务的形式给各系统提供服务。</li><li>各项目（系统）与服务之间采用 WebService、RPC 等方式进行通信。</li><li>使用 ESB 企业服务总线作为项目与服务之间通信的桥梁。</li></ul><p><strong>优点：</strong></p><ul><li>重复的功能抽取为服务，提供开发效率</li><li>采用该ESB，减少系统中的接口耦合</li><li>可以针对不同的服务特点指定集群优化方案。</li></ul><p><strong>缺点：</strong></p><ul><li>系统与服务器的界限模糊</li><li>服务器的拆分粒度比较大，系统与服务之间耦合较高</li><li>涉及多种中间件，对开发人员技术栈要求比较高</li><li>服务关系复杂，运维，测试，部署变得困难</li></ul><h2 id="2-4、微服务架构"><a href="#2-4、微服务架构" class="headerlink" title="2.4、微服务架构"></a>2.4、微服务架构</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231712867.png" alt="在这里插入图片描述"></p><p><strong>优点：</strong></p><ul><li>团队独立。</li><li>技术独立。（去中心化）??</li><li>前后端分离</li><li>数据库分离</li><li>微服务拆分粒度更细</li><li>团队新人可以更快的投入生产</li><li>可以使用不同的语言</li><li>适用于互联网时代，产品迭代周期短</li></ul><p><strong>缺点：</strong></p><ul><li>微服务过多，服务治理成本高，不利于维护。</li><li>分布式系统开发技术成本高（网络问题，容错问题，调用关系，分布式事务…）</li><li>可能会有异步通信</li><li>运维，部署…</li></ul><h2 id="2-5、总结"><a href="#2-5、总结" class="headerlink" title="2.5、总结"></a>2.5、总结</h2><p>微服务就是SOA发展出来的产物，他是一种比较现代化更细粒度的SOA实现方式。微服务是一种架构风格，架构就是为了解耦，实际开发使用的还是分布式。</p><h1 id="3、微服务设计原则"><a href="#3、微服务设计原则" class="headerlink" title="3、微服务设计原则"></a>3、微服务设计原则</h1><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231713350.jpeg" alt="在这里插入图片描述"></p><h2 id="3-1、AKF拆分原则"><a href="#3-1、AKF拆分原则" class="headerlink" title="3.1、AKF拆分原则"></a>3.1、AKF拆分原则</h2><p>通常有一个理念就是：通过机器可以解决容量和可用性问题（一台不行就两台）。</p><p>《The Art of Scalability》一书提出了一个系统的可扩展模型——AKF 可扩展立方。这个立方体中沿着三个坐标轴设置分别为 X，Y，Z。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231713363.jpeg" alt="在这里插入图片描述"></p><blockquote><p>一个叫 AKF 的公司的技术专家抽象总结的应用扩展的三个维度。理论上按照这三个扩展模式，可以将一个单体系统，进行无限扩展。</p></blockquote><p><strong>Y轴</strong></p><p>就是微服务的拆分模式，按照功能拆分。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231713130.png" alt="在这里插入图片描述"></p><p><strong>X轴</strong></p><p>水平复制，一台机器不行，就再来一台机器….</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231713177.png" alt="在这里插入图片描述"></p><p><strong>Z轴</strong></p><p>分区，为了更好的使用体验，进行分区，在每个地区（例如：华南区、华东区…）都建立一套自己的服务器，各个地区之间是相互隔离又是完整的。</p><h2 id="3-2、前后端分离原则"><a href="#3-2、前后端分离原则" class="headerlink" title="3.2、前后端分离原则"></a>3.2、前后端分离原则</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231714569.png" alt="在这里插入图片描述"></p><h3 id="3-2-1未分离"><a href="#3-2-1未分离" class="headerlink" title="3.2.1未分离"></a>3.2.1未分离</h3><p>代表技术：Servlet+JSP+JavaBean</p><p>在前后端不分离的应用模式中，前端看到的页面都是由后端控制的。例如JSP就是未分离的，需要在前端页面中写Java代码。可以想象，在前端中写后端代码是一个多么操蛋的事情。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   &lt;%</span><br><span class="line">       request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">       String username = request.getParameter(&quot;username&quot;);</span><br><span class="line">       System.out.print(username);</span><br><span class="line">   %&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2-2、半分离"><a href="#3-2-2、半分离" class="headerlink" title="3.2.2、半分离"></a>3.2.2、半分离</h3><p>代表技术：：SSH、SSM、Freemarker…</p><p>半分离，例如Freemarker模板引擎， 在发起请求的时候，后端返回携带Model数据，然后前端通过模板引擎解析获数据。这种方式虽然不用在前端写后端代码，但是要获取后端返回的数据还需要使用模板引擎的语法去解析数据。</p><h3 id="3-2-3、已分离"><a href="#3-2-3、已分离" class="headerlink" title="3.2.3、已分离"></a>3.2.3、已分离</h3><p>代表技术：Node.js前端开发框架。VueJS，ReactJS，AngularJS</p><p>已分离的应用模式中，后端仅仅返回前端所需要的数据（通常是JSON格式），而不再进行其它操作，具体返回的JSON数据怎么使用，由前端开发者安排。这样就可以做到前后端分离，前端和后端，各自做自己要实现的功能，后端写完后只需要给个接口给前端即可。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231714144.jpeg" alt="在这里插入图片描述"></p><p><strong>总结</strong></p><blockquote><p>前后端技术分离，可以由各自的开发团队来对各自的领域进行优化，这样前端的用户体验优化效果更好。</p><p>前后端分离模式下，前后端交互界面更清晰，就剩下了接口模型，后端的接口简洁明了，更容易维护。</p><p>前端多渠道集成场景更容易实现，后端服务无需变更，采用统一的数据和模型，可以支持多个前端：例如：微信 h5 前端、PC 前端、安卓前端、IOS 前端。</p></blockquote><h2 id="3-3、无状态服务"><a href="#3-3、无状态服务" class="headerlink" title="3.3、无状态服务"></a>3.3、无状态服务</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231714140.jpeg" alt="在这里插入图片描述"></p><p>如果一个数据需要被多个服务共享才能完成一笔交易，那么这个数据被称为状态。进而依赖这个”状态”数据的服务被称为有状态服务，反之称为无状态服务。</p><h2 id="3-4、Restful通信风格"><a href="#3-4、Restful通信风格" class="headerlink" title="3.4、Restful通信风格"></a>3.4、Restful通信风格</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231715815.jpeg" alt="在这里插入图片描述"><br>IP:PORT/接口</p><ul><li>JSON报文，轻量级，人机均可阅读</li><li>HTTP无状态，加密又可以依附HTTPS</li><li>有一套约定俗成的接口设计风格</li></ul><h2 id="3-5、CAP原则与BASE理论"><a href="#3-5、CAP原则与BASE理论" class="headerlink" title="3.5、CAP原则与BASE理论"></a>3.5、CAP原则与BASE理论</h2><ul><li>C：一致性，分布式项目中，各个节点的数据最终要保持一致。</li><li>A：可用性，分布式项目的任意节点，在一定的时间内返回有效数据，数据可以是成功或者失败</li><li>P：分区容错，多分区存储数据</li></ul><p>CAP原则指的是，在构建分布式项目时，只能满足其中两项，三者不可兼得。业界的人花了两年时间论证该信息。</p><p>分析：分布式项目，必然会设计数据分区的问题。肯定需要P，那么项目肯定是CP或者AP。</p><p>BASE理论其实核心就是：最终一致性。</p><p><strong>这里简单说明，具体在Eureka注册中心中描述。</strong></p><h1 id="4、微服务架构带来的问题"><a href="#4、微服务架构带来的问题" class="headerlink" title="4、微服务架构带来的问题"></a>4、微服务架构带来的问题</h1><p><strong>客户端如何访问服务?</strong></p><p>后台有N个服务，前台就需要管理N个地址，一个服务的下线/升级/扩容，前端都要从新部署</p><p>所以，一般在后台N个服务和客户端之间会有一个代理(API Gateway)，作用：</p><ul><li>提供统一入口</li><li>聚合后台服务，节省流量，提供用户体验</li><li>提供安全、流控、过滤、缓存、路由、监控…</li></ul><p><strong>服务之间如何通信?</strong></p><p>同步通信：</p><ul><li>Restful</li><li>RPC</li></ul><p>异步通信：</p><ul><li>MQ</li></ul><p><strong>这么多服务如何查找?</strong></p><p>利用注册中心机制，将服务集群注册到注册中心，然后把服务的状态推送到各个节点，比如动态的服务扩容、服务的下线等。通过心跳机制检测服务是否可用。</p><p><strong>服务挂了怎么办？</strong></p><p>服务容错手段：</p><ul><li>请求缓存：支持将一个请求与返回结果做缓存处理</li><li>请求合并：将相同的请求进行合并然后调用批处理接口</li><li>请求限流：当请求过多时，可以采取限流措施，降低机器的负载压力</li><li>服务隔离：限制调用分布式服务的资源，某一个调用的服务出现问题不会影响其它服务调用</li><li>服务熔断：牺牲局部服务，保证整体系统稳定性的措施</li><li>服务降级：服务熔断后，客户端调用自己本地方法返回缺省值</li></ul><h1 id="5、微服务架构技术生态体系"><a href="#5、微服务架构技术生态体系" class="headerlink" title="5、微服务架构技术生态体系"></a>5、微服务架构技术生态体系</h1><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231715207.png" alt="在这里插入图片描述"></p><h2 id="5-1、服务网关"><a href="#5-1、服务网关" class="headerlink" title="5.1、服务网关"></a>5.1、服务网关</h2><p>所有的API调用接入到API网关层，由网关层统一提供入口和输出，屏蔽底层的微服务。</p><p>一个网关的基本功能有：统一接入、安全防护、协议适配、流量管控、长短链接支持、容错能力。有了网关之后，各个 API 服务提供团队可以专注于自己的的业务逻辑处理，而 API 网关更专注于安全、流量、路由等问题。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231715289.png" alt="在这里插入图片描述"></p><h2 id="5-2、服务调用"><a href="#5-2、服务调用" class="headerlink" title="5.2、服务调用"></a>5.2、服务调用</h2><p>微服务架构中，通常存在多个服务之间的远程调用。目前主流的远程调用技术有基于 HTTP 的 RESTful 接口和基于 TCP 的 RPC 协议。以上两种都属于同步通信，还有基于队列模式的异步通信。</p><ul><li>REST：一种HTTP调用的格式，更标准，更通用，无论哪种语言都支持HTTP协议。</li><li>RPC：进程间的通信共享，允许像调用本地服务一样调用远程服务。RPC框架的主要目标就是让远程服务调用更简单更透明。RPC 框架负责屏蔽底层的传输方式、序列化方式和通信细节。开发人员在使用的时候只需要了解谁在什么位置提供了什么样的远程服务接口即可，并不需要关心底层通信细节和调用过程。</li></ul><table><thead><tr><th>比较项</th><th>REST</th><th>RPC</th></tr></thead><tbody><tr><td>通讯协议</td><td>HTTP</td><td>一般使用 TCP</td></tr><tr><td>性能</td><td>略低</td><td>较高</td></tr><tr><td>灵活度</td><td>高</td><td>低</td></tr><tr><td>应用</td><td>微服务架构</td><td>SOA 架构</td></tr></tbody></table><h2 id="5-3、负载均衡"><a href="#5-3、负载均衡" class="headerlink" title="5.3、负载均衡"></a>5.3、负载均衡</h2><p>服务高可用的保证手段，为了保证高可用，每一个微服务都需要部署多个服务实例来提供服务，此时就需要根据不同的负载均衡策略对服务进行调用。</p><h2 id="5-4、服务容错"><a href="#5-4、服务容错" class="headerlink" title="5.4、服务容错"></a>5.4、服务容错</h2><p>微服务中，一个请求经常会设计到调用多个服务，如果其中某个服务不可用，没有做服务容错的话，极有可能会造成一连串的服务不可用，这就是服务雪峰效应。最终的结果就是，一个服务不可用，导致一系列服务不可用。</p><p>造成雪崩的原因有三点：</p><ol><li>服务提供者不可用(硬件故障、程序BUG、缓存击穿、用户大量请求等)</li><li>重试加大流量(用户重试，代码逻辑重试)</li><li>消费者服务不可用(同步等待造成的资源浪费)</li></ol><p>没法预防雪崩效应的发生，只能尽可能去做好容错。服务容错的三个核心思想是：</p><ul><li>不被外界环境影响</li><li>不被上游请求压垮</li><li>不被下游响应拖垮</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231716242.png" alt="在这里插入图片描述"></p><h2 id="5-5、链路追踪"><a href="#5-5、链路追踪" class="headerlink" title="5.5、链路追踪"></a>5.5、链路追踪</h2><p>随着微服务架构的流行，服务按照不同的维度进行拆分，一次请求往往需要涉及到多个服务。互联网应用构建在不同的软件模块集上，这些软件模块，有可能是由不同的团队开发、可能使用不同的编程语言来实现、有可能布在了几千台服务器，横跨多个不同的数据中心。因此，就需要对一次请求涉及的多个服务链路进行日志记录，性能监控等等。单纯的理解链路追踪，就是指一次任务的开始到结束，期间调用的所有系统及耗时（时间跨度）都可以完整记录下来。</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231716060.png" alt="在这里插入图片描述"></p><h2 id="5-6、配置中心"><a href="#5-6、配置中心" class="headerlink" title="5.6、配置中心"></a>5.6、配置中心</h2><p>微服务系统中，每个微服务不仅仅只有代码，还需要<strong>连接其他资源</strong>，例如数据库的配置或功能性的开关 MySQL、Redis 、Security 等相关的配置。除了项目运行的基础配置之外，还有一些配置是与业务有关系的，比如说七牛存储、短信和邮件相关，或者一些业务上的开关。</p><p>但是随着微服务系统的不断迭代，整个微服务系统可能会成为一个<strong>网状结构</strong>，这个时候就要考虑整个微服务系统的<strong>扩展性、伸缩性、耦合性</strong>等等。其中一个很重要的环节就是<strong>配置管理</strong>的问题。</p><p>常规配置管理方案的缺点：</p><ul><li>硬编码（需要修改代码，繁琐，风险大）</li><li>properties 或者 yml（集群环境下需要替换和重启）</li><li>xml（重新打包和重启）</li></ul><p>常规配置管理有很大的缺点，所以采用 Spring Cloud Config 或 Consul 或 Apollo 或 Nacos 等配置中心<strong>集中式</strong>的来管理<strong>每个服务</strong>的配置信息。</p><h2 id="5-7、安全认证"><a href="#5-7、安全认证" class="headerlink" title="5.7、安全认证"></a>5.7、安全认证</h2><p>从单体应用架构到分布式应用架构再到微服务架构，应用的安全访问在不断的经受考验。为了适应架构的变化、需求的变化，身份认证与鉴权方案也在不断的变革。面对数十个甚至上百个微服务之间的调用，如何保证高效安全的身份认证？面对外部的服务访问，该如何提供细粒度的鉴权方案？</p><p>David Borsos 在伦敦的微服务大会上提出了四种解决方案：</p><h3 id="5-7-1、单点登录-SSO"><a href="#5-7-1、单点登录-SSO" class="headerlink" title="5.7.1、单点登录(SSO)"></a>5.7.1、单点登录(SSO)</h3><p>这种方案意味着每个面向用户的服务都必须与认证服务交互，这会产生大量非常琐碎的网络流量和重复的工作，随着微服务应用的增多，这种方案的弊端会更加明显。</p><h3 id="5-7-2、分布式Session方案"><a href="#5-7-2、分布式Session方案" class="headerlink" title="5.7.2、分布式Session方案"></a>5.7.2、分布式Session方案</h3><p>分布式会话方案原理主要是将关于用户认证的信息存储在共享存储中，且通常由用户会话作为 Key 来实现的简单分布式哈希映射。当用户访问微服务时，用户数据可以从共享存储中获取。这种方案的缺点在于共享存储需要一定保护机制，因此需要通过安全链接来访问，这时解决方案的实现就通常具有相当高的复杂性了。</p><h3 id="5-7-3、客户端Token方案"><a href="#5-7-3、客户端Token方案" class="headerlink" title="5.7.3、客户端Token方案"></a>5.7.3、客户端Token方案</h3><p>令牌在客户端生成，由身份验证服务进行签名，并且必须包含足够的信息，以便可以在所有微服务中建立用户身份。令牌会附加到每个请求上，为微服务提供用户身份验证，这种解决方案的安全性相对较好，但身份验证注销是一个大问题，缓解这种情况的方法可以使用短期令牌和频繁检查认证服务等。对于客户端令牌的编码方案，David Borsos 更喜欢使用 JSON Web Tokens（JWT），它足够简单且库支持程度也比较好。</p><h3 id="5-7-4、客户端Token与API网关结合"><a href="#5-7-4、客户端Token与API网关结合" class="headerlink" title="5.7.4、客户端Token与API网关结合"></a>5.7.4、客户端Token与API网关结合</h3><p>这个方案意味着所有请求都通过网关，从而有效地隐藏了微服务。 在请求时，网关将原始用户令牌转换为内部会话 ID 令牌。在这种情况下，注销就不是问题，因为网关可以在注销时撤销用户的令牌。</p><h3 id="5-7-5、总结"><a href="#5-7-5、总结" class="headerlink" title="5.7.5、总结"></a>5.7.5、总结</h3><p>微服务架构下，更倾向于 David Borsos 所建议的 JWT 方案，将 OAuth2 和 JWT 结合使用，OAuth2 一般用于第三方接入的场景，管理对外的权限，所以比较适合和 API 网关结合，针对于外部的访问进行鉴权（当然，底层 Token 标准采用 JWT 也是可以的）。</p><p>JWT 更加轻巧，在微服务之间进行认证&amp;鉴权已然足够，并且可以避免和身份认证服务直接打交道。当然，从能力实现角度来说，类似于分布式 Session 在很多场景下也是完全能满足需求，具体怎么去选择鉴权方案，还是要结合实际的需求来。</p><h1 id="6、微服务架构技术支持"><a href="#6、微服务架构技术支持" class="headerlink" title="6、微服务架构技术支持"></a>6、微服务架构技术支持</h1><h2 id="6-1、Spring-Cloud"><a href="#6-1、Spring-Cloud" class="headerlink" title="6.1、Spring Cloud"></a>6.1、Spring Cloud</h2><ul><li><code>Spring Cloud Netflix Eureka</code>：服务注册中心。</li><li><code>Spring Cloud Zookeeper</code>：服务注册中心。</li><li><code>Spring Cloud Consul</code>：服务注册和配置管理中心。</li><li><code>Spring Cloud Netflix Ribbon</code>：客户端负载均衡。</li><li><code>Spring Cloud Netflix Hystrix</code>：服务容错保护。</li><li><code>Spring Cloud Netflix Feign</code>：声明式服务调用。</li><li><code>Spring Cloud OpenFeign(可替代 Feign)</code>：OpenFeign 是 Spring Cloud 在 Feign 的基础上支持了 Spring MVC 的注解，如 @RequesMapping等等。OpenFeign 的 @FeignClient 可以解析 SpringMVC 的 @RequestMapping 注解下的接口，并通过动态代理的方式产生实现类，实现类中做负载均衡并调用其他服务。</li><li><code>Spring Cloud Netflix Zuul</code>：API 网关服务，过滤、安全、监控、限流、路由。</li><li><code>Spring Cloud Gateway(可替代 Zuul)</code>：Spring Cloud Gateway 是 Spring 官方基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，Spring Cloud Gateway 旨在为微服务架构提供一种简单而有效的统一的 API 路由管理方式。Spring Cloud Gateway 作为 Spring Cloud 生态系中的网关，目标是替代 Netflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控/埋点，和限流等。</li><li><code>Spring Cloud Security</code>：安全认证。</li><li><code>Spring Cloud Config</code>：分布式配置中心。配置管理工具，支持使用 Git 存储配置内容，支持应用配置的外部化存储，支持客户端配置信息刷新、加解密配置内容等。</li><li><code>Spring Cloud Bus</code>：事件、消息总线，用于在集群（例如，配置变化事件）中传播状态变化，可与 Spring Cloud Config 联合实现热部署。</li><li><code>Spring Cloud Stream</code>：消息驱动微服务。</li><li><code>Spring Cloud Sleuth</code>：分布式服务跟踪。</li><li><code>Spring Cloud Alibaba Nacos</code>：阿里巴巴开源产品，一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</li><li><code>Spring Cloud Alibaba Sentinel</code>：面向分布式服务架构的轻量级流量控制产品，把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</li><li><code>Spring Cloud Alibaba RocketMQ</code>：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</li><li><code>Spring Cloud Alibaba Dubbo</code>：Apache Dubbo™ 是一款高性能 Java RPC 框架，用于实现服务通信。</li><li><code>Spring Cloud Alibaba Seata</code>：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</li><li><code>Spring Cloud Alibaba OSS</code>：阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。</li><li><code>Spring Cloud Alibaba SchedulerX</code>：阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。</li><li><code>Spring Cloud Alibaba SMS</code>：覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</li></ul><h2 id="6-2、其它"><a href="#6-2、其它" class="headerlink" title="6.2、其它"></a>6.2、其它</h2><ul><li><code>RibbitMQ</code>：RabbitMQ 是部署最广泛的开源消息中间件。是实现了高级消息队列协议（AMQP）的开源消息中间件。</li><li><code>Kafka</code>：Kafka 是由 Apache 软件基金会开发的一个开源流处理平台，由Scala和Java编写。Kafka 是一种高吞吐量的分布式发布订阅消息系统。</li><li><code>Redis</code>：Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用 ANSI C 语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的 API。</li><li><code>MongoDB</code>：MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，是类似 json 的 bson 格式，因此可以存储比较复杂的数据类型。</li><li><code>Elasticsearch</code>：Elasticsearch 是一个基于 Lucene 的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于 RESTful web 接口。Elasticsearch 是最受欢迎的企业搜索引擎，其次是 Apache Solr，也是基于 Lucene。</li><li><code>MySQL</code>：MySQL 是一种开放源代码的关系型数据库管理系统（RDBMS），免费、简单、占资源少、强大好用。</li><li><code>Oracle</code>：世界上最昂贵的数据库，一般金融系统使用居多。</li><li><code>FastDFS</code>：FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</li><li><code>HDFS</code>：Hadoop 生态组件，可以支持千万级的大型分布式文件系统。</li><li><code>XX-JOB</code>：轻量级分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</li><li><code>TX-LCN</code>：分布式事务解决防范，LCN 并不生产事务，LCN 只是本地事务的搬用工（事务的协调工）。LCN 是一个高性能的分布式事务框架，兼容 Dubbo、Spring Cloud，支持 RPC 框架拓展，支持各种 ORM 框架、NoSQL、负载均衡、事务补偿。</li><li><code>Zipkin</code>：Twitter 公司开发贡献的一款开源的分布式实时数据追踪系统（Distributed Tracking System），基于 Google Dapper 的论文设计而来，其主要功能是聚集各个异构系统的实时监控数据。</li><li><code>Skywalking</code>：Apache Skywalking 是一个开源的，用于收集、分析，聚合，可视化来自于不同服务和本地基础服务的数据的可观察的平台。特别为分布式系统而设计的数据观察和监控系统。</li><li><code>Apollo</code>：携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</li><li><code>ConfigKeeper</code>：随行付架构部基于 Spring Cloud 研发的分布式配置中心。与 Spring Boot、Spring Cloud 应用无缝兼容。</li><li><code>JWT</code>：JSON Web Token（JWT）是一个非常轻巧的规范。这个规范允许我们使用 JWT 在用户和服务器之间传递安全可靠的信息。</li><li><code>Nginx</code>：Nginx 是一款轻量级的 Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，其特点是占有内存少，并发能力强，中国大陆使用 Nginx 网站用户有：百度、淘宝、腾讯、京东、新浪、网易等。</li><li><code>Git</code>：开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</li><li><code>Docker</code>：Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux 或 Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</li><li><code>Kubernetes</code>：Kubernetes，简称 k8s，是用 8 代替 8 个字符“ubernete”而成的缩写。Kubernetes 脱胎于 Google 的 Borg 系统，是一个开源的功能强大的容器编排系统，用于管理云平台中多个主机上的容器化的应用，实现了容器集群的自动化部署、扩容以及运维的开源平台。Kubernetes 的目标是让部署容器化的应用简单并且高效。</li><li><code>Git</code>：版本控制工具</li><li><code>Docker</code>：开源应用容器</li><li><code>K8s</code>：容器管理</li></ul><h1 id="7、SpringCloud"><a href="#7、SpringCloud" class="headerlink" title="7、SpringCloud"></a>7、SpringCloud</h1><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231716335.jpeg" alt="在这里插入图片描述"></p><p>SpringCloud是一个服务治理平台，是若干的框架的集合，提供了全套的分布式系统解决方案。包含服务注册与发现、配置中心、服务网关、智能路由、负载均衡、断路监控跟踪、分布式消息队列等等。</p><p>SpringCloud通过SpringBoot风格的封装，屏蔽掉了复杂的配置和实现原理。最终给开发者留出了一套简单易懂、容易部署的分布式系统开发啊工具包。开发者可以快速的启动服务或构建应用，同时能够快速和云平台资源进行队列。微服务是可以独立部署、水平扩展、独立访问（或者有独立的数据库）的服务单元，Spring Cloud 就是这些微服务的大管家，采用了微服务这种架构之后，项目的数量会非常多，Spring Cloud 做为大管家需要管理好这些微服务，自然需要很多小弟来帮忙。</p><p><strong>Spring Cloud的优点</strong></p><ul><li>集大成者，Spring Cloud包含了微服务架构的方方面面。</li><li>约定大于配置，基于注解，没有配置文件。</li><li>轻量级组件，Spring Cloud整合的组件大多比较轻量级，且都是各自领域的佼佼者。</li><li>开发简便，Spring Cloud 对各个组件进行了大量的封装，从而简化了开发。</li><li>开发灵活，Spring Cloud 的组件都是解耦的，开发人员可以灵活按需选择组件。</li></ul><p><strong>Spring Cloud的缺点</strong></p><ul><li>项目结构复杂，每个组件或者每个服务器都需要创建一个项目。</li><li>部署门槛高，项目部署需要配合Docker等容器技术进行进群部署，学习成本高。</li></ul><h2 id="7-1、Spring-Cloud-Netflix-第一代"><a href="#7-1、Spring-Cloud-Netflix-第一代" class="headerlink" title="7.1、Spring Cloud Netflix 第一代"></a>7.1、Spring Cloud Netflix 第一代</h2><p>Netflix是美国的一家公司，提供流媒体播放。</p><p>针对多种 Netflix 组件提供的开发工具包，其中包括 Eureka、Ribbon、Feign、Hystrix、Zuul、Archaius 等。</p><ul><li><code>Netflix Eureka</code>：一个基于 Rest 服务的服务治理组件，包括服务注册中心、服务注册与服务发现机制的实现，实现了云端负载均衡和中间层服务器的故障转移。</li><li><code>Netflix Ribbon</code>：客户端负载均衡的服务调用组件。</li><li><code>Netflix Hystrix</code>：容错管理工具，实现断路器模式，通过控制服务的节点，从而对延迟和故障提供更强大的容错能力。</li><li><code>Netflix Feign</code>：基于 Ribbon 和 Hystrix 的声明式服务调用组件。</li><li><code>Netflix Zuul</code>：微服务网关，提供动态路由，访问过滤等服务。</li><li><code>Netflix Archaius</code>：配置管理 API，包含一系列配置管理 API，提供动态类型化属性、线程安全配置操作、轮询框架、回调机制等功能。</li></ul><h2 id="7-2、Spring-Cloud-Alibaba-第二代"><a href="#7-2、Spring-Cloud-Alibaba-第二代" class="headerlink" title="7.2、Spring Cloud Alibaba 第二代"></a>7.2、Spring Cloud Alibaba 第二代</h2><p>和Spring Cloud一样，Spring Cloud Alibaba也是一套微服务解决方案。Spring Cloud Alibaba致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必须组件，方便开发者通过Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。</p><p>依托 Spring Cloud Alibaba，只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。</p><p><strong>阿里开源组件</strong></p><ul><li><code>Nacos</code>：阿里巴巴开源产品，一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</li><li><code>Sentinel</code>：面向分布式服务架构的轻量级流量控制产品，把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</li><li><code>RocketMQ</code>：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</li><li><code>Dubbo</code>：Apache Dubbo™ 是一款高性能 Java RPC 框架，用于实现服务通信。</li><li><code>Seata</code>：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</li></ul><p><strong>阿里商业化组件</strong></p><ul><li><code>Alibaba Cloud ACM</code>：一款在分布式架构环境中对应用配置进行集中管理和推送的应用配置中心产品。</li><li><code>Alibaba Cloud OSS</code>：阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。</li><li><code>Alibaba Cloud SchedulerX</code>：阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。</li><li><code>Alibaba Cloud SMS</code>：覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</li></ul><h3 id="7-2-1、常用组件"><a href="#7-2-1、常用组件" class="headerlink" title="7.2.1、常用组件"></a>7.2.1、常用组件</h3><p>　　</p><ul><li><code>Spring Cloud Netflix Eureka</code>：服务注册中心。</li><li><code>Spring Cloud Zookeeper</code>：服务注册中心。</li><li><code>Spring Cloud Consul</code>：服务注册和配置管理中心。</li><li><code>Spring Cloud Netflix Ribbon</code>：客户端负载均衡。</li><li><code>Spring Cloud Netflix Hystrix</code>：服务容错保护。</li><li><code>Spring Cloud Netflix Feign</code>：声明式服务调用。</li><li><code>Spring Cloud OpenFeign(可替代 Feign)</code>：OpenFeign 是 Spring Cloud 在 Feign 的基础上支持了 Spring MVC 的注解，如 @RequesMapping等等。OpenFeign 的 @FeignClient 可以解析 SpringMVC 的 @RequestMapping 注解下的接口，并通过动态代理的方式产生实现类，实现类中做负载均衡并调用其他服务。</li><li><code>Spring Cloud Netflix Zuul</code>：API 网关服务，过滤、安全、监控、限流、路由。</li><li><code>Spring Cloud Gateway(可替代 Zuul)</code>：Spring Cloud Gateway 是 Spring 官方基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，Spring Cloud Gateway 旨在为微服务架构提供一种简单而有效的统一的 API 路由管理方式。Spring Cloud Gateway 作为 Spring Cloud 生态系中的网关，目标是替代 Netflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控/埋点，和限流等。</li><li><code>Spring Cloud Security</code>：安全认证。</li><li><code>Spring Cloud Config</code>：分布式配置中心。配置管理工具，支持使用 Git 存储配置内容，支持应用配置的外部化存储，支持客户端配置信息刷新、加解密配置内容等。</li><li><code>Spring Cloud Bus</code>：事件、消息总线，用于在集群（例如，配置变化事件）中传播状态变化，可与 Spring Cloud Config 联合实现热部署。</li><li><code>Spring Cloud Stream</code>：消息驱动微服务。</li><li><code>Spring Cloud Sleuth</code>：分布式服务跟踪。</li><li><code>Spring Cloud Alibaba Nacos</code>：阿里巴巴开源产品，一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</li><li><code>Spring Cloud Alibaba Sentinel</code>：面向分布式服务架构的轻量级流量控制产品，把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</li><li><code>Spring Cloud Alibaba RocketMQ</code>：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</li><li><code>Spring Cloud Alibaba Dubbo</code>：Apache Dubbo™ 是一款高性能 Java RPC 框架，用于实现服务通信。</li><li><code>Spring Cloud Alibaba Seata</code>：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</li></ul><h2 id="7-3、Spring-Cloud版本说明"><a href="#7-3、Spring-Cloud版本说明" class="headerlink" title="7.3、Spring Cloud版本说明"></a>7.3、Spring Cloud版本说明</h2><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231717277.png" alt="在这里插入图片描述"></p><p>SpringCloud不是使用数字命名版本号，而是使用的英文单词(地铁站名字)命名，是为了避免总版本号与子项目的版本号混淆。</p><h3 id="7-3-1、命名规则"><a href="#7-3-1、命名规则" class="headerlink" title="7.3.1、命名规则"></a>7.3.1、命名规则</h3><p>采用伦敦的地铁站名称来作为版本号的命名，根据首字母排序，字母顺序靠后的版本号越大。</p><p><strong>Spring 官方详细的版本查看接口：<a href="https://start.spring.io/actuator/info">https://start.spring.io/actuator/info</a></strong></p><h3 id="7-3-2、发布计划"><a href="#7-3-2、发布计划" class="headerlink" title="7.3.2、发布计划"></a>7.3.2、发布计划</h3><table><thead><tr><th>版本号</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>BUILD-XXX</td><td>开发版</td><td>开发团队内部使用</td></tr><tr><td>M</td><td>里程碑版</td><td>MileStone，M1 表示第 1 个里程碑版本，一般同时标注 PRE，表示预览版</td></tr><tr><td>版</td><td>候选发布版</td><td>Release Candidate，正式发布版的前一个观察期，不添加新功能，主要着重于除错</td></tr><tr><td>SR</td><td>正式发布版</td><td>Service Release，SR1 表示第 1 个正式版本，一般同时标注 GA，表示稳定版本</td></tr><tr><td>GA</td><td>稳定版</td><td>经过全面测试并可对外发行称之为GA（General Availability）</td></tr></tbody></table><h3 id="7-3-3、子项目版本说明"><a href="#7-3-3、子项目版本说明" class="headerlink" title="7.3.3、子项目版本说明"></a>7.3.3、子项目版本说明</h3><p>例如：Spring Cloud Alibaba 2.1.0.RELEASE</p><ul><li>主版本号。当功能模块有较大更新或者整体架构发生变化时，主版本号会更新。</li><li>1：次版本号。次版本表示只是局部的一些变动。</li><li>0：修改版本号。一般是 bug 的修复或者是小的变动。</li><li>RELEASE：希腊字母版本号。标注当前版本的软件处于哪个开发阶段。</li></ul><h4 id="7-3-4、希腊版本字母说明"><a href="#7-3-4、希腊版本字母说明" class="headerlink" title="7.3.4、希腊版本字母说明"></a>7.3.4、希腊版本字母说明</h4><ul><li>Base：设计阶段。只有相应的设计没有具体的功能实现。</li><li>Alpha：软件的初级版本。存在较多的 bug。</li><li>Bate：表示相对 Alpha 有了很大的进步，消除了严重的 bug，还存在一些潜在的 bug。</li><li>Gamma：是 Beta 版做过一些修改，成为正式发布的候选版本（Release Candidate）</li><li>Release：该版本表示最终版。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加Eureka依赖后返回XML而不是JSON数据</title>
      <link href="/2020/06/17/%E6%B7%BB%E5%8A%A0Eureka%E4%BE%9D%E8%B5%96%E5%90%8E%E8%BF%94%E5%9B%9EXML%E8%80%8C%E4%B8%8D%E6%98%AFJSON%E6%95%B0%E6%8D%AE/"/>
      <url>/2020/06/17/%E6%B7%BB%E5%8A%A0Eureka%E4%BE%9D%E8%B5%96%E5%90%8E%E8%BF%94%E5%9B%9EXML%E8%80%8C%E4%B8%8D%E6%98%AFJSON%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>添加Eureka依赖后返回的是XML格式的数据而不是JSON格式的数据，是因为Eureka中默认集成了<code>com.fasterxml.jackson.dataformat</code>的<code>jackson-dataformat-xml</code>。XML的优先级比JSON的高，所以会优先返回XML。<br>解决办法<br>1、去除<code>com.fasterxml.jackson.dataformat</code>的<code>jackson-dataformat-xml</code><br>修改pom中的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--去除jackson-dataformat-xml，否则会返回xml文件，而不是JSON--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、Controller层方法添加注释<br>produces = { “application/json;charset=UTF-8”}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(value = &quot;/&#123;id&#125;&quot;,produces = &#123; &quot;application/json;charset=UTF-8&quot;&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Order <span class="title">selectOrderById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orderService.selectOrderById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Eureka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java的注释真的不会被执行吗?</title>
      <link href="/2020/06/13/Java%E7%9A%84%E6%B3%A8%E9%87%8A%E7%9C%9F%E7%9A%84%E4%B8%8D%E4%BC%9A%E8%A2%AB%E6%89%A7%E8%A1%8C%E5%90%97/"/>
      <url>/2020/06/13/Java%E7%9A%84%E6%B3%A8%E9%87%8A%E7%9C%9F%E7%9A%84%E4%B8%8D%E4%BC%9A%E8%A2%AB%E6%89%A7%E8%A1%8C%E5%90%97/</url>
      
        <content type="html"><![CDATA[<p>这个问题也是在别的地方看到的，原标题是《老师，你确定注释不会被执行吗？》。当然，标题不是重点，重点是Java注释真的会被执行吗？</p><p>一开始知道这个问题的时候我也是很疑惑，因为不管学习什么编程语言，最开始的时候都会被告知，注释是不会被执行的，那么现在为什么又出现了Java注释会被执行这一个说法。有句话说的好，你以为的只是你以为的，什么地方不清楚，写个程序跑一下就知道了。</p><p>话不多少，看代码，看结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;啊哈哈&quot;</span>;</span><br><span class="line">        <span class="comment">// \u000d str = &quot;啥也不会的程序员&quot;;</span></span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正常来时，结果应该是打印<code>啊哈哈</code>。但是其实打印的是<code>啥也不会的程序员</code>。为什么结果会是打印<code>啥也不会的程序员</code>呢？既然不清楚，那就分析class文件呗，看看这个java程序被编译成了什么（使用工具：JD-GUI）</p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231642868.png" alt="在这里插入图片描述"></p><p>可以看到，在第12行出现了<code>str = &quot;啥也不会的程序员&quot;;</code>这段代码，那么问题就来了，这段代码是哪来的？</p><p>看看上面代码就知道，这段代码其实是写在注释里面，但是意外出现了，注释似乎没有生效，注释似乎被解析编译了，然后运行了。</p><p>其实问题就出现在注释里面的<code>\u000d</code>这几个字符上，这是一个<code>Unicode</code>编码，表示的是一个换行符。这样就说的通了，为什么注释会被解析编译，然后运行。Java注释里运行写<code>Unicode</code>编码字符，然后在解析编译时，<code>Unicode</code>编码的<code>\u000d</code>这几个字符，会被解析为一个换行符，然后后面的代码就会被挤到下一行，从而被编译然后运行。</p><p>这就是为什么Java的注释(特殊的注释)会被执行</p><p>好吧，其实这篇文章很水….</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arrays.asList()真的就把数组转换为了List集合吗?</title>
      <link href="/2020/06/13/Arrays-asList-%E7%9C%9F%E7%9A%84%E5%B0%B1%E6%8A%8A%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%86List%E9%9B%86%E5%90%88%E5%90%97/"/>
      <url>/2020/06/13/Arrays-asList-%E7%9C%9F%E7%9A%84%E5%B0%B1%E6%8A%8A%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%86List%E9%9B%86%E5%90%88%E5%90%97/</url>
      
        <content type="html"><![CDATA[<p>看面试题的时候，里面提到了这个，之前都是常规的使用，把数组转换为List集合，程序每次也都正常的运行，没在意过这个问题。看到这个问题时直接懵了，难道我之前的使用是错误的吗？后来查了资料确实是有点问题，Arrays.asList()还就真就没把数组转换为List集合，源码底层还是一个数组！。</p><p>话不多说。直接上代码，结果才是唯一真理。</p><p>再简单不过的一个把数组转换为List集合的例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArraysTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String[] strings = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王二&quot;</span>,<span class="string">&quot;麻子&quot;</span>&#125;;</span><br><span class="line">        List&lt;String&gt; list = Arrays.asList(strings);</span><br><span class="line">        list.add(<span class="string">&quot;啥也不会的程序员&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231656939.png" alt="在这里插入图片描述"></p><p>可以看到程序的第17行报了一个异常，17行就对应着<code>list.add(&quot;啥也不会的程序员&quot;);</code>这个方法。出现异常的原因就是调用了<code>add</code>方法。一开始就说了，底层还是一个数组，而数组的一个重要特点就是，一旦长度确定之后就不可以改变。所以也就导致了，<code>add</code>方法出现异常。而且不止<code>addss</code>方法会出现异常，<code>remove</code>和<code>clear</code>方法也会出现异常。</p><p>现在只是知道了<code>Arrays.asList()</code>在执行<code>add</code>等方法的时候会出现异常，但是具体原因是什么还不清楚，而且如果底层是数组的话，怎么又会说把数组转换为List集合呢？</p><p>想要知道原理，就要分析源码了。</p><p>先看看<code>Arrays.asList()</code>这个方法的源码是怎么样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">asList</span><span class="params">(T... a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到asList这个方法中并没有什么特殊的代码，只不过传入了一个可变参数，然后又创建了一个<code>ArrayList</code>对象并返回。那好，就继续看ArrayList的源码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractList</span>&lt;<span class="title">E</span>&gt;</span></span><br><span class="line"><span class="class">        <span class="keyword">implements</span> <span class="title">RandomAccess</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2764017481108945198L</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> E[] a;</span><br><span class="line"></span><br><span class="line">        ArrayList(E[] array) &#123;</span><br><span class="line">            a = Objects.requireNonNull(array);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">// 后面的省略，不是重点</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以发现，这个类是一个私有的静态内部类。并且有一个带参构造器，构造器需要传入一个泛型数组，而后这个泛型数组在经过非空判断后赋值给了final修饰的泛型数组a。哦，到了这里就会发现，其实本质还是一个数组，一个泛型数组，只不过在这个数组外面套上一个<code>ArrayList</code>类的外壳。</p><p>到了这里就会知道了，其实本质还是一个数组，可是，知道了是数组了，那么异常又是哪里来的呢？平常使用中又是怎么把它伪装成List集合使用的呢？既然不清楚，那就继续看源码。<code>ArrayList</code>类没有关于异常的源码，那就看它父类<code>AbstractList</code>的源码。</p><p>AbstractList的部分源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractCollection</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">List</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">        add(size(), e);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        removeRange(<span class="number">0</span>, size());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">removeRange</span><span class="params">(<span class="keyword">int</span> fromIndex, <span class="keyword">int</span> toIndex)</span> </span>&#123;</span><br><span class="line">        ListIterator&lt;E&gt; it = listIterator(fromIndex);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>, n=toIndex-fromIndex; i&lt;n; i++) &#123;</span><br><span class="line">            it.next();</span><br><span class="line">            it.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，<code>add</code>和<code>remove</code>方法都抛出了<code>UnsupportedOperationException</code>异常，这里就是关键，在调用<code>add</code>和<code>remove</code>方法时，因为是继承了<code>AbstractList</code>类，而<code>ArrayList</code>又没有重写<code>add</code>和<code>remove</code>方法，则会调用父类的方法，抛出异常。<code>clear</code>方法和<code>add</code>不太一样，<code>clear</code>方法又调用了<code>removeRange</code>方法，而<code>removeRange</code>方法中又执行了<code>it.remove();</code>方法，然后再经过JDK源码的一些执行，最后会执行到<code>remove</code>方法上，所以也会抛出一个异常。</p><p>到此，为什么会抛出异常的原因知道了，但是还是没弄清楚是怎么伪装成List集合使用的。</p><p>如果细心就会发现，<code>AbstractList</code>实现了<code>List</code>接口，然后基于Java的多态特性，父类引用指向子类对象，自然而然就被当做了List集合使用。</p><p>到此，分析过源码之后，就知道了为什么<code>Arrays.asList()</code>没有把数组转换为<code>List</code>集合，为什么在调用<code>add</code>、<code>remove</code>和<code>clear</code>方法时会抛出异常。知道了怎么伪装成为List集合使用的。</p><h1 id="那么又如何正确的将数组转换为List集合呢？"><a href="#那么又如何正确的将数组转换为List集合呢？" class="headerlink" title="那么又如何正确的将数组转换为List集合呢？"></a>那么又如何正确的将数组转换为List集合呢？</h1><h2 id="1、手动实现"><a href="#1、手动实现" class="headerlink" title="1、手动实现"></a>1、手动实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span>&lt;T&gt; List&lt;T&gt; <span class="title">arrayToList</span><span class="params">(T[] array)</span></span>&#123;</span><br><span class="line">        List&lt;T&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (T t:array)&#123;</span><br><span class="line">            list.add(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2、最简单的方法"><a href="#2、最简单的方法" class="headerlink" title="2、最简单的方法"></a>2、最简单的方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] strings = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王二&quot;</span>,<span class="string">&quot;麻子&quot;</span>&#125;;</span><br><span class="line">List&lt;String&gt; list1 = <span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(strings));</span><br></pre></td></tr></table></figure><h2 id="3、Java8的Stream"><a href="#3、Java8的Stream" class="headerlink" title="3、Java8的Stream"></a>3、Java8的Stream</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] strings = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王二&quot;</span>,<span class="string">&quot;麻子&quot;</span>&#125;;</span><br><span class="line">List&lt;String&gt; list = Arrays.stream(strings).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ消息队列的入门使用</title>
      <link href="/2020/05/30/RabbitMQ%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/05/30/RabbitMQ%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1、MQ简介"><a href="#1、MQ简介" class="headerlink" title="1、MQ简介"></a>1、MQ简介</h1><p>MQ（Message Queue）消息队列，是基础数据结构中“先进先出”的一种数据机构。指把要传输的数据（消息）放在队列中，用队列机制来实现消息传递——生产者产生消息并把消息放入队列，然后由消费者去处理。消费者可以到指定队列拉取消息，或者订阅相应的队列，由MQ服务端给其推送消息。(来源：百度百科)</p><h2 id="1-1、实现"><a href="#1-1、实现" class="headerlink" title="1.1、实现"></a>1.1、实现</h2><p>消息队列常常保存在链表结构中，拥有权限的进程可以向消息队列中写入或读取消息。</p><p>当前使用较多的消息队列有：<code>RebbitMQ</code>、<code>RocketMQ</code>、<code>ActiveMQ</code>、<code>kafka</code>、<code>ZeroMQ</code>、<code>MetaMq</code>等。而部分数据库也具有消息队列功能的，例如：<code>Redis</code>、<code>Mysql</code>、以及<code>phxsql</code>。</p><h2 id="1-2、特点"><a href="#1-2、特点" class="headerlink" title="1.2、特点"></a>1.2、特点</h2><p>MQ是一种消费者和生产者形式。生产者往消息队列中不断的写入新的消息数据，消费者从消息队列中获取消息数据。MQ和JMS类似，但不同的是JMS是Sun Java 消息中间件服务的一个标准和API定义，而MQ则是遵循了AMQP协议的具体实现和产品。</p><ul><li><p>AMQP：</p><blockquote><p>即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息 队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中 间件可传递消息，并不受客户端/中间件不同产品，不同的开发语言等条件的限制。 </p></blockquote></li><li><p>JMS：</p><blockquote><p>Java消息服务（Java Message Service）应用程序接口，是一个Java平台中关于面向消息中 间件的API，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。 Java消息服务 是一个与具体平台无关的API，绝大多数MOM提供商都对JMS提供支持。常见的消息队列，大部分 都实现了JMS API，如 ActiveMQ ， Redis 以及 RabbitMQ 等。 </p></blockquote></li></ul><h2 id="1-3、优缺点"><a href="#1-3、优缺点" class="headerlink" title="1.3、优缺点"></a>1.3、优缺点</h2><p><strong>优点</strong></p><ul><li>应用耦合</li><li>异步处理</li><li>流量削锋<ul><li>传统模式：并发量大的时候，所有的请求直接怼到数据库，造成数据库连接异常</li><li>中间件模式：按照数据库能处理的并发量，慢慢的一批一批的从消息队列中拉去消息数据。在生产中，这个短暂的高峰期积压是允许的。</li></ul></li><li></li></ul><p><strong>缺点</strong></p><p>系统可用性降低，系统复杂性增加</p><h2 id="1-3、使用场景"><a href="#1-3、使用场景" class="headerlink" title="1.3、使用场景"></a>1.3、使用场景</h2><p>消息队列，是分布式系统中的重要组成部件，其通用的使用场景可以简单的描述为：<strong>当不需要立即获得结果，但是并发量有需要进行控制的使用，差不多就是需要消息队列的时候。</strong></p><p>例如场景：注册账号，注册完毕后发送短信到用户填写的手机号上(非必须)</p><p>原始：</p><ol><li>前端发起注册请求</li><li>后端处理完毕注册请求，并保存注册的账号数据信息</li><li>像用户注册填写的手机号发送注册成功消息。(非必须)</li><li>返回注册结果到前端</li></ol><p>这样有一个问题，就是前端注册要等待后端所有的处理完毕，才能收到注册成功的消息，但是对于前端用户来说，他需要的只是注册账号，发送短信什么的就不需要了，而后端还需要在发送短信后才返回结果给前台，这样的话就降低了用户的使用好感度，短信对用户来说是非必须的。如果在发送短信的时候出现了问题，那么前端用户就讲收不到正确的结果。既然发送短信是非必须的，那么就可以开一个多线程进行操作，但是这只是打个比方，实际开发中，多线程是一个很麻烦的问题。处理不当就会出现大问题，所以不推荐使用多线程，当然，如果技术很牛逼，那就另说了。</p><p>使用消息队列</p><ol><li>前端发起注册请求</li><li>后端处理完毕注册请求，并保存注册的账号数据信息<ul><li>把短信写入到消息队列中，消费者从消息队列中获取数据，然后发送到指定手机号（<strong>异步处理</strong>）</li></ul></li><li>返回注册结果到前端</li></ol><p>消息队列是异步的，所以在保存完注册的账号数据后可以直接返回结果。</p><hr><h1 id="2、RabbitMQ"><a href="#2、RabbitMQ" class="headerlink" title="2、RabbitMQ"></a>2、RabbitMQ</h1><h2 id="2-1、为什么使用RabbitMQ"><a href="#2-1、为什么使用RabbitMQ" class="headerlink" title="2.1、为什么使用RabbitMQ"></a>2.1、为什么使用RabbitMQ</h2><p>AMQP是一种协议，协议肯定不能进行实际的处理，RabbitMQ就是一个实现了AMQP协议的工具，通过RabbitMQ进行消息队列的使用。</p><p>AMQP的主要特征是面向消息、队列、路由(包括点对点和发布/订阅)、可靠性、安全。</p><p>RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如： Python 、 Ruby 、 .NET 、 Java 、 JMS 、 C 、 PHP 、 ActionScript 、 XMPP 、 STOMP 等，支持 AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。 </p><p>为什么使用RabbitMQ：</p><ul><li>基于AMQP协议</li><li>高并发(是一个容量的概念，服务器可以接受的大任务数量)</li><li>高性能(是一个速度的概念，单位时间内服务器可以处理的任务数)</li><li>高可用(是一个持久的概念，单位时间内服务器可以正常工作的时间比例) </li><li>强大的社区支持，以及很多公司都在使用 </li><li>支持插件 </li><li>支持多语言 </li></ul><h2 id="2-2、安装"><a href="#2-2、安装" class="headerlink" title="2.2、安装"></a>2.2、安装</h2><h3 id="2-2-1、安装Erlang"><a href="#2-2-1、安装Erlang" class="headerlink" title="2.2.1、安装Erlang"></a>2.2.1、安装Erlang</h3><p>RabbitMQ依赖于Erlang，所以需要先安装Erlang。</p><p>官网：<a href="https://www.erlang.org/">https://www.erlang.org/</a></p><h4 id="2-2-1-1、Windows下安装"><a href="#2-2-1-1、Windows下安装" class="headerlink" title="2.2.1.1、Windows下安装"></a>2.2.1.1、Windows下安装</h4><p>略。。。</p><h4 id="2-2-1-2、Linux下安装"><a href="#2-2-1-2、Linux下安装" class="headerlink" title="2.2.1.2、Linux下安装"></a>2.2.1.2、Linux下安装</h4><p>系统：Centos7</p><p>官网安装说明：<a href="https://www.rabbitmq.com/install-rpm.html">https://www.rabbitmq.com/install-rpm.html</a></p><p>1、修改yum源，新建<code>rabbitmq-erlang.repo</code>文件，指定安装erlang的版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/rabbitmq-erlang.repo</span><br></pre></td></tr></table></figure><p>添加下面的信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[rabbitmq_erlang]</span><br><span class="line">name=rabbitmq_erlang</span><br><span class="line">baseurl=https://packagecloud.io/rabbitmq/erlang/el/7/$basearch</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://packagecloud.io/rabbitmq/erlang/gpgkey</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">metadata_expire=300</span><br><span class="line"></span><br><span class="line">[rabbitmq_erlang-source]</span><br><span class="line">name=rabbitmq_erlang-source</span><br><span class="line">baseurl=https://packagecloud.io/rabbitmq/erlang/el/7/SRPMS</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://packagecloud.io/rabbitmq/erlang/gpgkey</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">metadata_expire=300</span><br></pre></td></tr></table></figure><p>2、清除yum缓存，重新创建缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>3、安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install erlang</span><br></pre></td></tr></table></figure><p>4、检测是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">erl</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200529180029458.png" alt="在这里插入图片描述"></p><h3 id="2-2-2、安装RabbitMQ"><a href="#2-2-2、安装RabbitMQ" class="headerlink" title="2.2.2、安装RabbitMQ"></a>2.2.2、安装RabbitMQ</h3><p>官网安装说明：<a href="https://www.rabbitmq.com/install-rpm.html">https://www.rabbitmq.com/install-rpm.html</a></p><p>Erlang和RabbitMQ版本对应：<a href="https://www.rabbitmq.com/which-erlang.html">https://www.rabbitmq.com/which-erlang.html</a></p><p>Github上的RabbitMQ的rpm下载地址：<a href="https://github.com/rabbitmq/rabbitmq-server/releases">https://github.com/rabbitmq/rabbitmq-server/releases</a></p><p><img src="https://img-blog.csdnimg.cn/20200529181519874.png" alt="在这里插入图片描述"></p><p>1、将下载的rpm上传到Centos</p><p><img src="https://img-blog.csdnimg.cn/20200529181641562.png" alt="在这里插入图片描述"></p><p>2、安装RabbitMQ</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rabbitmq-server-3.7.12-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>3、安装UI查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure><p>4、启动RebbitMQ服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rabbitmq-server.service</span><br></pre></td></tr></table></figure><p>5、检测服务</p><blockquote><p>Centos7版本的检测服务命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status rabbitmq-server.service</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200529181938707.png" alt="在这里插入图片描述"></p><p>6、修改访问权限</p><p>不修改访问权限的话，只能本机访问，我的是虚拟机，我需要在物理机访问，就需要进行设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/rabbitmq/lib/rabbitmq_server-3.7.12/ebin/rabbit.app</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200529182512193.png" alt="在这里插入图片描述"></p><p>7、重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rabbitmq-server.service</span><br></pre></td></tr></table></figure><p>8、物理机访问</p><p>默认端口：15672</p><p><img src="https://img-blog.csdnimg.cn/20200529182657692.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200529182712433.png" alt="在这里插入图片描述"></p><h2 id="2-3、RabbitMQ的名词"><a href="#2-3、RabbitMQ的名词" class="headerlink" title="2.3、RabbitMQ的名词"></a>2.3、RabbitMQ的名词</h2><p><strong>Producing：</strong>Producing意思不仅仅是发送消息。发送消息的程序叫做producer生产者。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHJvZHVjZXIucG5n?x-oss-process=image/format,png"></p><p><strong>Queue：</strong> Queue是一个消息盒子的名称。它存活在 RabbitMQ 里。虽然消息流经 RabbitMQ 和你的应用程 序，但是他们只能在 Queue 里才能被保存。Queue 没有任何边界的限制，你想存多少消息都可以，它 本质上是一个无限的缓存。许多生产者都可以向一个 Queue 里发送消息，许多消费者都可以从一个 Queue 里接收消息。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcXVldWUucG5n?x-oss-process=image/format,png"></p><p><strong>Consuming：</strong>Consuming 的意思和接收类似。等待接收消息的程序叫做消费者。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvY29uc3VtZXIucG5n?x-oss-process=image/format,png"></p><h1 id="3、RabbitMQ的7种队列模式使用"><a href="#3、RabbitMQ的7种队列模式使用" class="headerlink" title="3、RabbitMQ的7种队列模式使用"></a>3、RabbitMQ的7种队列模式使用</h1><p>POM依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.rabbitmq/amqp-client --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.rabbitmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>amqp-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-1、简单模式队列"><a href="#3-1、简单模式队列" class="headerlink" title="3.1、简单模式队列"></a>3.1、简单模式队列</h2><blockquote><p>1个生产者，1个消费者</p></blockquote><p>处理模型：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHl0aG9uLW9uZS5wbmc?x-oss-process=image/format,png"></p><ul><li>p：生产者</li><li>C：消费者</li><li>中间件：Queue，消息缓存区</li></ul><p><strong>生产者-发送消息</strong></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvc2VuZGluZy5wbmc?x-oss-process=image/format,png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.simple.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单模式-生产者-发送消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span> (Connection connection = factory.newConnection();</span><br><span class="line">             <span class="comment">// 获取通道</span></span><br><span class="line">            Channel channel = connection.createChannel()) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                声明队列</span></span><br><span class="line"><span class="comment">                1、队列名称</span></span><br><span class="line"><span class="comment">                2、是否持久化</span></span><br><span class="line"><span class="comment">                3、排他队列，如果一个度列被声明名排他队列，该队列仅对首次声明它的连接可见，并在连接断开时自动删除</span></span><br><span class="line"><span class="comment">                    1. 排他队列是基于连接可见的，同一连接的不同通道是可以同时访问同一个连接创建的排他队列的。</span></span><br><span class="line"><span class="comment">                    2. &quot;首次&quot;，如果一个连接已经声明了一个排他队列，其他连接是不允许建立同名的排他队列的，这个与普通队列不同。</span></span><br><span class="line"><span class="comment">                    3. 即使该队列是持久化的，一旦连接关闭或者客户端退出，该排他队列都会被自动删除的。</span></span><br><span class="line"><span class="comment">                    这种队列适用于只限于一个客户端发送读取消息的应用场景。</span></span><br><span class="line"><span class="comment">               4、自动删除，如果该队列没有任何订阅的消费者的话，该队列会被自动删除。这种队列适用于临时队列</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 消息内容</span></span><br><span class="line">            String message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">            <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>消费者-接收消息</strong></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcmVjZWl2aW5nLnBuZw?x-oss-process=image/format,png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.simple.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单模式-消费者-接收消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        <span class="comment">// 获取信息</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">// 申明队列</span></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line">        <span class="comment">// 接收消息</span></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缺点：如果任务量很大，消息得不到及时的消费会造成队列积压。问题很严重，比如内存溢出，消息丢失等。</p><p>解决：配置多个消费者。</p><p><strong>总结：简单队列模式，消息处理不及时，吞吐量较低。</strong></p><h2 id="3-2、工作模式队列（Work-Queues）"><a href="#3-2、工作模式队列（Work-Queues）" class="headerlink" title="3.2、工作模式队列（Work Queues）"></a>3.2、工作模式队列（Work Queues）</h2><h3 id="3-2-1、消息轮询分发-Round-robin"><a href="#3-2-1、消息轮询分发-Round-robin" class="headerlink" title="3.2.1、消息轮询分发(Round-robin)"></a>3.2.1、消息轮询分发(Round-robin)</h3><p>轮询分发：依次交替，一个消费者消费一个，依次往复</p><p>处理模型</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHl0aG9uLXR3by5wbmc?x-oss-process=image/format,png"></p><p><strong>工作模式队列-轮训-消息发送者</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.work.rr.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作模式队列-轮训-消息发送者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;work_rr&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span> (Connection connection = factory.newConnection();</span><br><span class="line">             <span class="comment">// 获取通道</span></span><br><span class="line">            Channel channel = connection.createChannel()) &#123;</span><br><span class="line"></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">                <span class="comment">// 要发送的消息内容</span></span><br><span class="line">                String message = <span class="string">&quot;Hello World!--&quot;</span>+i;</span><br><span class="line">                <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">                channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">                System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>工作模式队列-轮训-消息接收者</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.work.rr.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作模式队列-轮训-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;work_rr&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>工作模式队列-轮训-消息接收者</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.work.rr.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作模式队列-轮训-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;work_rr&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 模拟程序执行耗时</span></span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缺点：任务量很大，虽然解决了及时消费，单位时间内消息处理速度加快，提高了吞吐量，可 是不同消费者处理消息的时间不同，导致部分消费者的资源被浪费。</p><p>解决：采用消息公平分发</p><p><strong>总结：及时消费，处理速度加快，提高吞吐量，部分资源浪费</strong></p><h3 id="3-2-2、消息公平分发-fair-dispatch"><a href="#3-2-2、消息公平分发-fair-dispatch" class="headerlink" title="3.2.2、消息公平分发(fair dispatch)"></a>3.2.2、消息公平分发(fair dispatch)</h3><p>消费速度快的多处理点</p><p>处理模型</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHJlZmV0Y2gtY291bnQucG5n?x-oss-process=image/format,png"></p><p><strong>工作模式队列-公平-消息发送者</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.work.fair.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作模式队列-公平-消息发送者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;work_fair&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span> (Connection connection = factory.newConnection();</span><br><span class="line">             <span class="comment">// 获取通道</span></span><br><span class="line">            Channel channel = connection.createChannel()) &#123;</span><br><span class="line"></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">                <span class="comment">// 要发送的消息内容</span></span><br><span class="line">                String message = <span class="string">&quot;Hello World!--&quot;</span>+i;</span><br><span class="line">                <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">                channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">                System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>工作模式队列-公平-消息接收者</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.work.fair.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作模式队列-公平-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;work_fair&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 限制只发不超过1条的消息给同一个消费者，当消息处理完毕后，有了反馈，才会进行第二次发送</span></span><br><span class="line">        <span class="keyword">int</span> prefetchCount = <span class="number">1</span>;</span><br><span class="line">        channel.basicQos(prefetchCount);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 模拟程序运行耗时</span></span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 手动回执(反馈)</span></span><br><span class="line">            channel.basicAck(delivery.getEnvelope().getDeliveryTag(), <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置false</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">false</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.work.fair.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作模式队列-公平-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;work_fair&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 限制只发不超过1条的消息给同一个消费者，当消息处理完毕后，有了反馈，才会进行第二次发送</span></span><br><span class="line">        <span class="keyword">int</span> prefetchCount = <span class="number">1</span>;</span><br><span class="line">        channel.basicQos(prefetchCount);</span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 模拟程序执行耗时</span></span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 手动回执(反馈)</span></span><br><span class="line">            channel.basicAck(delivery.getEnvelope().getDeliveryTag(), <span class="keyword">false</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置false</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">false</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：让固定的消费者消费，类似于微信订阅的公众号，只有订阅了指定的公众号才能收到指定公众号推送的内容</p><p>解决：采用发布/订阅模式</p><p><strong>总结：消息处理速度不同，收到的消息也不同，消费速度快的处理的数量比较多，最大化的使用计算机资源。</strong></p><h2 id="3-3、发布-订阅模式队列-Publish-Subscribe"><a href="#3-3、发布-订阅模式队列-Publish-Subscribe" class="headerlink" title="3.3、发布/订阅模式队列(Publish/Subscribe)"></a>3.3、发布/订阅模式队列(Publish/Subscribe)</h2><p>类似于微信公众号，只有订阅了指定公众号的微信才能收到对应的消息</p><p>处理模型：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHl0aG9uLXRocmVlLW92ZXJhbGwucG5n?x-oss-process=image/format,png"></p><p><strong>发布/订阅模式-消息发送者</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.fanout.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.BuiltinExchangeType;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布/订阅模式-消息发送者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line">    <span class="comment">//交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_direct&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span> (Connection connection = factory.newConnection();</span><br><span class="line">             <span class="comment">// 获取通道</span></span><br><span class="line">            Channel channel = connection.createChannel()) &#123;</span><br><span class="line">            <span class="comment">// 申明交换机</span></span><br><span class="line">            channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);</span><br><span class="line">            String message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">            <span class="comment">//将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;&quot;</span>, <span class="keyword">null</span>, message.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.fanout.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布/订阅模式-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_direct&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 申明交换机</span></span><br><span class="line">        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);</span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">// 绑定交换机于队列</span></span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.fanout.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布/订阅模式-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_direct&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 申明交换机</span></span><br><span class="line">        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);</span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">// 绑定交换机于队列</span></span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：指定消费者消费？类似于微信公众号的付费文章</p><p>解决：采用direct路由模式。</p><p><strong>总结：一条消息，可以让多个消费者消费</strong></p><h2 id="3-4、路由模式队列-Routing"><a href="#3-4、路由模式队列-Routing" class="headerlink" title="3.4、路由模式队列(Routing)"></a>3.4、路由模式队列(Routing)</h2><p>指定消费者消费，类似于微信公众号的付费文章</p><p>模型</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHl0aG9uLWZvdXIucG5n?x-oss-process=image/format,png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.direct.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.BuiltinExchangeType;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式-消息发送者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line">    <span class="comment">//交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_direct&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span> (Connection connection = factory.newConnection();</span><br><span class="line">             <span class="comment">// 获取通道</span></span><br><span class="line">            Channel channel = connection.createChannel()) &#123;</span><br><span class="line">            <span class="comment">// 申明路由交换机</span></span><br><span class="line">            channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 多个消息</span></span><br><span class="line">            String vipEssay = <span class="string">&quot;VIP文章&quot;</span>;</span><br><span class="line">            String xmEssay = <span class="string">&quot;限免文章&quot;</span>;</span><br><span class="line">            String essay = <span class="string">&quot;普通文章&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;vipEssay&quot;</span>, <span class="keyword">null</span>, vipEssay.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;xmEssay&quot;</span>, <span class="keyword">null</span>, xmEssay.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;essay&quot;</span>, <span class="keyword">null</span>, essay.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + vipEssay + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + xmEssay + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + essay + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.direct.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_direct&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 申明交换机</span></span><br><span class="line">        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);</span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">// 绑定交换机于队列</span></span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;essay&quot;</span>);</span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;xmEssay&quot;</span>);</span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;vipEssay&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.direct.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_direct&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 申明交换机</span></span><br><span class="line">        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);</span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">// 绑定交换机和队列</span></span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;essay&quot;</span>);</span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;xmEssay&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：生产者产生的消息如果厂家需求过多需要设置很多路由?</p><p>解决：采用topic主题模式</p><p><strong>总结：生产者发送了多天设置了路由规则的消息，消费者可以根据具体的路由规则消息对应的队列中的消息。</strong></p><h2 id="3-5、主题模式队列-Topics"><a href="#3-5、主题模式队列-Topics" class="headerlink" title="3.5、主题模式队列(Topics)"></a>3.5、主题模式队列(Topics)</h2><p>使用指定规则匹配路由</p><p>模型</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHl0aG9uLWZpdmUucG5n?x-oss-process=image/format,png"></p><ul><li>*：代替1个单词</li><li>#：代替0个或多个单词</li></ul><p>以模型图为例</p><ul><li>routingKey=”quick.orange.rabbit”的消息会同时路由到Q1与Q2， </li><li>routingKey=”lazy.orange.fox”的消息会路由到Q1，Q2, </li><li>routingKey=”lazy.brown.fox”的消息会路由到Q2， </li><li>routingKey=”lazy.pink.rabbit”的消息会路由到Q2；</li><li>routingKey=”quick.brown.fox”; routingKey=”orange”;routingKey=”quick.orange.male.rabbit”的消息将会被丢弃，因为它们没有匹配任何 bindingKey。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.topic.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.BuiltinExchangeType;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式-消息发送者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line">    <span class="comment">//交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_topic&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span> (Connection connection = factory.newConnection();</span><br><span class="line">             <span class="comment">// 获取通道</span></span><br><span class="line">            Channel channel = connection.createChannel()) &#123;</span><br><span class="line">            <span class="comment">// 申明主题交换机</span></span><br><span class="line">            channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 多个消息</span></span><br><span class="line">            String vipEssay = <span class="string">&quot;VIP文章&quot;</span>;</span><br><span class="line">            String xmEssay = <span class="string">&quot;限免文章&quot;</span>;</span><br><span class="line">            String essay = <span class="string">&quot;普通文章&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;a.b.c&quot;</span>, <span class="keyword">null</span>, vipEssay.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;d.b.e.f.c&quot;</span>, <span class="keyword">null</span>, xmEssay.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            channel.basicPublish(EXCHANGE_NAME, <span class="string">&quot;e.f&quot;</span>, <span class="keyword">null</span>, essay.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + vipEssay + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + xmEssay + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + essay + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.topic.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_topic&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 申明交换机</span></span><br><span class="line">        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);</span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">// 绑定交换机于队列</span></span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;#.f.#&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.topic.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式-消息接收者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换机名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_NAME = <span class="string">&quot;exchange_topic&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 申明交换机</span></span><br><span class="line">        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);</span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">// 绑定交换机和队列</span></span><br><span class="line">        channel.queueBind(queueName,EXCHANGE_NAME,<span class="string">&quot;*.b.*&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：RabbitMQ本身是基于异步的消息处理，是否可以同步实现？</p><p>解决：采用RPC模式</p><p><strong>总结：根据指定规则匹配不同的路由</strong></p><h2 id="3-6、RPC远程过程调用模式队列-RPC"><a href="#3-6、RPC远程过程调用模式队列-RPC" class="headerlink" title="3.6、RPC远程过程调用模式队列(RPC)"></a>3.6、RPC远程过程调用模式队列(RPC)</h2><p>模型</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL2ltZy90dXRvcmlhbHMvcHl0aG9uLXNpeC5wbmc?x-oss-process=image/format,png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.rpc.server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.AMQP;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeoutException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RPC模式队列-服务端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RPCServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String RPC_QUEUE_NAME = <span class="string">&quot;rpc_queue&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算斐波那契数列</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">            <span class="keyword">final</span> Connection connection = factory.newConnection();</span><br><span class="line">            <span class="comment">// 获取通道</span></span><br><span class="line">            <span class="keyword">final</span> Channel channel = connection.createChannel();</span><br><span class="line">            <span class="comment">// 声明队列</span></span><br><span class="line">            channel.queueDeclare(RPC_QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            channel.queuePurge(RPC_QUEUE_NAME);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                限制RabbitMQ只发不超过1条的消息给同一个消费者。</span></span><br><span class="line"><span class="comment">                当消息处理完毕后，有了反馈，才会进行第二次发送。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">int</span> prefetchCount = <span class="number">1</span>;</span><br><span class="line">            channel.basicQos(prefetchCount);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Awaiting RPC requests&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Object monitor = <span class="keyword">new</span> Object();</span><br><span class="line">            <span class="comment">// 获取消息</span></span><br><span class="line">            DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">                <span class="comment">// 获取replyTo队列和correlationId请求标识</span></span><br><span class="line">                AMQP.BasicProperties replyProps = <span class="keyword">new</span> AMQP.BasicProperties</span><br><span class="line">                        .Builder()</span><br><span class="line">                        .correlationId(delivery.getProperties().getCorrelationId())</span><br><span class="line">                        .build();</span><br><span class="line"></span><br><span class="line">                String response = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 接收客户端消息</span></span><br><span class="line">                    String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                    <span class="keyword">int</span> n = Integer.parseInt(message);</span><br><span class="line"></span><br><span class="line">                    System.out.println(<span class="string">&quot; [.] fib(&quot;</span> + message + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">                    <span class="comment">// 服务端根据业务需求处理</span></span><br><span class="line">                    response += fib(n);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot; [.] &quot;</span> + e.toString());</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="comment">// 将处理结果发送至replyTo队列同时携带correlationId属性</span></span><br><span class="line">                    channel.basicPublish(<span class="string">&quot;&quot;</span>, delivery.getProperties().getReplyTo(), replyProps,</span><br><span class="line">                            response.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                    <span class="comment">// 手动回执消息</span></span><br><span class="line">                    channel.basicAck(delivery.getEnvelope().getDeliveryTag(), <span class="keyword">false</span>);</span><br><span class="line">                    <span class="comment">// RabbitMq consumer worker thread notifies the RPC server owner thread</span></span><br><span class="line">                    <span class="comment">// RabbitMq消费者工作线程通知RPC服务器其他所有线程运行</span></span><br><span class="line">                    <span class="keyword">synchronized</span> (monitor) &#123;</span><br><span class="line">                        monitor.notify();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 监听队列</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                autoAck = true代表自动确认消息</span></span><br><span class="line"><span class="comment">                autoAck = false代表手动确认消息</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">boolean</span> autoAck = <span class="keyword">false</span>;</span><br><span class="line">            channel.basicConsume(RPC_QUEUE_NAME, autoAck, deliverCallback, consumerTag -&gt; &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// Wait and be prepared to consume the message from RPC client.</span></span><br><span class="line">            <span class="comment">// 线程等待并准备接收来自RPC客户端的消息</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (monitor) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        monitor.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TimeoutException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.rpc.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.AMQP;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeoutException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RPC模式队列-客户端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RPCClient</span> <span class="keyword">implements</span> <span class="title">AutoCloseable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Connection connection;</span><br><span class="line">    <span class="keyword">private</span> Channel channel;</span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> String requestQueueName = <span class="string">&quot;rpc_queue&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RPCClient</span><span class="params">()</span> <span class="keyword">throws</span> IOException, TimeoutException </span>&#123;</span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        connection = factory.newConnection();</span><br><span class="line">        channel = connection.createChannel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (RPCClient fibonacciRpc = <span class="keyword">new</span> RPCClient()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                String i_str = Integer.toString(i);</span><br><span class="line">                System.out.println(<span class="string">&quot; [x] Requesting fib(&quot;</span> + i_str + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">                <span class="comment">// 请求服务端</span></span><br><span class="line">                String response = fibonacciRpc.call(i_str);</span><br><span class="line">                System.out.println(<span class="string">&quot; [.] Got &#x27;&quot;</span> + response + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | TimeoutException | InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求服务端</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">call</span><span class="params">(String message)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// correlationId请求标识ID</span></span><br><span class="line">        <span class="keyword">final</span> String corrId = UUID.randomUUID().toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取队列名称</span></span><br><span class="line">        String replyQueueName = channel.queueDeclare().getQueue();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置replyTo队列和correlationId请求标识</span></span><br><span class="line">        AMQP.BasicProperties props = <span class="keyword">new</span> AMQP.BasicProperties</span><br><span class="line">                .Builder()</span><br><span class="line">                .correlationId(corrId)</span><br><span class="line">                .replyTo(replyQueueName)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送消息至队列</span></span><br><span class="line">        channel.basicPublish(<span class="string">&quot;&quot;</span>, requestQueueName, props, message.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置线程等待，每次只接收一个响应结果</span></span><br><span class="line">        <span class="keyword">final</span> BlockingQueue&lt;String&gt; response = <span class="keyword">new</span> ArrayBlockingQueue&lt;&gt;(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 接受服务器返回结果</span></span><br><span class="line">        String ctag = channel.basicConsume(replyQueueName, <span class="keyword">true</span>, (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (delivery.getProperties().getCorrelationId().equals(corrId)) &#123;</span><br><span class="line">                <span class="comment">// 将给定的元素在给定的时间内设置到线程队列中，如果设置成功返回true, 否则返回false</span></span><br><span class="line">                response.offer(<span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, consumerTag -&gt; &#123;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从线程队列中获取值，如果线程队列中没有值，线程会一直阻塞，直到线程队列中有值，并且取得该值</span></span><br><span class="line">        String result = response.take();</span><br><span class="line">        <span class="comment">// 从消息队列中丢弃该值</span></span><br><span class="line">        channel.basicCancel(ctag);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7、确认模式队列（conﬁrm）"><a href="#3-7、确认模式队列（conﬁrm）" class="headerlink" title="3.7、确认模式队列（conﬁrm）"></a>3.7、确认模式队列（conﬁrm）</h2><p>如何确定消息队列收到了生产者发送的消息？如果在发送消息前程序崩了怎么办？</p><h3 id="3-7-1、事务机制控制"><a href="#3-7-1、事务机制控制" class="headerlink" title="3.7.1、事务机制控制"></a>3.7.1、事务机制控制</h3><ul><li><p>txSelect()：开启事务</p></li><li><p>txCommit()：提交事务</p></li><li><p>txRollback()：回滚事务</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.tx.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务-发送消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;tx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            connection = factory.newConnection();</span><br><span class="line">            <span class="comment">// 获取通道</span></span><br><span class="line">            channel = connection.createChannel();</span><br><span class="line">            <span class="comment">// 开启事务</span></span><br><span class="line">            channel.txSelect();</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                声明队列</span></span><br><span class="line"><span class="comment">                1、队列名称</span></span><br><span class="line"><span class="comment">                2、是否持久化</span></span><br><span class="line"><span class="comment">                3、排他队列，如果一个度列被声明名排他队列，该队列仅对首次声明它的连接可见，并在连接断开时自动删除</span></span><br><span class="line"><span class="comment">                    1. 排他队列是基于连接可见的，同一连接的不同通道是可以同时访问同一个连接创建的排他队列的。</span></span><br><span class="line"><span class="comment">                    2. &quot;首次&quot;，如果一个连接已经声明了一个排他队列，其他连接是不允许建立同名的排他队列的，这个与普通队列不同。</span></span><br><span class="line"><span class="comment">                    3. 即使该队列是持久化的，一旦连接关闭或者客户端退出，该排他队列都会被自动删除的。</span></span><br><span class="line"><span class="comment">                    这种队列适用于只限于一个客户端发送读取消息的应用场景。</span></span><br><span class="line"><span class="comment">               4、自动删除，如果该队列没有任何订阅的消费者的话，该队列会被自动删除。这种队列适用于临时队列</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 消息内容</span></span><br><span class="line">            String message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">            <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            channel.txCommit();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// 回滚</span></span><br><span class="line">            channel.txRollback();</span><br><span class="line">            channel.close();</span><br><span class="line">            connection.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.tx.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务-接收消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;tx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        <span class="comment">// 获取信息</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">// 申明队列</span></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line">        <span class="comment">// 接收消息</span></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缺点：降低了RabbitMQ的消息吞吐量</p><p>解决：使用confirm模式</p><p><strong>总结：使用事务，可以在发送请求但是没有提交事务前回滚事务，撤回发送的消息。</strong></p><h3 id="3-7-2、确认模式-confirm"><a href="#3-7-2、确认模式-confirm" class="headerlink" title="3.7.2、确认模式(confirm)"></a>3.7.2、确认模式(confirm)</h3><p>生产者设置为确认模式，发送消息时所有的消息都会被指派一个唯一的ID，一旦消息被投递套指定的队列之后，就会返回一个确认结果给生产者(包含消息的唯一ID)，这样生产者就知道了消息已经正确到达了目的地。如果消息和队列时可以持久化的，那么确认消息会将消息写入磁盘后发出。</p><p>conﬁrm模式大的好处在于他是异步的，一旦发布一条消息，生产者应用程序就可以在等信道返回 确认的同时继续发送下一条消息，当消息终得到确认之后，生产者应用便可以通过回调方法来处理该 确认消息，如果RabbitMQ因为自身内部错误导致消息丢失，就会发送一条nack消息，生产者应用程序 同样可以在回调方法中处理该nack消息。</p><p>实现Confirm确认机制有三种方式</p><p><strong>1、普通Confirm模式</strong></p><p>每发送一条消息后，调用waitForConﬁrms()方法，等待服务器端confirm。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.confirm.sync.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认模式-同步-单条-发送消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;confirm_sync&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            connection = factory.newConnection();</span><br><span class="line">            <span class="comment">// 获取通道</span></span><br><span class="line">            channel = connection.createChannel();</span><br><span class="line">            <span class="comment">// 开启确认模式</span></span><br><span class="line">            channel.confirmSelect();</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                声明队列</span></span><br><span class="line"><span class="comment">                1、队列名称</span></span><br><span class="line"><span class="comment">                2、是否持久化</span></span><br><span class="line"><span class="comment">                3、排他队列，如果一个度列被声明名排他队列，该队列仅对首次声明它的连接可见，并在连接断开时自动删除</span></span><br><span class="line"><span class="comment">                    1. 排他队列是基于连接可见的，同一连接的不同通道是可以同时访问同一个连接创建的排他队列的。</span></span><br><span class="line"><span class="comment">                    2. &quot;首次&quot;，如果一个连接已经声明了一个排他队列，其他连接是不允许建立同名的排他队列的，这个与普通队列不同。</span></span><br><span class="line"><span class="comment">                    3. 即使该队列是持久化的，一旦连接关闭或者客户端退出，该排他队列都会被自动删除的。</span></span><br><span class="line"><span class="comment">                    这种队列适用于只限于一个客户端发送读取消息的应用场景。</span></span><br><span class="line"><span class="comment">               4、自动删除，如果该队列没有任何订阅的消费者的话，该队列会被自动删除。这种队列适用于临时队列</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 消息内容</span></span><br><span class="line">            String message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">            <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 确认消息是否发送成功</span></span><br><span class="line">            <span class="keyword">if</span> (channel.waitForConfirms())&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;消息发送成功&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;消息发送失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.confirm.sync.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认模式-同步-单条-接收消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;confirm_sync&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        <span class="comment">// 获取信息</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">// 申明队列</span></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line">        <span class="comment">// 接收消息</span></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、批量confirm模式：每发送一批消息后，调用waitForConﬁrmsOrDie()方法，等待服务器端 conﬁrm。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.confirm.sync.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认模式-同步-批量-发送消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;confirm_sync&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            connection = factory.newConnection();</span><br><span class="line">            <span class="comment">// 获取通道</span></span><br><span class="line">            channel = connection.createChannel();</span><br><span class="line">            <span class="comment">// 开启确认模式</span></span><br><span class="line">            channel.confirmSelect();</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                声明队列</span></span><br><span class="line"><span class="comment">                1、队列名称</span></span><br><span class="line"><span class="comment">                2、是否持久化</span></span><br><span class="line"><span class="comment">                3、排他队列，如果一个度列被声明名排他队列，该队列仅对首次声明它的连接可见，并在连接断开时自动删除</span></span><br><span class="line"><span class="comment">                    1. 排他队列是基于连接可见的，同一连接的不同通道是可以同时访问同一个连接创建的排他队列的。</span></span><br><span class="line"><span class="comment">                    2. &quot;首次&quot;，如果一个连接已经声明了一个排他队列，其他连接是不允许建立同名的排他队列的，这个与普通队列不同。</span></span><br><span class="line"><span class="comment">                    3. 即使该队列是持久化的，一旦连接关闭或者客户端退出，该排他队列都会被自动删除的。</span></span><br><span class="line"><span class="comment">                    这种队列适用于只限于一个客户端发送读取消息的应用场景。</span></span><br><span class="line"><span class="comment">               4、自动删除，如果该队列没有任何订阅的消费者的话，该队列会被自动删除。这种队列适用于临时队列</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 消息内容</span></span><br><span class="line">            String message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">            <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">            channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 确认消息是否发送成功-多条</span></span><br><span class="line">            <span class="comment">// 如果有一条没被确认，就会抛IO异常</span></span><br><span class="line">            channel.waitForConfirmsOrDie();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//            if (channel.waitForConfirms())&#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;消息发送成功&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;else &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;消息发送失败&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Sent &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.confirm.sync.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认模式-同步-批量-接收消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;confirm_sync&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        <span class="comment">// 获取信息</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">// 申明队列</span></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line">        <span class="comment">// 接收消息</span></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、异步confirm模式：提供一个回调方法，服务端conﬁrm了一条或者多条消息后Client端会回调这个 方法。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.confirm.async.send;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConfirmListener;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.SortedSet;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认模式-异步-发送消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;confirm_async&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过工厂创建连接</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 维护信息发送回执deliveryTag</span></span><br><span class="line">            <span class="keyword">final</span> SortedSet&lt;Long&gt; confirmSet = Collections.synchronizedSortedSet(<span class="keyword">new</span> TreeSet&lt;&gt;());</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            connection = factory.newConnection();</span><br><span class="line">            <span class="comment">// 获取通道</span></span><br><span class="line">            channel = connection.createChannel();</span><br><span class="line">            <span class="comment">// 开启确认模式</span></span><br><span class="line">            channel.confirmSelect();</span><br><span class="line">            <span class="comment">// 声明队列</span></span><br><span class="line">            channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 添加channel 监听</span></span><br><span class="line">            channel.addConfirmListener(<span class="keyword">new</span> ConfirmListener() &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 已确认</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@param</span> l 唯一标识</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@param</span> b 确认多条还是单条，true多条</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleAck</span><span class="params">(<span class="keyword">long</span> l, <span class="keyword">boolean</span> b)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                    <span class="comment">// 判断确认的是多条还是单条</span></span><br><span class="line">                    <span class="keyword">if</span> (b)&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;handleAck--success--&gt;multiple&quot;</span> + l);</span><br><span class="line">                        <span class="comment">// 清除前 l 标识ID</span></span><br><span class="line">                        confirmSet.headSet(l+<span class="number">1</span>).clear();</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;handleAck--success--&gt;single&quot;</span> + l);</span><br><span class="line">                        confirmSet.remove(l);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 未确认</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@param</span> l</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleNack</span><span class="params">(<span class="keyword">long</span> l, <span class="keyword">boolean</span> b)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (b)&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;handleNack--failed--&gt;multiple--&gt;&quot;</span> + l);</span><br><span class="line">                        <span class="comment">// 清除前 deliveryTag 项标识id</span></span><br><span class="line">                        confirmSet.headSet(l + <span class="number">1L</span>).clear();</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;handleNack--failed--&gt;single&quot;</span> + l);</span><br><span class="line">                        confirmSet.remove(l);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 循环发送消息</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                <span class="comment">// 消息内容</span></span><br><span class="line">                String message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">                <span class="comment">// 获取unconfirm的消息序号</span></span><br><span class="line">                Long seqNo = channel.getNextPublishSeqNo();</span><br><span class="line">                <span class="comment">// 将消息放入队列并发送</span></span><br><span class="line">                channel.basicPublish(<span class="string">&quot;&quot;</span>, QUEUE_NAME, <span class="keyword">null</span>, message.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">                <span class="comment">// 将消息序号添加到SortedSet</span></span><br><span class="line">                confirmSet.add(seqNo);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            channel.close();</span><br><span class="line">            connection.close();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.confirm.async.recv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.DeliverCallback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认模式-异步-接收消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recv</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 队列名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUEUE_NAME = <span class="string">&quot;confirm_async&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建连接工厂</span></span><br><span class="line">        ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        factory.setHost(<span class="string">&quot;192.168.10.100&quot;</span>);</span><br><span class="line">        factory.setPort(<span class="number">5672</span>);</span><br><span class="line">        factory.setUsername(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setPassword(<span class="string">&quot;shop&quot;</span>);</span><br><span class="line">        factory.setVirtualHost(<span class="string">&quot;/shop&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        Connection connection = factory.newConnection();</span><br><span class="line">        <span class="comment">// 获取信息</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">// 申明队列</span></span><br><span class="line">        channel.queueDeclare(QUEUE_NAME, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>);</span><br><span class="line">        <span class="comment">// 接收消息</span></span><br><span class="line">        DeliverCallback deliverCallback = (consumerTag, delivery) -&gt; &#123;</span><br><span class="line">            String message = <span class="keyword">new</span> String(delivery.getBody(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot; [x] Received &#x27;&quot;</span> + message + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 监听队列</span></span><br><span class="line">        channel.basicConsume(QUEUE_NAME, <span class="keyword">true</span>, deliverCallback, consumerTag -&gt; &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4、Spring集成RabbitMQ"><a href="#4、Spring集成RabbitMQ" class="headerlink" title="4、Spring集成RabbitMQ"></a>4、Spring集成RabbitMQ</h1><p>官网：<a href="https://spring.io/projects/spring-amqp">https://spring.io/projects/spring-amqp</a></p><h2 id="4-1、创建聚合项目"><a href="#4-1、创建聚合项目" class="headerlink" title="4.1、创建聚合项目"></a>4.1、创建聚合项目</h2><p><img src="https://img-blog.csdnimg.cn/20200529225908824.png" alt="在这里插入图片描述"></p><p>父pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-rabbitmq<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-rabbitmq<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.amqp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-rabbit-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-2、生产者"><a href="#4-2、生产者" class="headerlink" title="4.2、生产者"></a>4.2、生产者</h2><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-rabbitmq<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>provider<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hello world!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SpringApplication.run(App.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Binding;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.BindingBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Queue;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.TopicExchange;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/29 22:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 申明队列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">queue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(<span class="string">&quot;topic&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 申明交换机</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TopicExchange <span class="title">topicExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TopicExchange(<span class="string">&quot;topicExchange&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将队列绑定到交换机上</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">binding</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(queue()).to(topicExchange()).with(<span class="string">&quot;*.msg.#&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/29 22:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Send</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String message = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            1、交换机参数</span></span><br><span class="line"><span class="comment">            2、路由key</span></span><br><span class="line"><span class="comment">            3、消息内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        rabbitTemplate.convertAndSend(<span class="string">&quot;topicExchange&quot;</span>,<span class="string">&quot;topic.msg&quot;</span>,message);</span><br><span class="line">        System.out.println(<span class="string">&quot;发送消息：&quot;</span>+message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-3、消费者"><a href="#4-3、消费者" class="headerlink" title="4.3、消费者"></a>4.3、消费者</h2><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-rabbitmq<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>consumer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hello world!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SpringApplication.run(App.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/29 22:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &quot;topic&quot;)</span>   <span class="comment">// 监听队列</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收消息的处理方法</span></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recv</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;接受消息：&quot;</span>+message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-4、测试"><a href="#4-4、测试" class="headerlink" title="4.4、测试"></a>4.4、测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/29 22:54</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSend</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> Send send;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSend</span><span class="params">()</span></span>&#123;</span><br><span class="line">        send.send();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis的入门使用</title>
      <link href="/2020/05/14/Redis%E7%9A%84%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/05/14/Redis%E7%9A%84%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0、Redis"><a href="#0、Redis" class="headerlink" title="0、Redis"></a>0、Redis</h1><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvYWVjMzc5MzEwYTU1YjMxOTEzOWNiNjcxNDFhOTgyMjZjZmZjMTc0OA?x-oss-process=image/format,png"></p><blockquote><p>REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。</p><p>Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p><p>它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Hash), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</p></blockquote><p>Redis 是完全<strong>开源</strong>免费的，遵守BSD协议，是一个高性能的<strong>key-value数据库</strong>。</p><p><strong>Redis 与其他 key - value 缓存产品有以下三个特点：</strong></p><ul><li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li><li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li><li>Redis支持数据的备份，即master-slave模式的数据备份。</li></ul><p><strong>Redis的优势：</strong></p><ul><li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li><li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li><li>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</li><li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li></ul><p><a href="https://redis.io/">官网：https://redis.io/</a></p><p><a href="http://www.redis.cn/">中文官网：http://www.redis.cn/</a></p><h1 id="1、Linux下的Redis的安装"><a href="#1、Linux下的Redis的安装" class="headerlink" title="1、Linux下的Redis的安装"></a>1、Linux下的Redis的安装</h1><h2 id="1-1、下载"><a href="#1-1、下载" class="headerlink" title="1.1、下载"></a>1.1、下载</h2><p><a href="https://redis.io/download">下载地址：https://redis.io/download</a></p><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-5.0.3.tar.gz</span><br></pre></td></tr></table></figure><h2 id="1-2、上传文件到服务器"><a href="#1-2、上传文件到服务器" class="headerlink" title="1.2、上传文件到服务器"></a>1.2、上传文件到服务器</h2><p>如果是直接使用wget下载的就不用再上传</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z0UjA1U0tnV1VUem84VWU5UHV3VzRPTWpoTFk?x-oss-process=image/format,png"></p><h2 id="1-3、解压文件"><a href="#1-3、解压文件" class="headerlink" title="1.3、解压文件"></a>1.3、解压文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-5.0.3.tar.gz</span><br></pre></td></tr></table></figure><p>解压后目录</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z1WmpOM0I1SkdyNkhWd2lzZ2xUUUhUSVYxN2o?x-oss-process=image/format,png"></p><h2 id="1-4、安装依赖"><a href="#1-4、安装依赖" class="headerlink" title="1.4、安装依赖"></a>1.4、安装依赖</h2><blockquote><p>redis 是基于C++开发的，所有要安装C++的环境</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc-c++ autoconf automake</span><br></pre></td></tr></table></figure><h2 id="1-5、预编译"><a href="#1-5、预编译" class="headerlink" title="1.5、预编译"></a>1.5、预编译</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd redis-5.0.3 # 进入redis目录</span><br><span class="line">make # 预编译</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZwN3oyZmJfN1daNUFyVm1iNGlvY1lYek5BQm8?x-oss-process=image/format,png"></p><h2 id="1-6、安装"><a href="#1-6、安装" class="headerlink" title="1.6、安装"></a>1.6、安装</h2><p>创建一个安装目录，不然会安装到一个默认路径，后期路径不好找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/redis</span><br></pre></td></tr></table></figure><ul><li>-p：级联创建，上级目录不存在也一同创建</li></ul><p>安装到指定路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make PREFIX=/usr/local/redis/ install</span><br></pre></td></tr></table></figure><ul><li>PREFIX：指定要安装的路径</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZrV0o2d09JcDhtbHJ3Rm5EenFQaWFvTExyNGk?x-oss-process=image/format,png"></p><ul><li><strong>Redis-cli</strong>：客户端</li><li><strong>Redis-server</strong>：服务器端</li></ul><h2 id="1-7、前台启动"><a href="#1-7、前台启动" class="headerlink" title="1.7、前台启动"></a>1.7、前台启动</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZzOUNMUTZUV2hYZnd5V1o2UG94VVdZOTZNUjQ?x-oss-process=image/format,png"></p><p>默认就是前台启动，但是前台启动有一个不好的地方，就是Redis会一致占用前台输入，无法进行别的从操作。这是为了方便就需要把Redis设置为后台启动，让它在后台运行，不耽误前台进行别的操作。</p><h2 id="1-8、后台启动"><a href="#1-8、后台启动" class="headerlink" title="1.8、后台启动"></a>1.8、后台启动</h2><p>1、ctrl+c，结束前台程序运行</p><p>2、复制解压的redis目录下的redis.conf文件到安装的路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /root/redis-5.0.3/redis.conf /usr/local/redis/bin</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZtWnhzek1keDAwM244RlVKaFlUTjRwVjlJMUM?x-oss-process=image/format,png"></p><p>3、修改bin目录下的redis.conf文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>修改<code>daemonize on</code> 为 <code>daemonize yes</code></p><p>4、再次运行查看</p><p>再次启动程序，需要戴胜redis.conf文件，否则还是前台运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./redis-server redis.conf# 启动程序</span><br><span class="line">ps -ef |grep redis # 查看和redis相关的进程</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZpNnRZaHctOEw4U0lydlBBU2t5Mjh6TEotUzg?x-oss-process=image/format,png"></p><p>5、后台进程关闭</p><p>前台启动的话只需要ctrl+c就可以关闭，但是后台启动相比就麻烦了点，需要直接关闭进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 5977</span><br></pre></td></tr></table></figure><p>5977：进程号</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZzYWF0ZEREUjFYVmhPbnR0aWYtT3l6RWtHVV8?x-oss-process=image/format,png"></p><h1 id="2、windows客户端方法Redis"><a href="#2、windows客户端方法Redis" class="headerlink" title="2、windows客户端方法Redis"></a>2、windows客户端方法Redis</h1><h2 id="2-1、安装客户端软件"><a href="#2-1、安装客户端软件" class="headerlink" title="2.1、安装客户端软件"></a>2.1、安装客户端软件</h2><p><a href="https://lanzous.com/ickc0yd">下载地址：https://lanzous.com/ickc0yd</a></p><p>常规安装，选择安装路径，下一步就可以了</p><h2 id="2-2、配置服务器端Redis程序"><a href="#2-2、配置服务器端Redis程序" class="headerlink" title="2.2、配置服务器端Redis程序"></a>2.2、配置服务器端Redis程序</h2><blockquote><p>默认情况下，Redis是不允许别的客户端连接访问的，只能是本机(127.0.0.1)访问，需要设置一下，否则windows客户端连接不上redis</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>1、注释掉<code>bind 127.0.0.1</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">bind</span> 127.0.0.1</span></span><br></pre></td></tr></table></figure><p>如果注释掉bind就表示可以是任何ip访问，如果是想要指定的IP访问，直接在127.0.0.1 后添加指定IP就可以</p><p>2、关闭保护模式，设置protected-mode为no，否则依然无法连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected-mode no</span><br></pre></td></tr></table></figure><p>3、设置访问认证(密码)</p><p>默认状态下是没有开启认证的，需要手动取消<code>#</code>注释(该命令大概在500行左右)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass root</span><br></pre></td></tr></table></figure><p>4、保存退出，结束进程，重新启动redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server redis.conf</span><br></pre></td></tr></table></figure><h2 id="2-3、windows客户端连接redis"><a href="#2-3、windows客户端连接redis" class="headerlink" title="2.3、windows客户端连接redis"></a>2.3、windows客户端连接redis</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZoSEpmZEk1TEIzM0tfSktlQmZ2YV9ZY3Q1ZXo?x-oss-process=image/format,png"></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZoZDBFc2lNSnpaUTExb3NOUHUxMW1zTE9oNno?x-oss-process=image/format,png"></p><h1 id="3、Redis-cli连接操作Redis"><a href="#3、Redis-cli连接操作Redis" class="headerlink" title="3、Redis-cli连接操作Redis"></a>3、Redis-cli连接操作Redis</h1><blockquote><p>Redis-cli就是Redis自带的一个客户端程序，可以用来操作Redis，在安装的路径里</p></blockquote><h2 id="3-1、redis-clid连接redis"><a href="#3-1、redis-clid连接redis" class="headerlink" title="3.1、redis-clid连接redis"></a>3.1、redis-clid连接redis</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -p 6379 -a root</span><br></pre></td></tr></table></figure><ul><li>6379：redis的默认端口</li><li>root：认证密码</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZxbDB6cGxlVnFoa3c3Ri1mNG1TTnVGZ0pkM3U?x-oss-process=image/format,png"></p><h2 id="3-2、操作redis"><a href="#3-2、操作redis" class="headerlink" title="3.2、操作redis"></a>3.2、操作redis</h2><h3 id="3-2-1、String类型"><a href="#3-2-1、String类型" class="headerlink" title="3.2.1、String类型"></a>3.2.1、String类型</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set name zhangsan# 添加一个名为name的String类型数据，值为zhangsan</span><br><span class="line">get name# 获取名为name的String类型数据</span><br><span class="line">mset age 18 addr henan # 批量添加String类型数据</span><br><span class="line">mget age addr# 批量获取String类型数据，获取名为age和addr的数据</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z1QWRPajhFV0h0aFRmeE1TbnVCYTJBU01iNmw?x-oss-process=image/format,png"></p><h3 id="3-2-2、Hash类型"><a href="#3-2-2、Hash类型" class="headerlink" title="3.2.2、Hash类型"></a>3.2.2、Hash类型</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hset userInfo name list # 添加一个名为UserInfo的hash类型，其中一个名是name，值为list</span><br><span class="line">hget userInfo name # 获取名为name的数据</span><br><span class="line">hmset userInfo age 18 addr henan # 添加多条数据</span><br><span class="line">hmget userInfo age addr # 获取多个数据</span><br><span class="line">hgetall userInfo # 获取全部数据</span><br><span class="line">hdel userInfo addr # 删除指定数据</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z2bEVLM3pnRFdteFdmUjBIU1M5VGRfOEE2SzU?x-oss-process=image/format,png"></p><h3 id="3-2-3、List类型"><a href="#3-2-3、List类型" class="headerlink" title="3.2.3、List类型"></a>3.2.3、List类型</h3><blockquote><p>这里的List类型比较特殊，分为左右两种，一种是从左边添加，一种是从右边添加。左边添加就类似于一种压栈效果，先进的排到后面，右边添加就是常规的追加。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lpush students zhangsan lisi # 左边添加</span><br><span class="line">lrange students 0 2# 遍历list，0起始索引，2结束索引</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZnbzdYZnFDVGFCdlhVV0FwTVNmelBPUzNTRmU?x-oss-process=image/format,png"></p><p>可以看到zhangsan排在了后面，而lisi排在前面，类似于一个压栈的效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpush students wangwu zhaoliu # 右边添加</span><br><span class="line">lrange students 0 8# 遍历，结束索引可以是一个比list长度大的数字</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZyZS1RcDlHNjhGYmY5elluZXhjbFE1QkdvWnk?x-oss-process=image/format,png"></p><p>可以看到，右边添加wangwu在zhaoliu前边，就是一个追加的效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">llen students #查看长度</span><br><span class="line">lrem students 1 lisi # 删除指定数量的指定元素</span><br></pre></td></tr></table></figure><ul><li>lrem students 1 lisi：删除students中的1个lisi</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZrMVplTHRSVGRpS21nOUlDbkVJNGNDOW82MzU?x-oss-process=image/format,png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lpop students # 移除左边开始的第一个元素</span><br><span class="line">rpop students # 移除右边开始的第一个元素</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZwZ295Z0x4QnJVRFZfaE5yYS04QWctM1BpWmE?x-oss-process=image/format,png"></p><h3 id="3-2-4、Set类型"><a href="#3-2-4、Set类型" class="headerlink" title="3.2.4、Set类型"></a>3.2.4、Set类型</h3><blockquote><p>这里的set类型和java的一样，无序，不重复</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sadd letters aaa bbb ccc ddd # 添加set类型数据</span><br><span class="line">smembers letters# 查看set类型数据</span><br><span class="line">scard letters# 获取set类型数据条数</span><br><span class="line">srem letters aaa ccc# 删除set类型里的指定元素</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZyazB5ZVdhN2prX283RWQ5RmNKQkxGZmFLMWM?x-oss-process=image/format,png"></p><h3 id="3-2-5、Sorted-Set类型"><a href="#3-2-5、Sorted-Set类型" class="headerlink" title="3.2.5、Sorted Set类型"></a>3.2.5、Sorted Set类型</h3><blockquote><p>一个有序的Set类型</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zadd score 5 zhangsan 6 lisi 3 wangwu 9 zhaoliuclear # 添加参数，数值代表等级，数值越低，排名越靠前</span><br><span class="line">zrange score  0 8# 遍历数据</span><br><span class="line">zcard score# 数据元素条数</span><br><span class="line">zrem score lisi # 删除指定元素</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZuaDFvQ1dIb0FpQ2g1akFkS2VPSnFmSGpPSUk?x-oss-process=image/format,png"></p><h3 id="3-2-6、层级关系-目录结构存储数据"><a href="#3-2-6、层级关系-目录结构存储数据" class="headerlink" title="3.2.6、层级关系|目录结构存储数据"></a>3.2.6、层级关系|目录结构存储数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mset user:01 ahh # 以层级关系存储数据,:分割层级</span><br><span class="line">mget user:01 # 以层级关系查找数据，：分割层级</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZtMmJTWWNjZklCODBPaVNqakllUDllSlNPaXA?x-oss-process=image/format,png"></p><h3 id="3-2-7、设置Key的失效时间"><a href="#3-2-7、设置Key的失效时间" class="headerlink" title="3.2.7、设置Key的失效时间"></a>3.2.7、设置Key的失效时间</h3><p>有几种不同的命令可以设置失效时间</p><p>方式一：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set code test ex 10 # 10秒后失效</span><br></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set code test # 添加数据</span><br><span class="line">expire code 10 # 设置10秒后失效</span><br></pre></td></tr></table></figure><ul><li>expire：秒</li><li>pexpire：毫秒</li><li>expireat：秒的时间戳</li><li>pexpireat：毫秒的时间戳</li></ul><p>方式三：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set code test nx ex 10 # code存在时才设置失效时间</span><br></pre></td></tr></table></figure><ul><li>code：key</li><li>test：value</li><li>nx：不存在时设置时间，还有一个可选值<code>xx</code>，存在时设置失效时间</li><li>ex：秒[px：毫秒]</li></ul><h3 id="3-2-8、删除"><a href="#3-2-8、删除" class="headerlink" title="3.2.8、删除"></a>3.2.8、删除</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set code test # 添加数据</span><br><span class="line">del code # 删除数据</span><br></pre></td></tr></table></figure><h1 id="4、Redis持久化储存"><a href="#4、Redis持久化储存" class="headerlink" title="4、Redis持久化储存"></a>4、Redis持久化储存</h1><blockquote><p>Redis是内存中的数据结构储存系统，不是直接存储在磁盘上的，所有就有可能会在机器宕机的时候无法有效的储存数据，所以就需要持久化储存。</p><p>Redis有三种方式可以用于持久化储存数据</p></blockquote><h2 id="4-1、bgsave"><a href="#4-1、bgsave" class="headerlink" title="4.1、bgsave"></a>4.1、bgsave</h2><p>使用bgsave手动持久化储存数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set test test</span><br><span class="line">bgsave</span><br></pre></td></tr></table></figure><p>这种方式后进行持久化操作很方便，但是很麻烦，需要重复多个的执行<code>bgsave</code>命令</p><h2 id="4-2、save配置"><a href="#4-2、save配置" class="headerlink" title="4.2、save配置"></a>4.2、save配置</h2><p>Redis还自带了一种save的持久化储存方式，这是一种自动化的储存方式（默认开启）。可以在redis.conf文件中看到(大概220行左右)，这种方式会在指定时间内，进行自动保存</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZqbzZtazExTGhpdXpFN3BjZGtybVUtS09sa3c?x-oss-process=image/format,png"></p><p>默认配置如图，表示在</p><p>900秒内，有一个key被改动，则在900秒后被自动持久化保存</p><p>300秒内，有10个key被改动，则在300秒后被自动持久化保存</p><p>60秒内，有10000个key被改动，则在60秒后被自动持久化保存</p><p>但是这种情况也不是很完善，比如在60秒内有10000的数据被改动，但是在58秒的时候机器断电了，不到低60秒，它也不会自动持久化储存。</p><h2 id="4-3、appendonly"><a href="#4-3、appendonly" class="headerlink" title="4.3、appendonly"></a>4.3、appendonly</h2><p>默认情况就该配置是关闭的，需要手动开启，设置on为yes(redis.conf文件的大概700行左右)，该配置开启后会自动关闭上面的save持久化方式。该方式的特点就是会保存写过的所有的命令，会把所有的命令保存到一个appendonly.aof文件中，每次启动redis都会先执行该文件，以达到持久化储存的效果。</p><p>但是这种方式也有弊端，那就是会保存很多没用的代码，后续文件会越来越大，影响redis的运行效果。</p><h1 id="5、Java操作Redis"><a href="#5、Java操作Redis" class="headerlink" title="5、Java操作Redis"></a>5、Java操作Redis</h1><h2 id="5-1、创建SpringBoot项目"><a href="#5-1、创建SpringBoot项目" class="headerlink" title="5.1、创建SpringBoot项目"></a>5.1、创建SpringBoot项目</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZrUlNIUXVHUW1JZ05sbFgxd0JRSTdpOGFFSnM?x-oss-process=image/format,png"></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZvWkJiel8xYW44R2k3MkhHZzNlXzRxS0tHTzM?x-oss-process=image/format,png"></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZudmpQcVVqelZxYUtLMnNDRlFMel9sNUQtZkE?x-oss-process=image/format,png"></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z0SXIydWtpZmhNUDZWYXFGVE54eHNzRzRsZVA?x-oss-process=image/format,png"></p><h2 id="5-2、修改POM配置文件"><a href="#5-2、修改POM配置文件" class="headerlink" title="5.2、修改POM配置文件"></a>5.2、修改POM配置文件</h2><p>1、修改Test依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、修改Redis依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                1.x的版本默认采用的连接池技术是Jedis</span></span><br><span class="line"><span class="comment">                2.x以上版本默认连接时是Lettuce,</span></span><br><span class="line"><span class="comment">                如果要使用Jedis连接池需要排除Lettuce的依赖</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--排除lettuce依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、添加Jedis依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完整文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisdemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>redisdemo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Redis组件依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                1.x的版本默认采用的连接池技术是Jedis</span></span><br><span class="line"><span class="comment">                2.x以上版本默认连接时是Lettuce,</span></span><br><span class="line"><span class="comment">                如果要使用Jedis连接池需要排除Lettuce的依赖</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--排除lettuce依赖--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Jedis依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Web--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--test--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-3、Jedis的的配置文件"><a href="#5-3、Jedis的的配置文件" class="headerlink" title="5.3、Jedis的的配置文件"></a>5.3、Jedis的的配置文件</h2><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="comment"># Redis服务器地址</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.100</span></span><br><span class="line">    <span class="comment"># Redis服务器端口</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="comment"># Redis服务器认证密码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="comment"># 要连接的数据库，默认就是0</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 连接超时时间</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">10000ms</span></span><br><span class="line">    <span class="attr">jedis:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="comment"># 最大连接数，默认是8</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">1024</span></span><br><span class="line">        <span class="comment"># 最大连接组设时间，单位毫秒，默认-1ms</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="string">10000ms</span></span><br><span class="line">        <span class="comment"># 最大空闲连接，默认8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">200</span></span><br><span class="line">        <span class="comment"># 最小连接，默认0</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="5-4、创建连接池配置类"><a href="#5-4、创建连接池配置类" class="headerlink" title="5.4、创建连接池配置类"></a>5.4、创建连接池配置类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.redisdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/13 19:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> Jedis配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span>  <span class="comment">// 配置类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 服务器地址</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.host&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务器端口</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 认证密码</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接超时时间</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.timeout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String timeout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最大链接数</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.jedis.pool.max-active&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer maxActive;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最大链接数</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.jedis.pool.max-wait&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String maxWait;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最大空闲连接</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.jedis.pool.max-idle&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer maxIdle;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最小空闲连接</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.redis.jedis.pool.min-idle&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer minIdle;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JedisPool <span class="title">redisPoolFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 连接池配置类</span></span><br><span class="line">        JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        <span class="comment">// 设置最大连接阻塞时间</span></span><br><span class="line">        jedisPoolConfig.setMaxWaitMillis(Long.parseLong(maxWait.substring(<span class="number">0</span>,maxWait.length()-<span class="number">2</span>)));</span><br><span class="line">        <span class="comment">// 最大链接数</span></span><br><span class="line">        jedisPoolConfig.setMaxTotal(maxActive);</span><br><span class="line">        <span class="comment">// 最大空闲连接</span></span><br><span class="line">        jedisPoolConfig.setMaxIdle(maxIdle);</span><br><span class="line">        <span class="comment">// 最小空闲连接</span></span><br><span class="line">        jedisPoolConfig.setMinIdle(minIdle);</span><br><span class="line">        <span class="comment">// 连接池，连接池配置类，服务器地址，端口，连接超时时间。认证密码</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JedisPool(jedisPoolConfig,host,port,Integer.parseInt(timeout.substring(<span class="number">0</span>,timeout.length()-<span class="number">2</span>)),password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-5、注入连接池，切入点拦截"><a href="#5-5、注入连接池，切入点拦截" class="headerlink" title="5.5、注入连接池，切入点拦截"></a>5.5、注入连接池，切入点拦截</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> JedisPool jedisPool;</span><br><span class="line"><span class="keyword">private</span> Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@BeforeEach</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initConn</span><span class="params">()</span></span>&#123;</span><br><span class="line">    jedis = jedisPool.getResource();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AfterEach</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeCinn</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span>!=jedis)&#123;</span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-5、操作String"><a href="#5-5、操作String" class="headerlink" title="5.5、操作String"></a>5.5、操作String</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testString</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 添加单条数据</span></span><br><span class="line">    jedis.set(<span class="string">&quot;ahh&quot;</span>,<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">    jedis.set(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;18&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加多条数据,参数：奇数-key，偶数-value</span></span><br><span class="line">    jedis.mset(<span class="string">&quot;addr&quot;</span>,<span class="string">&quot;henan&quot;</span>,<span class="string">&quot;sex&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取一条数据</span></span><br><span class="line">    System.out.println(jedis.get(<span class="string">&quot;ahh&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取多条数据</span></span><br><span class="line">    jedis.mget(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;addr&quot;</span>,<span class="string">&quot;sex&quot;</span>).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    jedis.del(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-6、操作Hash"><a href="#5-6、操作Hash" class="headerlink" title="5.6、操作Hash"></a>5.6、操作Hash</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作Hash</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHash</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 添加一条数据</span></span><br><span class="line">    jedis.hset(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">    <span class="comment">// 添加多条数据</span></span><br><span class="line">    Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;sex&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    jedis.hmset(<span class="string">&quot;userInfo&quot;</span>,map);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取一条数据</span></span><br><span class="line">    System.out.println(jedis.hget(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;name&quot;</span>));</span><br><span class="line">    <span class="comment">// 获取多条数据</span></span><br><span class="line">    jedis.hmget(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;sex&quot;</span>).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 获取Hash类型多有的数据</span></span><br><span class="line">    jedis.hgetAll(<span class="string">&quot;userInfo&quot;</span>).forEach((k, v) -&gt; &#123;</span><br><span class="line">        System.out.println(k+<span class="string">&quot;----&quot;</span>+v);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    jedis.hdel(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-7、操作List"><a href="#5-7、操作List" class="headerlink" title="5.7、操作List"></a>5.7、操作List</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作List</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testList</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 左添加</span></span><br><span class="line">    jedis.lpush(<span class="string">&quot;aabc&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">    <span class="comment">// 右添加</span></span><br><span class="line">    jedis.rpush(<span class="string">&quot;aabc&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取数据</span></span><br><span class="line">    jedis.lrange(<span class="string">&quot;aabc&quot;</span>,<span class="number">0</span>,<span class="number">10</span>).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 获取总条数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;总条数：&quot;</span>+jedis.llen(<span class="string">&quot;aabc&quot;</span>));</span><br><span class="line">    <span class="comment">// 删除list元素</span></span><br><span class="line">    jedis.lrem(<span class="string">&quot;aabc&quot;</span>,<span class="number">1</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">    <span class="comment">// 左移除</span></span><br><span class="line">    jedis.lpop(<span class="string">&quot;aabc&quot;</span>);</span><br><span class="line">    <span class="comment">// 右移除</span></span><br><span class="line">    jedis.rpop(<span class="string">&quot;aabc&quot;</span>);</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    jedis.del(<span class="string">&quot;aabc&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-8、操作Set"><a href="#5-8、操作Set" class="headerlink" title="5.8、操作Set"></a>5.8、操作Set</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作Set</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSet</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 添加数据</span></span><br><span class="line">    jedis.sadd(<span class="string">&quot;letters&quot;</span>,<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;bb&quot;</span>,<span class="string">&quot;cc&quot;</span>,<span class="string">&quot;dd&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取数据</span></span><br><span class="line">    jedis.smembers(<span class="string">&quot;letters&quot;</span>).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 获取条数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;总条数：&quot;</span>+jedis.scard(<span class="string">&quot;letters&quot;</span>));</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    jedis.srem(<span class="string">&quot;letters&quot;</span>,<span class="string">&quot;dd&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-9、操作Sorted-Set"><a href="#5-9、操作Sorted-Set" class="headerlink" title="5.9、操作Sorted Set"></a>5.9、操作Sorted Set</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作SortedSet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSortedSet</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 添加数据</span></span><br><span class="line">    Map&lt;String,Double&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;张三&quot;</span>,<span class="number">5d</span>);</span><br><span class="line">    map.put(<span class="string">&quot;李四&quot;</span>,<span class="number">2d</span>);</span><br><span class="line">    map.put(<span class="string">&quot;王五&quot;</span>,<span class="number">8d</span>);</span><br><span class="line">    map.put(<span class="string">&quot;赵六&quot;</span>,<span class="number">6d</span>);</span><br><span class="line">    jedis.zadd(<span class="string">&quot;students&quot;</span>,map);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数据</span></span><br><span class="line">    jedis.zrange(<span class="string">&quot;students&quot;</span>,<span class="number">0</span>,<span class="number">8</span>).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 总条数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;总条数：&quot;</span>+jedis.zcard(<span class="string">&quot;students&quot;</span>));</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    jedis.zrem(<span class="string">&quot;students&quot;</span>,<span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-10、层级关系-目录形式存储数据"><a href="#5-10、层级关系-目录形式存储数据" class="headerlink" title="5.10、层级关系|目录形式存储数据"></a>5.10、层级关系|目录形式存储数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 层级关系|目录形式存储数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDir</span><span class="params">()</span></span>&#123;</span><br><span class="line">    jedis.set(<span class="string">&quot;users:user:ahh&quot;</span>,<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">    jedis.set(<span class="string">&quot;users:user:zhangsan&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    System.out.println(jedis.get(<span class="string">&quot;users:user:ahh&quot;</span>));</span><br><span class="line">    System.out.println(jedis.get(<span class="string">&quot;users:user:zhangsan&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-11、设置失效时间"><a href="#5-11、设置失效时间" class="headerlink" title="5.11、设置失效时间"></a>5.11、设置失效时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置失效时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExpire</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 方法1</span></span><br><span class="line">    jedis.set(<span class="string">&quot;code&quot;</span>,<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    jedis.expire(<span class="string">&quot;code&quot;</span>,<span class="number">10</span>);    <span class="comment">// 10秒</span></span><br><span class="line">    jedis.pexpire(<span class="string">&quot;code&quot;</span>,<span class="number">10000L</span>);    <span class="comment">// 10000毫秒</span></span><br><span class="line">    System.out.println(jedis.ttl(<span class="string">&quot;code&quot;</span>));  <span class="comment">// 获取剩余秒数据</span></span><br><span class="line">    <span class="comment">// 方法2</span></span><br><span class="line">    jedis.setex(<span class="string">&quot;code&quot;</span>,<span class="number">10</span>,<span class="string">&quot;test&quot;</span>);  <span class="comment">// 10秒</span></span><br><span class="line">    jedis.psetex(<span class="string">&quot;code&quot;</span>,<span class="number">10000L</span>,<span class="string">&quot;test&quot;</span>);  <span class="comment">// 10000毫秒</span></span><br><span class="line">    System.out.println(jedis.pttl(<span class="string">&quot;code&quot;</span>)); <span class="comment">// 获取剩余毫秒</span></span><br><span class="line">    <span class="comment">// 方法3</span></span><br><span class="line">    SetParams setParams = <span class="keyword">new</span> SetParams();</span><br><span class="line">    <span class="comment">// 不存在时</span></span><br><span class="line">    <span class="comment">//        setParams.nx();</span></span><br><span class="line">    <span class="comment">// 存在时</span></span><br><span class="line">    setParams.xx();</span><br><span class="line">    <span class="comment">// 设置失效时间-秒</span></span><br><span class="line">    <span class="comment">//        setParams.ex(10);</span></span><br><span class="line">    <span class="comment">// 设置失效时间-毫秒</span></span><br><span class="line">    setParams.px(<span class="number">10000L</span>);</span><br><span class="line">    jedis.set(<span class="string">&quot;code&quot;</span>,<span class="string">&quot;test&quot;</span>,setParams);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-12、获取所有的key"><a href="#5-12、获取所有的key" class="headerlink" title="5.12、获取所有的key"></a>5.12、获取所有的key</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取所有的key</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testKeyAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获取key的数量</span></span><br><span class="line">    System.out.println(jedis.dbSize());</span><br><span class="line">    <span class="comment">// 获取所有的key</span></span><br><span class="line">    jedis.keys(<span class="string">&quot;*&quot;</span>).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-13、删除"><a href="#5-13、删除" class="headerlink" title="5.13、删除"></a>5.13、删除</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDel</span><span class="params">()</span></span>&#123;</span><br><span class="line">    jedis.del(<span class="string">&quot;userInfo&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-14、事务"><a href="#5-14、事务" class="headerlink" title="5.14、事务"></a>5.14、事务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testMulti</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Transaction tx = jedis.multi();</span><br><span class="line">    <span class="comment">// 开启事务</span></span><br><span class="line">    tx.set(<span class="string">&quot;tel&quot;</span>,<span class="string">&quot;1010&quot;</span>);</span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    tx.exec();</span><br><span class="line">    <span class="comment">// 事务回滚</span></span><br><span class="line">    <span class="comment">// tx.discard();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-15、byte序列化"><a href="#5-15、byte序列化" class="headerlink" title="5.15、byte序列化"></a>5.15、byte序列化</h2><p>序列化和反序列化工具</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.redisdemo.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/13 20:40</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 序列化和反序列化工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SerializeUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] serialize(Object obj)&#123;</span><br><span class="line">        <span class="comment">// 对象输出流</span></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 字节数组输出流</span></span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 序列化</span></span><br><span class="line">            baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            oos = <span class="keyword">new</span> ObjectOutputStream(baos);</span><br><span class="line">            oos.writeObject(obj);</span><br><span class="line">            <span class="keyword">return</span> baos.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">unserialize</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span>==bytes)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 反序列化</span></span><br><span class="line">            bais = <span class="keyword">new</span> ByteArrayInputStream(bytes);</span><br><span class="line">            ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(bais);</span><br><span class="line">            <span class="keyword">return</span> ois.readObject();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用户类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.redisdemo.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/13 20:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据储存和获取</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * byte序列化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testByte</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="keyword">byte</span>[] userkey = SerializeUtil.serialize(<span class="string">&quot;user:&quot;</span>+user.getId());</span><br><span class="line">    <span class="keyword">byte</span>[] uservalue = SerializeUtil.serialize(user);</span><br><span class="line">    jedis.set(userkey,uservalue);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数据</span></span><br><span class="line">    <span class="keyword">byte</span>[] values = jedis.get(userkey);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    System.out.println(SerializeUtil.unserialize(values));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6、Redis搭建主从复用"><a href="#6、Redis搭建主从复用" class="headerlink" title="6、Redis搭建主从复用"></a>6、Redis搭建主从复用</h1><p>单机版的Redis可能会出现一个问题就是，一旦服务器宕机就无法使用，所以Redis有一个主从复用的概念，就是说有一个主服务器和从服务器，主服务器提供写入和读取，从服务器提供取的功能，一旦其中一个从服务器出现了问题，还有其它的从服务区提供使用，一旦主服务器出现了问题，可以把其中的一个从服务器变为主服务器。</p><h2 id="6-1、读写分离"><a href="#6-1、读写分离" class="headerlink" title="6.1、读写分离"></a>6.1、读写分离</h2><p>把Redis分为主从关系，一个主服务器，和两个从服务器。</p><p>主服务器提供写入和获取，从服务器只提供获取功能。</p><p>1、创建三个目录</p><ul><li>data：数据文件</li><li>log：日志文件</li><li>conf：配置文件</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZnTS1GZTVoN3lfSU94ZzlwZVNsdEdJWnBYR2Y?x-oss-process=image/format,png"></p><p>2、复制redis.conf配置文件到创建的配置文件目录下</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZzeF9rcnZYMVBLM0tqRE8zbVphNW5NZGVOQzg?x-oss-process=image/format,png"></p><p>3、配置配置文件，作为公共配置文件</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Ztb0pUZEluOWpIcTYxczF0dWhFSWNUak1jZG0?x-oss-process=image/format,png"></p><p>注释掉bind，运行外界连接</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZrZHVNeHp2bjBuNkdYSzEyUnZBdXVxbmJBcnE?x-oss-process=image/format,png"></p><p>关闭保护模式，否则外界无法连接</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZqamgzaVNkVkNFX1g5UjFXYUdkWjN5QXZmeEM?x-oss-process=image/format,png"></p><p>注释公共配置端口，后期需要运行三个redis，每个的端口不一样，需要针对每个redis进行私有的配置</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z0ZlZlZ2hteVZfX3NlQlhNYUFMQWtPY0JOZjA?x-oss-process=image/format,png"></p><p>修改为后台启动</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZpdHZrQTRaSjg0ZWNIUFdJSlNWT3B3S2lnVGU?x-oss-process=image/format,png"></p><p>注释进程编号，三个redis的进程编号都是不一样的，需要针对的进行私有配置</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZrNm1BdjFYZDQyY3Q2ZW03bzBBVkVWemxRMkY?x-oss-process=image/format,png"></p><p>注释公共配置日志文件，三个redis有三个日志文件，私有配置</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZoRkJBWHlUd3FlcmljQ3lUR1VVdjZXRDdkcXI?x-oss-process=image/format,png"></p><p>注释公共配置数据文件，修改数据文件路径为创建的数据文件路径</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZpWUNacU1iNXFvZS1VNFpRZFJjMDY0c1ljSlo?x-oss-process=image/format,png"></p><p>添加从数据库访问主服务器认证密码</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZvTzk0Qk5WZU91ZW1zT29uVUdzcW12VjlMRzI?x-oss-process=image/format,png"></p><p>设置访问认证，三个redis的认证密码都是一个，设置为公用的</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZxNWl4VEtXU3AtbXE5YURCclNnMTh2VzJWM20?x-oss-process=image/format,png"></p><p>注释公共配置追加文件，这个根据需求选择是否使用，这里关闭</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZpNEthMWx2WUtvNVZ3ajBxQlF1dkM4RFo5cm4?x-oss-process=image/format,png"></p><p>设置从服务器只能读取，不能写入</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZvQmRvUTR2OFpwc3VPODV1cFF3SnhFMjNKWjk?x-oss-process=image/format,png"></p><p>保存退出</p><h2 id="6-2、创建配置三个私有配置文件"><a href="#6-2、创建配置三个私有配置文件" class="headerlink" title="6.2、创建配置三个私有配置文件"></a>6.2、创建配置三个私有配置文件</h2><p>1、创建三个配置文件</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZvWlV0dUpqZmtTRXI2Z01VNkt4OElRTjhVbGk?x-oss-process=image/format,png"></p><p><strong>redis-xxxx</strong>：xxxx表示的每个的端口，为了方便区分</p><p>2、修改每个的配置文件</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z1U1lRR21RV2ozT2dnLUVnampDZEdaMmlqZFE?x-oss-process=image/format,png"></p><p>redis-6379.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 引用公共配置文件</span></span><br><span class="line">include /opt/redis/conf/redis-common.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程编号记录文件</span></span><br><span class="line">pidfile /var/run/redis-6379.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程端口号</span></span><br><span class="line">port 6379</span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志记录文件</span></span><br><span class="line">logfile &quot;/opt/redis/log/redis-6379.log&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据记录文件</span></span><br><span class="line">dbfilename dump-6379.rdb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 追加文件名称</span></span><br><span class="line">appendfilename &quot;appendonly-6379.aof&quot;</span><br></pre></td></tr></table></figure><p>redis-6380.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 引用公共配置文件</span></span><br><span class="line">include /opt/redis/conf/redis-common.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程编号记录文件</span></span><br><span class="line">pidfile /var/run/redis-6380.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程端口号</span></span><br><span class="line">port 6380</span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志记录文件</span></span><br><span class="line">logfile &quot;/opt/redis/log/redis-6380.log&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据记录文件</span></span><br><span class="line">dbfilename dump-6380.rdb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 追加文件名称</span></span><br><span class="line">appendfilename &quot;appendonly-6380.aof&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置主服务器的IP地址</span></span><br><span class="line">slaveof 192.168.10.100 6379</span><br></pre></td></tr></table></figure><p>redis-6381.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 引用公共配置文件</span></span><br><span class="line">include /opt/redis/conf/redis-common.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程编号记录文件</span></span><br><span class="line">pidfile /var/run/redis-6381.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程端口号</span></span><br><span class="line">port 6381</span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志记录文件</span></span><br><span class="line">logfile &quot;/opt/redis/log/redis-6381.log&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据记录文件</span></span><br><span class="line">dbfilename dump-6381.rdb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 追加文件名称</span></span><br><span class="line">appendfilename &quot;appendonly-6381.aof&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置主服务器的IP地址</span></span><br><span class="line">slaveof 192.168.10.100 6379</span><br></pre></td></tr></table></figure><h2 id="6-3、运行三个redis进程，并测试主从"><a href="#6-3、运行三个redis进程，并测试主从" class="headerlink" title="6.3、运行三个redis进程，并测试主从"></a>6.3、运行三个redis进程，并测试主从</h2><p>1、运行三个redis进程</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZtUmhVdkdpbHliZUJJZ0lNUlBfZXdoX05ZVno?x-oss-process=image/format,png"></p><p>2、查看每个服务器的主从状态</p><p>主服务器</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZwdXZiXzh0aTBZMWpsMFh4MDJPS1owNjBOelo?x-oss-process=image/format,png"></p><p>从服务器1</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z2SHZxMVZYWVFEYzVqTkZZdWlNc1M5U3phV0Y?x-oss-process=image/format,png"></p><p>从服务器2</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZpTUtEUC1BMWxrRzFSalU3MlNfeFk2a0xYNWU?x-oss-process=image/format,png"></p><p>3、测试主服务下添加数据，在从服务器下查询是否正常</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z1ek1pU2FCMkV6Njd4QkRQQl82TVd2cHVKRUc?x-oss-process=image/format,png"></p><p>4、从服务器不能写入测试</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z0aHhYS2hIQXd4SGZMY3liUjVjMXhSeERlaEk?x-oss-process=image/format,png"></p><h2 id="6-4、主备切换"><a href="#6-4、主备切换" class="headerlink" title="6.4、主备切换"></a>6.4、主备切换</h2><p>上面已经进行了读写分离，完成了主从服务器，但是这时还有一个问题，如果主服务器出现了问题，那么就不能再进行写入操作，只能使用从服务器获取主服务宕机之前的数据，为了解决这一问题，就引入了一个叫做哨兵的方案，通过哨兵，可以检测到主服务是否宕机，如果主服务器宕机了，就会在满足一定的要求后选举一个从服务器变为主服务，如果之前宕机的主服务恢复了，则被宕机的服务变为从服务。以此来解决，主服务宕机后，无法在提供写入操作的问题。</p><h3 id="6-4-1、复制哨兵配置文件到创建的配置文件目录下"><a href="#6-4-1、复制哨兵配置文件到创建的配置文件目录下" class="headerlink" title="6.4.1、复制哨兵配置文件到创建的配置文件目录下"></a>6.4.1、复制哨兵配置文件到创建的配置文件目录下</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /root/redis-5.0.3/sentinel.conf /opt/redis/conf/</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZxaU5VTGctMjZWOWdBTUU5dXhoUmg1VVZNR3Q?x-oss-process=image/format,png"></p><h3 id="6-4-2、修改哨兵配置文件"><a href="#6-4-2、修改哨兵配置文件" class="headerlink" title="6.4.2、修改哨兵配置文件"></a>6.4.2、修改哨兵配置文件</h3><p>注释哨兵监听进程端口号</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZzRjVNZm9ndXlDcGFwR0RnR2hpejJ1Q2JBTUc?x-oss-process=image/format,png"></p><p>指示哨兵监听一个主服务器，主服务器地址为192.168.10.100，端口为6379，2表示判断失败的要求，配置三个哨兵，一半(3个的一半为1.5，取整为2)以上都监听主服务状态为不达标就更换主服务器</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z2ZkxVOTF6S08xblp3SW9Yci1NcGgwZlBmd28?x-oss-process=image/format,png"></p><p>设置密码</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Zta01URmYtdUdXeloyZFRJSDhYUmxJWWQ3Zm4?x-oss-process=image/format,png"></p><p>设置哨兵认为服务器断线所需的毫秒数。</p><p>默认是30000毫秒，也就是30秒，为了测试改为10000毫秒</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZxenVBSjkwQ05pbnNmWllUbTdmR3p4cV9JeU0?x-oss-process=image/format,png"></p><p>设置主服务和从服务器切换时间</p><p>默认是3分钟，如果三分钟内没有切换成功，则本次切换失败</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZqVTRvdmFoRHNmRllaaHJScW5uYjcxbTdtWkM?x-oss-process=image/format,png"></p><p>关闭哨兵的保护模式</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZtejR2Q0dHWGNxQUY3SnB2VVp1Ny1heFI2WUE?x-oss-process=image/format,png"></p><p>修改哨兵为后台启动</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z2ekR2UE9NYjlLaFNWY045TV9BaGxUVjYwdVI?x-oss-process=image/format,png"></p><h3 id="6-4-3、添加三个私有哨兵配置文件"><a href="#6-4-3、添加三个私有哨兵配置文件" class="headerlink" title="6.4.3、添加三个私有哨兵配置文件"></a>6.4.3、添加三个私有哨兵配置文件</h3><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z2aHJCZjBicEFJSDR2OHR3QVlOeE5NenFhTEM?x-oss-process=image/format,png"></p><p>私有哨兵配置1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 引用公共配置</span></span><br><span class="line">include /opt/redis/conf/sentinel.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程端口号</span></span><br><span class="line">port 26379</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程编号近路文件</span></span><br><span class="line">pidfile /var/run/sentinel-26379.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志文件</span></span><br><span class="line">logfile &quot;/opt/redis/log/sentinel-26379.log&quot;</span><br></pre></td></tr></table></figure><p>私有哨兵配置2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 引用公共配置</span></span><br><span class="line">include /opt/redis/conf/sentinel.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程端口号</span></span><br><span class="line">port 26380</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程编号近路文件</span></span><br><span class="line">pidfile /var/run/sentinel-26380.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志文件</span></span><br><span class="line">logfile &quot;/opt/redis/log/sentinel-26380.log&quot;</span><br></pre></td></tr></table></figure><p>私有哨兵配置2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 引用公共配置</span></span><br><span class="line">include /opt/redis/conf/sentinel.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程端口号</span></span><br><span class="line">port 26381</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程编号近路文件</span></span><br><span class="line">pidfile /var/run/sentinel-26381.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志文件</span></span><br><span class="line">logfile &quot;/opt/redis/log/sentinel-26381.log</span><br></pre></td></tr></table></figure><h2 id="6-4-4、哨兵启动测试"><a href="#6-4-4、哨兵启动测试" class="headerlink" title="6.4.4、哨兵启动测试"></a>6.4.4、哨兵启动测试</h2><p>1、启动三个哨兵</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZyY2g2Rmo2TE1ZYllRNVZ2NFIxU253dldwUms?x-oss-process=image/format,png"></p><p>2、查看主服务器和从服务状态</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-RG5Gs2Gg-1589464617789)(<a href="http://images.yanghuisen.cn/FitC_MDwSArK5ra8zhbOFGQStflB)]">http://images.yanghuisen.cn/FitC_MDwSArK5ra8zhbOFGQStflB)]</a></p><p>3、杀死主服务器，模拟主服务宕机</p><p>杀死主服务器后等待10秒，让哨兵选择新的主服务器，并重新启动被杀死的服务器</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0Z2VzFLa2pLTXlSb0NKMFRieG45TUtNcENORHM?x-oss-process=image/format,png"></p><p>4、查看哨兵选重新选举后的服务器状态</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZreXpZY01JRFhVV2VqbkZiQkM1dFppNFNjOGw?x-oss-process=image/format,png"></p><h1 id="7、SpringDataRedis"><a href="#7、SpringDataRedis" class="headerlink" title="7、SpringDataRedis"></a>7、SpringDataRedis</h1><p>SpringBoot1.X版本默认使用的是jedis作为Redsi的Java客户端，而2.X版本使用的是lettuce作为Redis的Java客户端。</p><p><strong>两者的区别为：</strong></p><ul><li>Jedis：在实现上直接连接的Redis-Server，在多个线程间共享一个Jedis实例。线程不安全。如果要在多线程的场景下使用Jedis，需要使用连接池，每个线程都使用自己的Jedis实例，当连接数量增多时，会小号大量的物理资源。</li><li>lettuce：基于Netty的连接，是一个可伸缩的线程安全的Redis客户端，支持同步、一步和响应式模式。多个线程可以共享一个连接实例，而不必安全多线程并发的问题。它基于NettyNIO框架构建，支持redis的高级功能，如Sentinel（哨兵）、集群、流水线、自动连接和Redis数据模型。</li></ul><h2 id="7-1、创建SpringBoot项目"><a href="#7-1、创建SpringBoot项目" class="headerlink" title="7.1、创建SpringBoot项目"></a>7.1、创建SpringBoot项目</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlcy55YW5naHVpc2VuLmNuL0ZsR08yMkQtbjNJQmEzZjl2ZElyRmZ6X3VlU1o?x-oss-process=image/format,png"></p><h2 id="7-2、添加依赖"><a href="#7-2、添加依赖" class="headerlink" title="7.2、添加依赖"></a>7.2、添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring Data Redis依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Commons-pool2对象池依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--SpringWeb--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--SpringBootTest--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-3、添加application-yml配置文件"><a href="#7-3、添加application-yml配置文件" class="headerlink" title="7.3、添加application.yml配置文件"></a>7.3、添加application.yml配置文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="comment"># Redis服务器地址</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.100</span></span><br><span class="line">    <span class="comment"># Redis服务器端口</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="comment"># Redis服务器认证密码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="comment"># Redis数据库</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 连接超时时间</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">10000ms</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="comment"># 最大连接数，默认8</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">1024</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间，单位毫秒，默认-1ms</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="string">10000ms</span></span><br><span class="line">        <span class="comment"># 最大空闲连接，默认8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">200</span></span><br><span class="line">        <span class="comment"># 最小空闲连接，默认0</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="7-4、测试环境是否搭建成功"><a href="#7-4、测试环境是否搭建成功" class="headerlink" title="7.4、测试环境是否搭建成功"></a>7.4、测试环境是否搭建成功</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringDataRedisDemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;    <span class="comment">// 默认模板</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">initConn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ValueOperations&lt;String,String&gt; ops = stringRedisTemplate.opsForValue();</span><br><span class="line">        ops.set(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">        ValueOperations&lt;String,String&gt; value = redisTemplate.opsForValue();</span><br><span class="line">        value.set(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        System.out.println(ops.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-5、序列化问题"><a href="#7-5、序列化问题" class="headerlink" title="7.5、序列化问题"></a>7.5、序列化问题</h2><p>上面的测试程序，虽然成功的把数据写入了，但是写入的是一个二进制字节码，需要处理一下。</p><p><code>RedisTemplate</code>使用的是<code>JdkSerializationRedisSerializer</code>进行序列化，会序列化为二进制字节码储存。这时需要自定义模板解决。当自定义模板后，又想储存String字符串可以使用<code>StringRedisTemplate</code>。自定义的模板和<code>StringRedisTemplate</code>不冲突。</p><p>序列化的选择：</p><ul><li><code>JdkSerializationRedisSerializer</code>：该序列化为<code>RedisTemplate</code>的默认序列化工具，是JDK提供的，有点是反序列化时不需要提供类型信息(class)，但是缺点就是序列化后的结果非常大，而且看不懂，时json格式的5倍左右，会消耗redis服务器的大量内存。</li><li><code>Jackson2JsonRedisSerializer</code>：使用的时<code>Jackson</code>库将对象序列化为json字符串，优点是速度快，序列化后的字符串短小精悍，但是缺点也非常致命，那就是此类的构造函数中有一个类型参数，必须提供要序列化对象的类型信息，通过查看源代码，发现其只再反序列化过程中用到了类型信息。</li><li><code>GenericJackson2JsonRedisSerializer</code>：通用型序列化，这种序列化方式不用自己手动指定对象的Class。</li></ul><p>自定义模板</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.springdataredisdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/5/14 20:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义模板</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String,Object&gt; <span class="title">redisTemplate</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建模板</span></span><br><span class="line">        RedisTemplate&lt;String,Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        <span class="comment">// 设置String类型的Key的序列器</span></span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置String类型的value的序列器</span></span><br><span class="line">        redisTemplate.setValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置Hash类型的Key的序列器</span></span><br><span class="line">        redisTemplate.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置hash类型的value的序列器</span></span><br><span class="line">        redisTemplate.setHashValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置连接方式</span></span><br><span class="line">        redisTemplate.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>序列化测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSerial</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">    ValueOperations ops = redisTemplate.opsForValue();</span><br><span class="line">    ops.set(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    System.out.println(ops.get(<span class="string">&quot;user&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ok</p><h2 id="7-6、操作String"><a href="#7-6、操作String" class="headerlink" title="7.6、操作String"></a>7.6、操作String</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testString</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ValueOperations vos = redisTemplate.opsForValue();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加一条数据</span></span><br><span class="line">    vos.set(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    <span class="comment">// 以层级关系|目录形式存储数据</span></span><br><span class="line">    vos.set(<span class="string">&quot;user:01&quot;</span>,<span class="string">&quot;ahh&quot;</span>);</span><br><span class="line">    <span class="comment">// 添加多条数据</span></span><br><span class="line">    Map&lt;String,String&gt; userMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    userMap.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;18&quot;</span>);</span><br><span class="line">    userMap.put(<span class="string">&quot;sex&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    vos.multiSet(userMap);</span><br><span class="line">    <span class="comment">// 获取一条数据</span></span><br><span class="line">    System.out.println(vos.get(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">    <span class="comment">// 获取多条数据</span></span><br><span class="line">    List&lt;String&gt; keys = Arrays.asList(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">    vos.multiGet(keys).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-7、操作Hash"><a href="#7-7、操作Hash" class="headerlink" title="7.7、操作Hash"></a>7.7、操作Hash</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testHash</span><span class="params">()</span></span>&#123;</span><br><span class="line">    HashOperations&lt;String,String,String&gt; hos = redisTemplate.opsForHash();</span><br><span class="line">    <span class="comment">// 添加一条数据</span></span><br><span class="line">    hos.put(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    <span class="comment">// 添加多条数据</span></span><br><span class="line">    Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;sex&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    hos.putAll(<span class="string">&quot;userInfo&quot;</span>,map);</span><br><span class="line">    <span class="comment">// 获取一条数据</span></span><br><span class="line">    System.out.println(hos.get(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;name&quot;</span>));</span><br><span class="line">    <span class="comment">// 获取多条数据</span></span><br><span class="line">    List&lt;String&gt; keys = Arrays.asList(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">    hos.multiGet(<span class="string">&quot;userInfo&quot;</span>,keys).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 获取Hash类型的所有的数据</span></span><br><span class="line">    hos.entries(<span class="string">&quot;userInfo&quot;</span>).forEach((k,v)-&gt;&#123;</span><br><span class="line">        System.out.println(k+<span class="string">&quot;---&quot;</span>+v);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 删除数据</span></span><br><span class="line">    hos.delete(<span class="string">&quot;userInfo&quot;</span>,<span class="string">&quot;name&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-8、操作List"><a href="#7-8、操作List" class="headerlink" title="7.8、操作List"></a>7.8、操作List</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testList</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ListOperations los = redisTemplate.opsForList();</span><br><span class="line">    <span class="comment">// 左添加</span></span><br><span class="line">    los.leftPush(<span class="string">&quot;students&quot;</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    los.leftPush(<span class="string">&quot;students&quot;</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    <span class="comment">// 指定位置前面左添加</span></span><br><span class="line">    los.leftPush(<span class="string">&quot;students&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    <span class="comment">// 右添加</span></span><br><span class="line">    los.rightPush(<span class="string">&quot;students&quot;</span>,<span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取</span></span><br><span class="line">    los.range(<span class="string">&quot;students&quot;</span>,<span class="number">1</span>,<span class="number">10</span>).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 根据下标获取</span></span><br><span class="line">    System.out.println(los.index(<span class="string">&quot;students&quot;</span>,<span class="number">1</span>));</span><br><span class="line">    <span class="comment">// 获取总条数</span></span><br><span class="line">    System.out.println(los.size(<span class="string">&quot;students&quot;</span>));</span><br><span class="line">    <span class="comment">// 删除单条数据</span></span><br><span class="line">    los.remove(<span class="string">&quot;students&quot;</span>,<span class="number">1</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-9、操作oSet"><a href="#7-9、操作oSet" class="headerlink" title="7.9、操作oSet"></a>7.9、操作oSet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSer</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SetOperations sos = redisTemplate.opsForSet();</span><br><span class="line">    <span class="comment">// 添加数据</span></span><br><span class="line">    sos.add(<span class="string">&quot;letters&quot;</span>,<span class="keyword">new</span> String[]&#123;<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>,<span class="string">&quot;ccc&quot;</span>,<span class="string">&quot;ddd&quot;</span>&#125;);</span><br><span class="line">    sos.members(<span class="string">&quot;letters&quot;</span>).forEach(System.out::println);</span><br><span class="line">    sos.remove(<span class="string">&quot;letters&quot;</span>,<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-10、操作SortedSet"><a href="#7-10、操作SortedSet" class="headerlink" title="7.10、操作SortedSet"></a>7.10、操作SortedSet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSoredSet</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ZSetOperations zsos = redisTemplate.opsForZSet();</span><br><span class="line">    <span class="comment">// 添加数据</span></span><br><span class="line">    zsos.add(<span class="string">&quot;score&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>,<span class="number">5D</span>);</span><br><span class="line">    zsos.add(<span class="string">&quot;score&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="number">2D</span>);</span><br><span class="line">    zsos.add(<span class="string">&quot;score&quot;</span>,<span class="string">&quot;wangwu&quot;</span>,<span class="number">9D</span>);</span><br><span class="line">    zsos.add(<span class="string">&quot;score&quot;</span>,<span class="string">&quot;zhaoliu&quot;</span>,<span class="number">3D</span>);</span><br><span class="line">    <span class="comment">// 获取</span></span><br><span class="line">    zsos.range(<span class="string">&quot;score&quot;</span>,<span class="number">0</span>,<span class="number">5</span>).forEach(System.out::println);</span><br><span class="line">    <span class="comment">// 获取总条数</span></span><br><span class="line">    System.out.println(zsos.size(<span class="string">&quot;score&quot;</span>));</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    zsos.remove(<span class="string">&quot;score&quot;</span>,<span class="string">&quot;wangwu&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-11、获取所有的Key"><a href="#7-11、获取所有的Key" class="headerlink" title="7.11、获取所有的Key"></a>7.11、获取所有的Key</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testAllKeys</span><span class="params">()</span></span>&#123;</span><br><span class="line">    redisTemplate.keys(<span class="string">&quot;*&quot;</span>).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-12、删除"><a href="#7-12、删除" class="headerlink" title="7.12、删除"></a>7.12、删除</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    redisTemplate.delete(<span class="string">&quot;score&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-13、设置Key的失效时间"><a href="#7-13、设置Key的失效时间" class="headerlink" title="7.13、设置Key的失效时间"></a>7.13、设置Key的失效时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testEx</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ValueOperations vos = redisTemplate.opsForValue();</span><br><span class="line">    <span class="comment">// 添加一条数据，并设置失效时间</span></span><br><span class="line">    vos.set(<span class="string">&quot;code&quot;</span>,<span class="string">&quot;abcd&quot;</span>,<span class="number">180</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">// 给已经存在的key设置失效时间</span></span><br><span class="line">    redisTemplate.expire(<span class="string">&quot;code&quot;</span>,<span class="number">180</span>,TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">// 获取指定key的失效时间</span></span><br><span class="line">    System.out.println(redisTemplate.getExpire(<span class="string">&quot;code&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-14、整合使用哨兵机制"><a href="#7-14、整合使用哨兵机制" class="headerlink" title="7.14、整合使用哨兵机制"></a>7.14、整合使用哨兵机制</h2><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="comment"># Redis服务器地址</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.100</span></span><br><span class="line">    <span class="comment"># Redis服务器端口</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6380</span></span><br><span class="line">    <span class="comment"># Redis服务器认证密码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="comment"># Redis数据库</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 连接超时时间</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">10000ms</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="comment"># 最大连接数，默认8</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">1024</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间，单位毫秒，默认-1ms</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="string">10000ms</span></span><br><span class="line">        <span class="comment"># 最大空闲连接，默认8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">200</span></span><br><span class="line">        <span class="comment"># 最小空闲连接，默认0</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment"># 哨兵模式</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="comment"># 主节点</span></span><br><span class="line">      <span class="attr">master:</span> <span class="string">mymaster</span></span><br><span class="line">      <span class="attr">nodes:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.100</span><span class="string">:26379,192.168.10.100:26380,192.168.10.100:26381</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">RedisSentinelConfiguration <span class="title">redisSentinelConfiguration</span><span class="params">()</span></span>&#123;</span><br><span class="line">    RedisSentinelConfiguration sentinelConfiguration = <span class="keyword">new</span> RedisSentinelConfiguration().</span><br><span class="line">        <span class="comment">// 主节点名称</span></span><br><span class="line">        master(<span class="string">&quot;mymaster&quot;</span>)</span><br><span class="line">        <span class="comment">// 服务器地址</span></span><br><span class="line">        .sentinel(<span class="string">&quot;192.168.10.100&quot;</span>,<span class="number">26379</span>)</span><br><span class="line">        .sentinel(<span class="string">&quot;192.168.10.100&quot;</span>,<span class="number">26380</span>)</span><br><span class="line">        .sentinel(<span class="string">&quot;192.168.10.100&quot;</span>,<span class="number">26381</span>);</span><br><span class="line">    <span class="comment">// 设置密码</span></span><br><span class="line">    sentinelConfiguration.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> sentinelConfiguration;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeMarker的简单使用</title>
      <link href="/2020/04/01/FreeMarker%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/04/01/FreeMarker%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、FreeMarker概述"><a href="#一、FreeMarker概述" class="headerlink" title="一、FreeMarker概述"></a>一、FreeMarker概述</h1><p>FreeMarker 是一款 <strong>模板引擎</strong>： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML网页，电子邮件，配置文件，源代码等)的通用工具。 它不是面向最终用户的，而是一个Java类库，是一款程序员可以嵌入他们所开发产品的组件。</p><p>FreeMarker 被设计⽤来⽣成 HTML Web ⻚⾯，特别是基于 MVC 模式的应⽤程序，将视图从业务逻辑中抽离处理，业务中不再包括视图的展示，⽽是将视图交给 FreeMarker 来输出。由FreeMarker生成页面，通过模板显示准备的数据。</p><p>FreeMarker不是Web应用框架，而是一个Web应用框架的组件。与容器无关，它并不知道HTTP或者Servlet。FreeMarker同样可以应用在非Web应用程序环境中</p><p><a href="https://freemarker.apache.org/">官网</a></p><p><a href="http://freemarker.foofun.cn/">中文文档</a></p><hr><h1 id="二、FreeMarker的特性"><a href="#二、FreeMarker的特性" class="headerlink" title="二、FreeMarker的特性"></a>二、FreeMarker的特性</h1><h2 id="1、通用目标"><a href="#1、通用目标" class="headerlink" title="1、通用目标"></a>1、通用目标</h2><p>FreeMarker可以生成各种文件,，例如HTML、XML、RTF、JAVA源代码等等。</p><p>FreeMarker易于嵌入到产品中：轻量级、不需要Servlet环境。</p><p>FreeMarker可以从任何源载入模板。</p><p>FreeMarker可以按需生成文本。可以保存到本地、作为Email发送，从Web程序返回给Web浏览器。</p><h2 id="2、强大的模板语言"><a href="#2、强大的模板语言" class="headerlink" title="2、强大的模板语言"></a>2、强大的模板语言</h2><p>FreeMarker自带一些常用的指令：include、if-else、if-else-if、循环结构。也可以在模板中创建变量。几乎在任何地方都可以使用复杂的表达式来指定值。</p><h2 id="3、通用数据模型"><a href="#3、通用数据模型" class="headerlink" title="3、通用数据模型"></a>3、通用数据模型</h2><p>FreeMarker不是直接反射到Java对象，Java对象通过插件式对象封装，以变量方式在模板中显示。可以使用抽象（接口）方式表示对象（JavaBean、XML文档、SQL查询结果集等等），告诉模板开发者使用方法，使其不受技术细节的打扰</p><h2 id="4、为Web准备"><a href="#4、为Web准备" class="headerlink" title="4、为Web准备"></a>4、为Web准备</h2><p>FreeMarker内建处理典型Web相关任务的结构。</p><p>可以集成到Mode2 Web框架中作为代替JSP的存在。</p><p>支持JSP标记库</p><p>分离可视化设计和程序逻辑；分离页面设计员与程序员</p><h2 id="5、智能的国际化和本地化"><a href="#5、智能的国际化和本地化" class="headerlink" title="5、智能的国际化和本地化"></a>5、智能的国际化和本地化</h2><p>字符集智能化（内部使用UNICODE）</p><p>数字格式本地化敏感</p><p>日期和时间格式本地化敏感</p><p>非US字符集可以用作标识（如变量名）</p><p>多种不同语言的相同模板</p><h2 id="6、强大的XML处理能力"><a href="#6、强大的XML处理能力" class="headerlink" title="6、强大的XML处理能力"></a>6、强大的XML处理能力</h2><p>&lt;#recurse&gt; 和 &lt;#visit&gt; 指令（2.3版本）用于递归遍历XML树。在模板中清楚和直接的访问XML对象模型。开源论坛 JForum 就是使用了 FreeMarker 做为页面模板。</p><hr><h1 id="三、FreeMarker环境搭建"><a href="#三、FreeMarker环境搭建" class="headerlink" title="三、FreeMarker环境搭建"></a>三、FreeMarker环境搭建</h1><p><strong>1、常规新建Maven Web项目</strong></p><p><strong>2、配置FreeMarker依赖，添加服务器插件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.yanghuisen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>FreeMarkerTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>FreeMarkerTest Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.freemarker/freemarker --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置 freemarker依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置servlet依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>FreeMarkerTest<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 添加tomcat服务器插件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--端口--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">port</span>&gt;</span>8899<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 站点名 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">path</span>&gt;</span>/web<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 设置编码 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3、修改web.xml配置文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 相关Servlet配置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>freemarker.ext.servlet.FreemarkerServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 模板路径 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>TemplatePath<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 默认在webapp目录下查找对应的模板文件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 模板默认的编码：UTF-8 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>default_encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 处理所有以.ftl结尾的文件；ftl是freemarker默认的文件后缀 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ftl<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>4、新建模板文件</strong></p><p>在<code>webapp</code>目录下创建<code>templaate</code>文件夹，然后创建<code>fm.ftl</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;msg&#125;</span><br></pre></td></tr></table></figure><p><strong>5、编写Servlet类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/ser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 添加数据</span></span><br><span class="line">        req.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;Hello FreeMarker!&quot;</span>);</span><br><span class="line">        <span class="comment">// 请求转发跳转到模板文件中</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;template/fm.ftl&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6、启动项目</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Ys2025/images/202305231706009.png" alt="在这里插入图片描述"></p><hr><h1 id="四、FreeMarker的数据类型"><a href="#四、FreeMarker的数据类型" class="headerlink" title="四、FreeMarker的数据类型"></a>四、FreeMarker的数据类型</h1><p>FreeMarker中常用的数据类型由以下几种</p><table><thead><tr><th>类型</th><th align="left">描述</th><th>备注</th></tr></thead><tbody><tr><td>boolean</td><td align="left">等价于Java中的boolean</td><td>不能直接输出，需要先转换为字符串</td></tr><tr><td>日期类型</td><td align="left">等价于Java中的Date</td><td>不能直接输出，需要先转换为字符串</td></tr><tr><td>数值类型</td><td align="left">等价于Java中的数值类型</td><td></td></tr><tr><td>字符类型</td><td align="left">等价于Java中的字符串</td><td></td></tr><tr><td>空值</td><td align="left">空字符串或者null</td><td></td></tr><tr><td>sequence</td><td align="left">等价于Java中的数组，list，set等集合</td><td></td></tr><tr><td>hash类型</td><td align="left">等价于Java中的Map</td><td></td></tr></tbody></table><h2 id="1、布尔类型"><a href="#1、布尔类型" class="headerlink" title="1、布尔类型"></a>1、布尔类型</h2><blockquote><p>布尔类型不能直接输出，需要转换为字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.setAttribute(<span class="string">&quot;flag&quot;</span>,<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong>s</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--将boolean转换为字符串--&gt;</span><br><span class="line">$&#123;flag?c&#125;</span><br><span class="line">&lt;#--将boolean值转化为为字符串，已被弃用，使用?c代替--&gt;</span><br><span class="line">$&#123;flag?string&#125;</span><br><span class="line">&lt;#--将boolean值转化为为指定字符串，已被弃用,使用?then代替--&gt;</span><br><span class="line">$&#123;flag?string(&quot;Yes&quot;,&quot;No&quot;)&#125;</span><br><span class="line">&lt;#--将boolean值转化为为指定字符串--&gt;</span><br><span class="line">$&#123;flag?then(&quot;Yes&quot;,&quot;No&quot;)&#125;</span><br></pre></td></tr></table></figure><h2 id="2、日期类型"><a href="#2、日期类型" class="headerlink" title="2、日期类型"></a>2、日期类型</h2><blockquote><p>不能直接输出，需要转换为字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.setAttribute(<span class="string">&quot;date&quot;</span>,<span class="keyword">new</span> Date());</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--转换为日期格式，只有年月日--&gt;</span><br><span class="line">$&#123;date?date&#125;</span><br><span class="line">&lt;#--转换为时间模式，只有时分秒--&gt;</span><br><span class="line">$&#123;date?time&#125;</span><br><span class="line">&lt;#--同属有年月日时分秒--&gt;</span><br><span class="line">$&#123;date?datetime&#125;</span><br><span class="line">&lt;#--自定义格式--&gt;</span><br><span class="line">$&#123;date?string(&quot;yyyy-MM-dd HH:mm:ss&quot;)&#125;</span><br></pre></td></tr></table></figure><h2 id="3、数值类型"><a href="#3、数值类型" class="headerlink" title="3、数值类型"></a>3、数值类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">req.setAttribute(<span class="string">&quot;age&quot;</span>,<span class="number">10</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;number&quot;</span>,<span class="number">10000</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;avg&quot;</span>,<span class="number">3.1415926</span>);</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;$&#123;age&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;$&#123;number&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;$&#123;avg&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;$&#123;age?c&#125;&lt;/p&gt;</span><br><span class="line">&lt;#-- 转字符串 --&gt;</span><br><span class="line">&lt;p&gt;$&#123;number?c&#125;&lt;/p&gt;</span><br><span class="line">&lt;#--￥--&gt;</span><br><span class="line">&lt;p&gt;$&#123;number?string.currency&#125;&lt;/p&gt;</span><br><span class="line">&lt;#-- 百分比 --&gt;</span><br><span class="line">&lt;p&gt;$&#123;number?string.percent&#125;&lt;/p&gt;</span><br><span class="line">&lt;#--保留两位小数并且四舍五入--&gt;</span><br><span class="line">&lt;p&gt;$&#123;avg?string[&quot;0.2&quot;]&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="4、字符类型"><a href="#4、字符类型" class="headerlink" title="4、字符类型"></a>4、字符类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">req.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;msg1&quot;</span>,<span class="string">&quot;freemarker&quot;</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;msg2&quot;</span>,<span class="string">&quot; ahh &quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$&#123;msg&#125;&lt;br&gt;</span><br><span class="line">&lt;#--1. 截取字符串（左闭右开） ?substring(start,end)--&gt;</span><br><span class="line">$&#123;msg?substring(0,2)&#125;&lt;br&gt;</span><br><span class="line">&lt;#--2. 首字母小写输出  ?uncap_first--&gt;</span><br><span class="line">$&#123;msg?uncap_first&#125;&lt;br&gt;</span><br><span class="line">&lt;#--3. 首字母大写输出  ?cap_first--&gt;</span><br><span class="line">$&#123;msg?cap_first&#125;&lt;br&gt;</span><br><span class="line">&lt;#--4. 字母转小写输出  ?lower_case--&gt;</span><br><span class="line">$&#123;msg?lower_case&#125;&lt;br&gt;</span><br><span class="line">&lt;#--5. 字母转大写输出  ?upper_case--&gt;</span><br><span class="line">$&#123;msg1?upper_case&#125;&lt;br&gt;</span><br><span class="line">&lt;#--6. 获取字符串长度  ?length--&gt;</span><br><span class="line">$&#123;msg?length&#125;&lt;br&gt;</span><br><span class="line">&lt;#--7. 是否以指定字符开头（boolean类型） ?starts_with(&quot;xx&quot;)?string--&gt;</span><br><span class="line">$&#123;msg?starts_with(&quot;h&quot;)?c&#125;&lt;br&gt;</span><br><span class="line">&lt;#--8. 是否以指定字符结尾（boolean类型） ?ends_with(&quot;xx&quot;)?string--&gt;</span><br><span class="line">$&#123;msg?ends_with(&quot;o&quot;)?c&#125;&lt;br&gt;</span><br><span class="line">&lt;#--9. 获取指定字符的索引  ?index_of(&quot;xx&quot;)--&gt;</span><br><span class="line">$&#123;msg?index_of(&quot;l&quot;)?c&#125;&lt;br&gt;</span><br><span class="line">&lt;#--10. 去除字符串前后空格 ?trim--&gt;</span><br><span class="line">$&#123;msg?trim&#125;&lt;br&gt;</span><br><span class="line">&lt;#--11. 替换指定字符串  ?replace(&quot;xx&quot;,&quot;xx&quot;)--&gt;</span><br><span class="line">$&#123;msg?replace(&quot;l&quot;,&quot;A&quot;)&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure><h2 id="5、空值"><a href="#5、空值" class="headerlink" title="5、空值"></a>5、空值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">req.setAttribute(<span class="string">&quot;str1&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;str2&quot;</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--不存在则什么都不显示--&gt;</span><br><span class="line">$&#123;abc!&#125;&lt;br&gt;</span><br><span class="line">&lt;#-- 空字符串 --&gt;</span><br><span class="line">$&#123;str1!&#125;&lt;br&gt;</span><br><span class="line">&lt;#--如果为空，则显示没有字符--&gt;</span><br><span class="line">$&#123;str1!&quot;没有字符&quot;&#125;&lt;br&gt;</span><br><span class="line">&lt;#--null--&gt;</span><br><span class="line">$&#123;str2!&#125;&lt;br&gt;</span><br><span class="line">&lt;#--如果为空，则显示null--&gt;</span><br><span class="line">$&#123;str2!&quot;null&quot;&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;#--是否存在，返回的是一个boolean类型，需要转换为字符串--&gt;</span><br><span class="line">$&#123;(abc??)?c&#125;&lt;br&gt;</span><br><span class="line">$&#123;(str1??)?c&#125;&lt;br&gt;</span><br><span class="line">$&#123;(str2??)?c&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure><h2 id="6、sequenct"><a href="#6、sequenct" class="headerlink" title="6、sequenct"></a>6、sequenct</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String[] strs = &#123;<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王二&quot;</span>,<span class="string">&quot;麻子&quot;</span>&#125;;</span><br><span class="line">req.setAttribute(<span class="string">&quot;strs&quot;</span>,strs);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;河南&quot;</span>,<span class="string">&quot;河北&quot;</span>,<span class="string">&quot;山东&quot;</span>,<span class="string">&quot;山西&quot;</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;list&quot;</span>,list);</span><br><span class="line"></span><br><span class="line">List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">userList.add(<span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;张三&quot;</span>,<span class="number">20</span>));</span><br><span class="line">userList.add(<span class="keyword">new</span> User(<span class="number">2</span>,<span class="string">&quot;李四&quot;</span>,<span class="number">18</span>));</span><br><span class="line">userList.add(<span class="keyword">new</span> User(<span class="number">3</span>,<span class="string">&quot;王二&quot;</span>,<span class="number">22</span>));</span><br><span class="line">userList.add(<span class="keyword">new</span> User(<span class="number">4</span>,<span class="string">&quot;麻子&quot;</span>,<span class="number">21</span>));</span><br><span class="line">req.setAttribute(<span class="string">&quot;userList&quot;</span>,userList);</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">获取序列的长度$&#123;strs?size&#125;&lt;br&gt;</span><br><span class="line">获取第一个元素$&#123;strs?first&#125;&lt;br&gt;</span><br><span class="line">获取最后一个元素$&#123;strs?last&#125;&lt;br&gt;</span><br><span class="line">&lt;#--数组--&gt;</span><br><span class="line">&lt;#list strs as str &gt;</span><br><span class="line">    $&#123;str?index&#125;:$&#123;str&#125;&lt;br&gt;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;#--List--&gt;</span><br><span class="line">&lt;#list list as str &gt;</span><br><span class="line">    $&#123;str?index&#125;:$&#123;str&#125;&lt;br&gt;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;#--倒叙--&gt;</span><br><span class="line">&lt;#list list?reverse as str &gt;</span><br><span class="line">    $&#123;str&#125;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#--正序--&gt;</span><br><span class="line">&lt;#list list?sort as str &gt;</span><br><span class="line">    $&#123;str&#125;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#--倒序后正序--&gt;</span><br><span class="line">&lt;#list list?reverse?sort as str &gt;</span><br><span class="line">    $&#123;str&#125;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#--JavaBean--&gt;</span><br><span class="line">&lt;#list userList as user &gt;</span><br><span class="line">    $&#123;user&#125;-$&#123;user.userId&#125;-$&#123;user.userName&#125;-$&#123;user.userAge&#125;&lt;br&gt;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#--按照指定属性排序--&gt;</span><br><span class="line">&lt;#list userList?sort_by(&quot;userAge&quot;) as user &gt;</span><br><span class="line">    &#123;user.userId&#125;-$&#123;user.userName&#125;-$&#123;user.userAge&#125;&lt;br&gt;</span><br><span class="line">&lt;/#list&gt;</span><br></pre></td></tr></table></figure><h2 id="7、hash类型"><a href="#7、hash类型" class="headerlink" title="7、hash类型"></a>7、hash类型</h2><blockquote><p>hash类型就是java中的Map集合</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;hn&quot;</span>,<span class="string">&quot;河南&quot;</span>);</span><br><span class="line">map.put(<span class="string">&quot;hb&quot;</span>,<span class="string">&quot;河北&quot;</span>);</span><br><span class="line">map.put(<span class="string">&quot;sd&quot;</span>,<span class="string">&quot;山东&quot;</span>);</span><br><span class="line">map.put(<span class="string">&quot;sx&quot;</span>,<span class="string">&quot;山西&quot;</span>);</span><br><span class="line">req.setAttribute(<span class="string">&quot;map&quot;</span>,map);</span><br></pre></td></tr></table></figure><p><strong>获取数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--获取所有的key，通过key获取所有的value--&gt;</span><br><span class="line">&lt;#list map?keys as m&gt;</span><br><span class="line">    $&#123;m&#125;-$&#123;map[m]&#125;&lt;br&gt;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line">&lt;#--获取所有的value--&gt;</span><br><span class="line">&lt;#list map?values as v&gt;</span><br><span class="line">    $&#123;v&#125;&lt;br&gt;</span><br><span class="line">&lt;/#list&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="五、常用的指令"><a href="#五、常用的指令" class="headerlink" title="五、常用的指令"></a>五、常用的指令</h1><h2 id="1、assign自定义变量指令"><a href="#1、assign自定义变量指令" class="headerlink" title="1、assign自定义变量指令"></a>1、assign自定义变量指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--定义单个变量--&gt;</span><br><span class="line">&lt;#assign name=&quot;张三&quot;&gt;</span><br><span class="line">$&#123;name&#125;&lt;br&gt;</span><br><span class="line">&lt;#--定义多个变量--&gt;</span><br><span class="line">&lt;#assign age=20 names=[&quot;张三&quot;,&quot;李四&quot;,&quot;王二&quot;,&quot;麻子&quot;]&gt;</span><br><span class="line">$&#123;age&#125;&lt;br&gt;</span><br><span class="line">$&#123;names?join(&quot;-&quot;)&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure><ul><li>join：把数组按照指定字符分割</li></ul><h2 id="2、逻辑判断指定"><a href="#2、逻辑判断指定" class="headerlink" title="2、逻辑判断指定"></a>2、逻辑判断指定</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;#assign age = 95&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;#if age &lt; 60&gt;</span><br><span class="line">    成绩不合格</span><br><span class="line">    &lt;#elseif age&lt;=80&gt;</span><br><span class="line">        还可以</span><br><span class="line">    &lt;#elseif age&lt;=90&gt;</span><br><span class="line">        不错</span><br><span class="line">    &lt;#else &gt;</span><br><span class="line">        你很牛逼</span><br><span class="line">&lt;/#if&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;#if age?? &gt;</span><br><span class="line">    存在</span><br><span class="line">    &lt;#else &gt;</span><br><span class="line">        不存在</span><br><span class="line">&lt;/#if&gt;</span><br></pre></td></tr></table></figure><h2 id="3、list遍历指令"><a href="#3、list遍历指令" class="headerlink" title="3、list遍历指令"></a>3、list遍历指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;#assign list=[1,2,3]&gt;</span><br><span class="line"></span><br><span class="line">&lt;#list list as item&gt;</span><br><span class="line">    $&#123;item&#125;</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;#list list as item&gt;</span><br><span class="line">    $&#123;item&#125;</span><br><span class="line">&lt;#else &gt;</span><br><span class="line">    没有数据</span><br><span class="line">&lt;/#list&gt;</span><br><span class="line"></span><br><span class="line">&lt;#--判断数据是否存在，存在则则遍历--&gt;</span><br><span class="line">&lt;#if aaa??&gt;</span><br><span class="line">    &lt;#list aaa as item&gt;</span><br><span class="line">        $&#123;item&#125;</span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">&lt;/#if&gt;</span><br></pre></td></tr></table></figure><h2 id="4、自定义指令"><a href="#4、自定义指令" class="headerlink" title="4、自定义指令"></a>4、自定义指令</h2><blockquote><p>自定义指定的指令名不能重复</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--指令名不能重复--&gt;</span><br><span class="line">&lt;#macro test1&gt;</span><br><span class="line">    自定义指令</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@test1&gt;&lt;/@test1&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#macro test2 str&gt;</span><br><span class="line">    自定义指令,并传递参数:$&#123;str&#125;</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@test2 str=&quot;张三&quot;&gt;&lt;/@test2&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#macro test3 name age&gt;</span><br><span class="line">    自定义指令,并传递多个参数:$&#123;name&#125;-$&#123;age&#125;</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@test3 name=&quot;啊哈哈&quot; age=20&gt;&lt;/@test3&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#--自定义指令中包含内置指令--&gt;</span><br><span class="line">&lt;#macro cfb&gt;</span><br><span class="line">    &lt;#list 1..9 as i&gt;</span><br><span class="line">        &lt;#list 1..i as j&gt;</span><br><span class="line">            $&#123;j&#125; * $&#123;i&#125; = $&#123;i*j&#125; &amp;nbsp;</span><br><span class="line">        &lt;/#list&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@cfb&gt;&lt;/@cfb&gt;</span><br></pre></td></tr></table></figure><h2 id="5、占位指令"><a href="#5、占位指令" class="headerlink" title="5、占位指令"></a>5、占位指令</h2><blockquote><pre><code>           `nested` 指令执行自定义指令开始和结束标签中间的模板片段。嵌套的片段可以包含模板中任意合法的内容。</code></pre></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--</span><br><span class="line">    nested 占位指令</span><br><span class="line">        nested 相当于占位符,一般结合macro指令一起使用。</span><br><span class="line">        可以将自定义指令中的内容通过nested指令占位，当使用自定义指令时，会将占位内容显示。</span><br><span class="line">--&gt;</span><br><span class="line">&lt;#macro test&gt;</span><br><span class="line">    这是一段文本！</span><br><span class="line">    &lt;#nested&gt;</span><br><span class="line">    &lt;#nested&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@test&gt;&lt;h4&gt;这是文本后面的内容！&lt;/h4&gt;&lt;/@test&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;#macro a1&gt;</span><br><span class="line">    占位指令</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@a1&gt;xxxx&lt;/@a1&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;#macro a1&gt;</span><br><span class="line">    占位指令</span><br><span class="line">    &lt;#nested &gt;</span><br><span class="line">    &lt;#nested &gt;</span><br><span class="line">    &lt;#nested &gt;</span><br><span class="line">&lt;/#macro&gt;</span><br><span class="line">&lt;@a1&gt;xxxx&lt;/@a1&gt;</span><br></pre></td></tr></table></figure><h2 id="6、导入指令"><a href="#6、导入指令" class="headerlink" title="6、导入指令"></a>6、导入指令</h2><blockquote><p>可以引入另外一个模板</p></blockquote><p>commons.ftl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;#macro cfb1 num&gt;</span><br><span class="line">    &lt;#list 1..num as i&gt;</span><br><span class="line">        &lt;#list 1..i as j&gt;</span><br><span class="line">            $&#123;j&#125; * $&#123;i&#125; = $&#123;i*j&#125; &amp;nbsp;</span><br><span class="line">        &lt;/#list&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--导入指令--&gt;</span><br><span class="line">&lt;#--可以使用其他文件中定义的自定义指令--&gt;</span><br><span class="line">&lt;#import &quot;commons.ftl&quot; as cm&gt;</span><br><span class="line">&lt;@cm.cfb1 num = 9&gt;&lt;/@cm.cfb1&gt;</span><br></pre></td></tr></table></figure><h2 id="7、包含指令"><a href="#7、包含指令" class="headerlink" title="7、包含指令"></a>7、包含指令</h2><blockquote><p>可以将任意文本内容包含到FerrMarker中。</p><p>要保证被包含的文件存在</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--引入其他文件的内容--&gt;</span><br><span class="line">&lt;#include &quot;test.html&quot;&gt;</span><br><span class="line">&lt;#include &quot;test.ftl&quot;&gt;</span><br><span class="line">&lt;#include &quot;test.txt&quot;&gt;</span><br></pre></td></tr></table></figure><h1 id="六、运算符"><a href="#六、运算符" class="headerlink" title="六、运算符"></a>六、运算符</h1><p><strong>1、算术运算符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    算术运算</span><br><span class="line">        +、-、*、/、%</span><br><span class="line">--&gt;</span><br><span class="line">&lt;#assign a1 = 8 a2 = 2 &gt;</span><br><span class="line">$&#123;a1&#125; + $&#123;a2&#125; = $&#123;a1 + a2&#125; &lt;br/&gt;</span><br><span class="line">$&#123;a1&#125; - $&#123;a2&#125; = $&#123;a1 - a2&#125; &lt;br/&gt;</span><br><span class="line">$&#123;a1&#125; * $&#123;a2&#125; = $&#123;a1 * a2&#125; &lt;br/&gt;</span><br><span class="line">$&#123;a1&#125; / $&#123;a2&#125; = $&#123;a1 / a2&#125; &lt;br/&gt;</span><br><span class="line">$&#123;a1&#125; % $&#123;a2&#125; = $&#123;a1 % a2&#125; &lt;br/&gt;</span><br><span class="line">&lt;!--字符串运算--&gt;</span><br><span class="line">$&#123;&quot;hello&quot; + &quot;,&quot; + &quot;freemarker&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>2、逻辑运算符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--</span><br><span class="line">    逻辑运算符</span><br><span class="line">     &amp;&amp;、||、!</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p><strong>3、比较运算符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--</span><br><span class="line">    比较运算符</span><br><span class="line">        &gt; (gt): 大于号，推荐使用 gt</span><br><span class="line">        &lt; (lt)： 小于号，推荐使用 lt</span><br><span class="line">        &gt;= (gte): 大于等于， 推荐是用 gte</span><br><span class="line">        &lt;= (lte): 小于等于，推荐使用 lte</span><br><span class="line">        == ： 等于</span><br><span class="line">        != : 不等于</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p><strong>4、空值运算符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--</span><br><span class="line">    空值运算符</span><br><span class="line">     1. ??:判断是否为空，返回布尔类型</span><br><span class="line">        如果不为空返回 false， 如果为空返回 true，不能直接输出</span><br><span class="line">        $&#123;(name??)?string&#125;</span><br><span class="line">     2. !: 设置默认值，如果为空，则设置默认值</span><br><span class="line">         1. 设置默认为空字符串：</span><br><span class="line">         $&#123;name!&#125;</span><br><span class="line">         2. 设置指定默认值</span><br><span class="line">         $&#123;name!&#x27;zhangsan&#x27;&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h1 id="七、页面静态化"><a href="#七、页面静态化" class="headerlink" title="七、页面静态化"></a>七、页面静态化</h1><p>Freemarker 是一种基于模板的、用来生成输出文本的通用工具,所以可以定制符合自己业务的模板，然后生成自己的 html 页面。Freemarker 是通过freemarker.template.Configuration 这个对象对模板进行加载的（它也处理创建和缓存预解析模板的工作），然后通过 getTemplate 方法获得想要的模板，有一点要记住freemarker.template.Configuration 在整个应用必须保证唯一实例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot;</span><br><span class="line">          content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2 align=&quot;center&quot;&gt;$&#123;title&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;p align=&quot;center&quot;&gt;</span><br><span class="line">        新闻来源:$&#123;source&#125;</span><br><span class="line">        发布时间:$&#123;pubTime&#125;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p style=&quot;text-indent: 2em&quot;&gt;</span><br><span class="line">        $&#123;content&#125;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.yanghuisen.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Template;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.TemplateException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/news&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 实例化模板对象</span></span><br><span class="line">        Configuration configuration = <span class="keyword">new</span> Configuration();</span><br><span class="line">        <span class="comment">// 加载模板的上下文 设置模板的加载路径</span></span><br><span class="line">        configuration.setServletContextForTemplateLoading(getServletContext(),<span class="string">&quot;/template&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置模板编码格式</span></span><br><span class="line">        configuration.setDefaultEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 加载模板文件，获取模板对象</span></span><br><span class="line">        Template template = configuration.getTemplate(<span class="string">&quot;news.ftl&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置模板数据</span></span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;新闻标题&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;source&quot;</span>,<span class="string">&quot;新闻来源&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;pubTime&quot;</span>,<span class="string">&quot;2020年03月27日 21:25&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;content&quot;</span>,<span class="string">&quot;新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。新闻内容。&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取项目根目录</span></span><br><span class="line">        String path = getServletContext().getRealPath(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置html文件的存放目录</span></span><br><span class="line">        File htmlFile = <span class="keyword">new</span> File(path+<span class="string">&quot;/html&quot;</span>);</span><br><span class="line">        <span class="comment">// 文件夹是否存在，不存在则创建</span></span><br><span class="line">        <span class="keyword">if</span> (!htmlFile.exists())&#123;</span><br><span class="line">            htmlFile.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成随机文件名</span></span><br><span class="line">        String fileName = System.currentTimeMillis()+<span class="string">&quot;.html&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建html文件</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(htmlFile,fileName);</span><br><span class="line">        FileWriter writer = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            template.process(map,writer);</span><br><span class="line">            System.out.println(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TemplateException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            writer.flush();</span><br><span class="line">            writer.close();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(fileName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> FreeMarker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle数据库</title>
      <link href="/2020/03/14/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2020/03/14/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Oracle数据库简介"><a href="#一、Oracle数据库简介" class="headerlink" title="一、Oracle数据库简介"></a>一、Oracle数据库简介</h1><p>Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款<strong>关系数据库管理系统</strong>。它是在数据库领域一直处于领先地位的产品。可以说Oracle数据库系统是目前世界上流行的关系数据库管理系统，系统可移植性好、使用方便、功能强，适用于各类大、中、小、微机环境。它是一种高效率、可靠性好的、适应高吞吐量的数据库方案。</p><h1 id="二、了解数据库"><a href="#二、了解数据库" class="headerlink" title="二、了解数据库"></a>二、了解数据库</h1><p><strong>数据库（DataBase）是按照数据结构来组织、储存和管理数据的仓库。</strong>随着市场发展出现了各种的数据库，从最简单的储存有各种<strong>数据</strong>的表格到进行海量数据存储的<strong>大型数据库系统</strong>在各个方面得到了广泛的应用。<strong>数据库已经成为了数据管理的重要技术</strong></p><p>常用的数据库有：<strong>MySQL</strong>、<strong>Oracle</strong>、DB2等。数据库又分为小型、中型、大型数数据库</p><table><thead><tr><th>分类</th><th>产品</th><th>特点</th></tr></thead><tbody><tr><td>小型</td><td>access、foxbase</td><td>负载小、用户大概100人以内；成本千元内、对安全性要求不高</td></tr><tr><td>中型</td><td>sqlServler、MySQL</td><td>负载量、日访问量在5000-10000;成本在万元内，满足日常安全要求</td></tr><tr><td>大型</td><td>syBase、DB2、Oracle</td><td>海量负载、可以处理海量数据，安全性高，相对较贵</td></tr></tbody></table><h2 id="1、DBMS"><a href="#1、DBMS" class="headerlink" title="1、DBMS"></a>1、DBMS</h2><p><strong>DBMS（Database Management System）数据管理系统</strong>，是一种<strong>操纵和管理数据库</strong>的大型软件。大部分DBMS提供了数据定义语言<strong>DDL</strong>和数据操纵语言<strong>DML</strong>，供用户定义数据库和操作数据库。</p><h2 id="2、关系型数据库和非关系型数据库"><a href="#2、关系型数据库和非关系型数据库" class="headerlink" title="2、关系型数据库和非关系型数据库"></a>2、关系型数据库和非关系型数据库</h2><ul><li><p>关系型数据库</p><blockquote><p><strong>关系型数据库指的是二维表格，关系型数据库就是多个二维表格之间联系所组成的一个数据组织。适合储存复杂的数据。</strong></p></blockquote></li><li><p>非关系型数据库</p><blockquote><p><strong>非关系型数据库指的是键值对形式存在的数据，适用于简单的存储。</strong></p></blockquote></li></ul><h2 id="3、SQL语言"><a href="#3、SQL语言" class="headerlink" title="3、SQL语言"></a>3、SQL语言</h2><p>SQL语言为数据库查询语言，一种介于关系代数与关系演算之间的结构化查询语言。是一个通用的、功能极强的关系型数据库语言，包含三部分：</p><p><img src="https://img-blog.csdnimg.cn/20200314195911853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-eRwzpgBg-1584187117156)(G:\java\笔记\Oracle数据库\Oracle数据库\images\SQL 数据化查询语言.png)]"></p><table><thead><tr><th>分类</th><th>命令</th></tr></thead><tbody><tr><td>DDL</td><td>create:创建、drop:删除、alter:修改、rename:重命名、truncate:截断</td></tr><tr><td>DML</td><td>insert:插入、delete:删除、update:更新、select:查询</td></tr><tr><td>DCL</td><td>grant:授权、revoke:回收权力、commit:提交事务、rollback:回滚事务</td></tr></tbody></table><h1 id="三、表"><a href="#三、表" class="headerlink" title="三、表"></a>三、表</h1><blockquote><p>表是一个概念，并不是在物理上存储的是一个表。</p></blockquote><h2 id="1、表结构"><a href="#1、表结构" class="headerlink" title="1、表结构"></a>1、表结构</h2><blockquote><p>表由表名、字段(名称+类型+约束)、记录组成。</p></blockquote><h2 id="2、字段类型"><a href="#2、字段类型" class="headerlink" title="2、字段类型"></a>2、字段类型</h2><table><thead><tr><th>类型</th><th>说明</th><th>例子</th></tr></thead><tbody><tr><td>number(长度[,精度])</td><td>数值类型,指定数值长度，有几位小数</td><td>number(5)、number(5,2)</td></tr><tr><td>char(长度)</td><td>字符类型，指定长度，不足补空，不能超过长度</td><td>char(5)</td></tr><tr><td>varchar2(长度)</td><td>字符类型，指定长度，写几个算几个，不能超过长度</td><td>varchar2(15)</td></tr><tr><td>date</td><td>日期类型</td><td></td></tr></tbody></table><p><strong>Tips：长度单位是字节。</strong></p><h2 id="3、字段约束"><a href="#3、字段约束" class="headerlink" title="3、字段约束"></a>3、字段约束</h2><table><thead><tr><th>约束</th><th>描述</th></tr></thead><tbody><tr><td>primary key</td><td>主键约束</td></tr><tr><td>foreign key</td><td>外键约束</td></tr><tr><td>not null</td><td>非空约束</td></tr><tr><td>unique</td><td>唯一约束</td></tr><tr><td>default</td><td>默认约束</td></tr><tr><td>check</td><td>检查约束</td></tr></tbody></table><h2 id="4、表和表之间的关系"><a href="#4、表和表之间的关系" class="headerlink" title="4、表和表之间的关系"></a>4、表和表之间的关系</h2><blockquote><p>表和表之间有三种关系：</p><ul><li>一对一<ul><li>一条记录对应另一个表中的一条记录。</li><li>例如：用户→身份证</li><li>一个人只能有一个身份证号</li></ul></li><li>一对多<ul><li>一条记录对应另一个表中的多条记录。</li><li>例如：用户→多个订单</li><li>一个用户可以创建多个订单</li></ul></li><li>多对多<ul><li>多条记录对应另一个表中的多条记录。</li><li>例如：店铺j→商品。</li><li>多个店铺可以卖同一个商品，一个商品也可以被多个店铺出售</li></ul></li></ul></blockquote><h2 id="5、主从表"><a href="#5、主从表" class="headerlink" title="5、主从表"></a>5、主从表</h2><blockquote><p>从表数据依赖于主表，称之为主从表。</p><p>主表：被关联依赖的表</p><p>从表：关联主表的表</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200314200032334.png" alt="在这里插入图片描述"></p><p>例如上图：student表的pro字段，设置外键，指向了province表的pro字段，这两个表就形成了一个主从表的关系。student表的pro字段依赖于province表的pro字段，就称student表为从表，province表为主表。</p><h1 id="四、创建表"><a href="#四、创建表" class="headerlink" title="四、创建表"></a>四、创建表</h1><h2 id="1、三范式"><a href="#1、三范式" class="headerlink" title="1、三范式"></a>1、三范式</h2><blockquote><p>创建表之前需要提到一个行业标准，叫做<strong>三范式</strong>。不一定非要按照这种标准来创建表，但是建议按照这种标准来。三范式</p></blockquote><h3 id="1-1、一范式-1NF-，保证每列的原子性"><a href="#1-1、一范式-1NF-，保证每列的原子性" class="headerlink" title="1.1、一范式(1NF)，保证每列的原子性"></a>1.1、一范式(1NF)，保证每列的原子性</h3><p>保证每列的原子性，就是说每列的数据应该是一个完整的数据，不可分割的数据。不能再一个字段上方式两个数据。</p><p><img src="https://img-blog.csdnimg.cn/20200314195951226.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200314200017999.png" alt="在这里插入图片描述"></p><h3 id="1-2、二范式-2NF-，非主键部分依赖主键"><a href="#1-2、二范式-2NF-，非主键部分依赖主键" class="headerlink" title="1.2、二范式(2NF)，非主键部分依赖主键"></a>1.2、二范式(2NF)，非主键部分依赖主键</h3><p>二范式是在一范式的基础上增加的。为了区分相同的数据，可以给表设置一个主键，用来区分不同数据。主键必须是唯一的。</p><p><img src="https://img-blog.csdnimg.cn/20200314200045145.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200314200056886.png" alt="在这里插入图片描述"></p><h3 id="1-3、三范式-3NF-，属性不依赖与其它非属性"><a href="#1-3、三范式-3NF-，属性不依赖与其它非属性" class="headerlink" title="1.3、三范式(3NF)，属性不依赖与其它非属性"></a>1.3、三范式(3NF)，属性不依赖与其它非属性</h3><p>三范式又是在二范式的基础上增加的。每个表中应该存放和本表有关的数据，和表无关的数据可以在创建一个表用来单独存放。两表通过外键关联。</p><p><img src="https://img-blog.csdnimg.cn/20200314200112192.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200314200125166.png" alt="在这里插入图片描述"></p><h2 id="2、创建表"><a href="#2、创建表" class="headerlink" title="2、创建表"></a>2、创建表</h2><p>创建表的语法为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段<span class="number">1</span> 类型 [约束],</span><br><span class="line">字段<span class="number">2</span> 类型 [约束],</span><br><span class="line">字段<span class="number">3</span> 类型 [约束].....</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>例如，创建一个employee表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>) <span class="keyword">primary</span> key,</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">       e_age number(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>e_id number(5) primary key：字段名叫e_id，类型为number，长度为5，主键约束</li><li>e_name varchar(15) not null：字段名叫e_name，类型为字符类型，长度15，非空约束</li><li>e_age number(3) not null：字段名叫e_age，类型为number，长度3，非空约束</li></ul><p>这就是一个最简单的创建表的过程。</p><p>创建表也可以不带约束。建议看实际情况决定带不带约束，但是建议有一个主键约束。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="3、三种添加约束方式"><a href="#3、三种添加约束方式" class="headerlink" title="3、三种添加约束方式"></a>3、三种添加约束方式</h2><blockquote><p>创建表时的约束也有三种添加方式。分别为创建时添加约束、创建快结束时添加约束、创价结束后添加约束。</p></blockquote><h3 id="3-1、创建表时添加约束"><a href="#3-1、创建表时添加约束" class="headerlink" title="3.1、创建表时添加约束"></a>3.1、创建表时添加约束</h3><blockquote><p>创建表时添加约束语法：<code>字段名 类型 约束</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>) <span class="keyword">primary</span> key, <span class="comment">-- 主键约束</span></span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>, <span class="comment">-- 非空约束 唯一约束</span></span><br><span class="line">       e_age number(<span class="number">3</span>) <span class="keyword">check</span>(e_age <span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">150</span>) <span class="keyword">not</span> <span class="keyword">null</span>,  <span class="comment">-- 检查约束 非空约束</span></span><br><span class="line">       e_gender number(<span class="number">1</span>) <span class="keyword">check</span>(e_gender <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">0</span>)), <span class="comment">-- 检查约束</span></span><br><span class="line">       e_date <span class="type">date</span> <span class="keyword">default</span>(sysdate) <span class="comment">-- 默认约束</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>unique：唯一约束，在这个表中e_name字段的值必须时唯一的，不能重复</li><li>check(e_age &gt;=0 and e_age &lt;= 150)：检查约束，e_age 的值只能时在0-150之间</li><li>check(e_gender in (1,0)：检查约束：e_gender 的值只能为1或0，1表示男，0表示女</li><li>default(sysdate)：默认约束，如果没给这个字段值，默认给一个当前时间</li></ul><p>上面写在字段后的阿约束就是在创建时添加约束。</p><h3 id="3-2、创建表结束时添加约束"><a href="#3-2、创建表结束时添加约束" class="headerlink" title="3.2、创建表结束时添加约束"></a>3.2、创建表结束时添加约束</h3><blockquote><p>创建表结束时添加约束语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"> 字段信息....,</span><br><span class="line"> 约束信息...</span><br><span class="line">)</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>),</span><br><span class="line">       e_gender number(<span class="number">1</span>),</span><br><span class="line">       e_date <span class="type">date</span>,</span><br><span class="line">       <span class="keyword">primary</span> key (e_id), <span class="comment">-- 主键约束</span></span><br><span class="line">       <span class="keyword">unique</span>(e_name), <span class="comment">-- 唯一约束</span></span><br><span class="line">       <span class="keyword">check</span>(e_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>), <span class="comment">-- 检查约束 非空约束</span></span><br><span class="line">       <span class="keyword">check</span>(e_age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>), <span class="comment">-- 检查约束 非空约束</span></span><br><span class="line">       <span class="keyword">check</span>(e_age <span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">150</span>), <span class="comment">-- 检查约束</span></span><br><span class="line">       <span class="keyword">check</span>(e_gender <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">0</span>)) <span class="comment">-- 检查约束</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3-3、创建表结束后追加约束"><a href="#3-3、创建表结束后追加约束" class="headerlink" title="3.3、创建表结束后追加约束"></a>3.3、创建表结束后追加约束</h3><blockquote><p>创建表结束后追加约束语法：<code>alter table 表名 add 约束 (字段)</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一个没有约束的表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>),</span><br><span class="line">       e_gender number(<span class="number">1</span>),</span><br><span class="line">       e_date <span class="type">date</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">primary</span> key (e_id); <span class="comment">-- 主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">unique</span> (e_name);      <span class="comment">-- 唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">check</span>(e_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>); <span class="comment">-- 非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">check</span>(e_age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>);  <span class="comment">-- 非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">check</span>(e_age <span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">150</span>);  <span class="comment">-- 检查约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">check</span>(e_gender <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">0</span>)); <span class="comment">-- 检查约束</span></span><br></pre></td></tr></table></figure><h2 id="4、约束添加约束名"><a href="#4、约束添加约束名" class="headerlink" title="4、约束添加约束名"></a>4、约束添加约束名</h2><p>约束的好处就是保证数据的正确，不能随意添加。添加约束后如果要添加错误的数据就会出错，例如下图：</p><p><img src="https://img-blog.csdnimg.cn/20200314200145978.png" alt="在这里插入图片描述"></p><p>上述就是唯一约束错误，<code>SCOTT.SYS_C007698</code>就是唯一约束的约束名，是系统给的一个默认名字。出现约束错误就需要根据这个约束名来查找错误，系统给的约束名不太便于查找，所以可以自己添加约束名。</p><p>添加约束名的方式和添加约束的方式差不多，只不过是在添加约束的时候多加几个字，所以也分为三种添加方式。</p><h3 id="4-1、创建表时添加约束名"><a href="#4-1、创建表时添加约束名" class="headerlink" title="4.1、创建表时添加约束名"></a>4.1、创建表时添加约束名</h3><blockquote><p>创建表时添加约束名语法：<code>字段名 类型 constraints 约束名 约束</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>) constraints pk_employee_e_id <span class="keyword">primary</span> key, <span class="comment">-- 主键约束,约束名为pk_employee_e_id</span></span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>) constraints employee_e_name_not_null <span class="keyword">not</span> <span class="keyword">null</span> constraints employee_e_name_unique <span class="keyword">unique</span>, <span class="comment">-- 非空约束 唯一约束</span></span><br><span class="line">       e_age number(<span class="number">3</span>) constraints employee_e_age <span class="keyword">check</span>(e_age <span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">150</span>) constraints employee_e_age_not_null <span class="keyword">not</span> <span class="keyword">null</span>,  <span class="comment">-- 检查约束 非空约束</span></span><br><span class="line">       e_gender number(<span class="number">1</span>) constraints employee_e_gender <span class="keyword">check</span>(e_gender <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">0</span>)), <span class="comment">-- 检查约束</span></span><br><span class="line">       e_date <span class="type">date</span> <span class="keyword">default</span>(sysdate) <span class="comment">-- 默认约束</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Tips：default不能添加约束名</p><h3 id="4-2、创建表结束时添加约束名"><a href="#4-2、创建表结束时添加约束名" class="headerlink" title="4.2、创建表结束时添加约束名"></a>4.2、创建表结束时添加约束名</h3><blockquote><p>创建表结束时添加约束名语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"> 字段信息....,</span><br><span class="line"> constraints 约束名 约束信息...</span><br><span class="line">)</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>),</span><br><span class="line">       e_gender number(<span class="number">1</span>),</span><br><span class="line">       e_date <span class="type">date</span>,</span><br><span class="line">       constraints pk_employee_e_id <span class="keyword">primary</span> key (e_id), <span class="comment">-- 主键约束</span></span><br><span class="line">       constraints employee_e_name_unique <span class="keyword">unique</span>(e_name), <span class="comment">-- 唯一约束</span></span><br><span class="line">       constraints employee_e_name_not_null <span class="keyword">check</span>(e_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>), <span class="comment">-- 检查约束 非空约束</span></span><br><span class="line">       constraints employee_e_age_not_null <span class="keyword">check</span>(e_age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>), <span class="comment">-- 检查约束 非空约束</span></span><br><span class="line">       constraints employee_e_age <span class="keyword">check</span>(e_age <span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">150</span>), <span class="comment">-- 检查约束</span></span><br><span class="line">       constraints employee_e_gender <span class="keyword">check</span>(e_gender <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">0</span>)) <span class="comment">-- 检查约束</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="4-3、创建表结束后追加约束名"><a href="#4-3、创建表结束后追加约束名" class="headerlink" title="4.3、创建表结束后追加约束名"></a>4.3、创建表结束后追加约束名</h3><blockquote><p>创建表结束后追加约束名语法：<code>alter table 表名 add constraints 约束名 约束 (字段)</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>),</span><br><span class="line">       e_gender number(<span class="number">1</span>),</span><br><span class="line">       e_date <span class="type">date</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">constraint</span>s pk_employee_e_id <span class="keyword">primary</span> key (e_id); <span class="comment">-- 主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">constraint</span>s employee_e_name_unique <span class="keyword">unique</span> (e_name);      <span class="comment">-- 唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">constraint</span>s employee_e_name_not_null <span class="keyword">check</span>(e_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>); <span class="comment">-- 非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">constraint</span>s employee_e_age_not_null <span class="keyword">check</span>(e_age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>);  <span class="comment">-- 非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">constraint</span>s employee_e_age <span class="keyword">check</span>(e_age <span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">150</span>);  <span class="comment">-- 检查约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">add</span> <span class="keyword">constraint</span>s employee_e_gender <span class="keyword">check</span>(e_gender <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">0</span>)); <span class="comment">-- 检查约束</span></span><br></pre></td></tr></table></figure><h2 id="5、删除约束"><a href="#5、删除约束" class="headerlink" title="5、删除约束"></a>5、删除约束</h2><blockquote><p>既然有添加约束那就肯定有删除约束。</p><p>删除约束语法：<code>alter table 表名 drop constraints 约束名</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> employee <span class="keyword">drop</span> constraints employee_e_gender;</span><br></pre></td></tr></table></figure><h2 id="6、外键约束"><a href="#6、外键约束" class="headerlink" title="6、外键约束"></a>6、外键约束</h2><blockquote><p>前面提到过主从表关系，主从表关系就是通过主外键来关联两个表的。都是约束所以外键约束也有三种添加方式。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> loc(</span><br><span class="line">       l_id number(<span class="number">5</span>) <span class="keyword">primary</span> key,</span><br><span class="line">       l_name <span class="type">varchar</span>(<span class="number">18</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="6-1、创建表时添加外键约束"><a href="#6-1、创建表时添加外键约束" class="headerlink" title="6.1、创建表时添加外键约束"></a>6.1、创建表时添加外键约束</h3><blockquote><p>创建表时添加外键约束语法：<code>字段 类型 references = 主表(主表被引用的字段)</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>),</span><br><span class="line">       e_gender number(<span class="number">1</span>),</span><br><span class="line">       e_date <span class="type">date</span>,</span><br><span class="line">       e_loc number(<span class="number">5</span>) <span class="keyword">references</span> loc(l_id) <span class="comment">--外键约束</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="6-2、创建表结束时添加外键约束"><a href="#6-2、创建表结束时添加外键约束" class="headerlink" title="6.2、创建表结束时添加外键约束"></a>6.2、创建表结束时添加外键约束</h3><blockquote><p>创建表结束时添加外键约束语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"> 字段信息....,</span><br><span class="line"> <span class="keyword">foreign</span> key(从表外键字段) <span class="keyword">references</span> 主表(主表被引用的字段)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(</span><br><span class="line">       e_id number(<span class="number">5</span>),</span><br><span class="line">       e_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">       e_age number(<span class="number">3</span>),</span><br><span class="line">       e_gender number(<span class="number">1</span>),</span><br><span class="line">       e_date <span class="type">date</span>,</span><br><span class="line">       e_loc number(<span class="number">5</span>),</span><br><span class="line">       <span class="keyword">foreign</span> key(e_loc) <span class="keyword">references</span> loc(l_id) <span class="comment">-- 外键</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="6-3、创建表结束后追加外键约束"><a href="#6-3、创建表结束后追加外键约束" class="headerlink" title="6.3、创建表结束后追加外键约束"></a>6.3、创建表结束后追加外键约束</h3><blockquote><p>创建表结束后追加外键约束语法：</p><p><code>alter table 从表 add foreign key (从表外键字段) references 主表(主表被引用的字段)</code></p></blockquote><h2 id="7、表注释注释"><a href="#7、表注释注释" class="headerlink" title="7、表注释注释"></a>7、表注释注释</h2><blockquote><p>有时候创建了很多表，记不住了每个字段是干嘛的，就可以给表|字段添加注释，方便以后查看。</p></blockquote><h3 id="7-1、给表添加注释"><a href="#7-1、给表添加注释" class="headerlink" title="7.1、给表添加注释"></a>7.1、给表添加注释</h3><blockquote><p>给表添加注释语法：<code>comment on table 表名 is &#39;注释信息&#39;</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comment <span class="keyword">on</span> <span class="keyword">table</span> employee <span class="keyword">is</span> <span class="string">&#x27;员工表&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="7-2、给表中字段添加注释"><a href="#7-2、给表中字段添加注释" class="headerlink" title="7.2、给表中字段添加注释"></a>7.2、给表中字段添加注释</h3><blockquote><p>给表中字段添加注释语法：<code>comment on column 表名.字段名 is &#39;注释信息&#39;</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> employee.e_id <span class="keyword">is</span> <span class="string">&#x27;员工ID&#x27;</span>;</span><br><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> employee.e_name <span class="keyword">is</span> <span class="string">&#x27;员工姓名&#x27;</span>;</span><br><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> employee.e_age <span class="keyword">is</span> <span class="string">&#x27;员工年龄&#x27;</span>;</span><br><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> employee.e_gender <span class="keyword">is</span> <span class="string">&#x27;员工性别&#x27;</span>;</span><br><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> employee.e_date <span class="keyword">is</span> <span class="string">&#x27;员工入职日期&#x27;</span>;</span><br><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> employee.e_loc <span class="keyword">is</span> <span class="string">&#x27;员工地址&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="五、插入数据"><a href="#五、插入数据" class="headerlink" title="五、插入数据"></a>五、插入数据</h1><blockquote><p>想要操作表中的数据就需要先插入数据。</p></blockquote><h2 id="1、常规插入数据"><a href="#1、常规插入数据" class="headerlink" title="1、常规插入数据"></a>1、常规插入数据</h2><blockquote><p>插入数据语法：<code>insert into 表名 values(字段值....)</code>。</p><p>因为没有指定要插入数据字段，所以默认是给表的所有字段添加数据。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">20</span>,<span class="number">1</span>,sysdate,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>如果要插入的数据字段是外键，引用了主表的数据，那么这个字段就只能是主表字段的值。所以要保证主表存在数据，依赖主表的数据插入从表的数据。否则会报错</p><p><img src="https://img-blog.csdnimg.cn/20200314200206714.png" alt="在这里插入图片描述"></p><h2 id="2、指定字段插入数据"><a href="#2、指定字段插入数据" class="headerlink" title="2、指定字段插入数据"></a>2、指定字段插入数据</h2><blockquote><p>指定字段插入数据语法：<code>insert into employee (指定字段....) values(字段值....)</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into employee (e_id,e_name,e_age,e_gender,e_loc) values(2,&#x27;李四&#x27;,20,1,2)</span><br></pre></td></tr></table></figure><h2 id="3、-从结果集中插入数据"><a href="#3、-从结果集中插入数据" class="headerlink" title="3、 从结果集中插入数据"></a>3、 从结果集中插入数据</h2><blockquote><p>从结果集中插入数据：<code>insert into 表名 select * from[筛选条件]</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee1 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>意思就是，从employee表中查找e_loc字段为1的记录，把查出来的结果插入到employee1表中</p><h2 id="4、将结果集中的指定字段插入到表中的指定字段"><a href="#4、将结果集中的指定字段插入到表中的指定字段" class="headerlink" title="4、将结果集中的指定字段插入到表中的指定字段"></a>4、将结果集中的指定字段插入到表中的指定字段</h2><blockquote><p>从结果集中插入数据：<code>insert into 表名(字段) select 字段... from[筛选条件]</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee1(e_id,e_name,e_age,e_loc) <span class="keyword">select</span> e_id,e_name,e_age,e_loc <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>意思就是，从employee表中查找e_loc字段为1的记录的指定字段的值，把查出来的结果插入到employee1表的指定字段中</p><h1 id="六、删除数据"><a href="#六、删除数据" class="headerlink" title="六、删除数据"></a>六、删除数据</h1><blockquote><p>有插入数据那么就有删除数据</p></blockquote><h2 id="1、删除表中全部数据"><a href="#1、删除表中全部数据" class="headerlink" title="1、删除表中全部数据"></a>1、删除表中全部数据</h2><blockquote><p>删除表中的全部数据语法：<code>delete from 表名</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> employee1</span><br></pre></td></tr></table></figure><h2 id="2、删除表中的指定数据"><a href="#2、删除表中的指定数据" class="headerlink" title="2、删除表中的指定数据"></a>2、删除表中的指定数据</h2><blockquote><p>删除表中的指定数据语法：<code>delete from 表名 [筛选条件]</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> employee1 <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>意思就是删除employee1表中的e_loc为1的数据</p><h1 id="七、修改数据"><a href="#七、修改数据" class="headerlink" title="七、修改数据"></a>七、修改数据</h1><blockquote><p>修改数据同样也不能少</p></blockquote><h2 id="1、修改全部数据"><a href="#1、修改全部数据" class="headerlink" title="1、修改全部数据"></a>1、修改全部数据</h2><blockquote><p>语法：<code>update 表名 要修改的字段 = 要修改的结果[,.....]</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update employee1 <span class="keyword">set</span> e_date <span class="operator">=</span> sysdate,e_age <span class="operator">=</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p>意思就是修改employee1表中的e_date字段为当前日期,e_age字段为20</p><h2 id="2、修改指定数据"><a href="#2、修改指定数据" class="headerlink" title="2、修改指定数据"></a>2、修改指定数据</h2><blockquote><p>语法：<code>update 表名 要修改的字段 = 要修改的结果[,.....] </code>where 条件</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update employee1 <span class="keyword">set</span> e_date <span class="operator">=</span> sysdate,e_age <span class="operator">=</span> <span class="number">20</span> <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>意思就是修改employee1表中的e_loc为1的记录的e_date字段为当前日期,e_age字段为20</p><h1 id="八、查找数据"><a href="#八、查找数据" class="headerlink" title="八、查找数据"></a>八、查找数据</h1><blockquote><p>增删改查就查查了。</p></blockquote><h2 id="1、查找全部数据"><a href="#1、查找全部数据" class="headerlink" title="1、查找全部数据"></a>1、查找全部数据</h2><blockquote><p>语法：<code>select * from 表名</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200237878.png" alt="在这里插入图片描述"></p><h2 id="2、查找指定数据"><a href="#2、查找指定数据" class="headerlink" title="2、查找指定数据"></a>2、查找指定数据</h2><blockquote><p>语法：<code>select * from 表名 where 条件</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200225677.png" alt="在这里插入图片描述"></p><h1 id="九、去重、伪列、虚表、别名、字符串、连接符、null"><a href="#九、去重、伪列、虚表、别名、字符串、连接符、null" class="headerlink" title="九、去重、伪列、虚表、别名、字符串、连接符、null"></a>九、去重、伪列、虚表、别名、字符串、连接符、null</h1><h2 id="1、distinct-去重"><a href="#1、distinct-去重" class="headerlink" title="1、distinct(去重)"></a>1、distinct(去重)</h2><blockquote><p>去除结果集中的重复数据。只能对结果集中完全重复的数据去重</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e_loc <span class="keyword">from</span> employee<span class="comment">-- 未去重</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> e_loc <span class="keyword">from</span> employee <span class="comment">-- 去重</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200252291.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200314200301604.png" alt="在这里插入图片描述"><br>左边是没有去重的，右边是去重后的。</p><h2 id="2、伪列"><a href="#2、伪列" class="headerlink" title="2、伪列"></a>2、伪列</h2><blockquote><p>伪列就是一个不存在的列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="number">1</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">from</span> employee</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200339679.png" alt="在这里插入图片描述"></p><p>伪列要是一个表达式</p><h2 id="3、虚表"><a href="#3、虚表" class="headerlink" title="3、虚表"></a>3、虚表</h2><blockquote><p>虚表和伪列一样，就是一个不存在的表，但是我们可以使用</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">9</span><span class="operator">*</span><span class="number">9</span> <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200352117.png" alt="在这里插入图片描述"></p><h2 id="4、别名"><a href="#4、别名" class="headerlink" title="4、别名"></a>4、别名</h2><blockquote><p>别名就是给结果集起一个名字，不然如果字段很长书写有点麻烦。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e_id id <span class="keyword">from</span> employee</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200405559.png" alt="在这里插入图片描述"></p><p>别名可以是英文也可以是中文</p><h2 id="5、字符串"><a href="#5、字符串" class="headerlink" title="5、字符串"></a>5、字符串</h2><blockquote><p>在SQL语言中字符串使用<code>&#39;&#39;</code>单引号表示，<code>“”</code>在这里表示是原样输出。字符串可以当作伪劣使用。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;哈哈哈&#x27;</span> <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200415954.png" alt="在这里插入图片描述"></p><h2 id="6、连接符"><a href="#6、连接符" class="headerlink" title="6、连接符"></a>6、连接符</h2><blockquote><p>和Java不同的是，这里的连接符是使用<code>||</code>表示。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给结果集添加前缀</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;ahh-&#x27;</span><span class="operator">||</span><span class="string">&#x27;啊哈哈&#x27;</span> <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200425549.png" alt="在这里插入图片描述"></p><h2 id="7、null处理"><a href="#7、null处理" class="headerlink" title="7、null处理"></a>7、null处理</h2><blockquote><p>可以使用一个nvl函数处理null的问题。</p><p>nvl(参数1,参数2)：参数1为指定字段，如果参数1为null，则返回参数2的内容</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,job,sal,nvl(comm,<span class="number">0</span>) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200440133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="十、查询过滤"><a href="#十、查询过滤" class="headerlink" title="十、查询过滤"></a>十、查询过滤</h1><blockquote><p>有时候并不会查找所有的数据，这是可以使用<code>where</code>语句进行条件过滤</p><p>语法：<code>where 条件</code></p></blockquote><h2 id="1、比较条件"><a href="#1、比较条件" class="headerlink" title="1、比较条件"></a>1、比较条件</h2><blockquote><p>比较条件 <strong>&gt;、&lt;、&gt;=、&lt;=、=、!=、&lt;&gt;、between and</strong></p><p>!=和&lt;&gt;都是不等于、between and就是大于等于且小于等于</p></blockquote><h3 id="between-and"><a href="#between-and" class="headerlink" title="between and"></a>between and</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_age <span class="keyword">between</span> <span class="number">18</span> <span class="keyword">and</span> <span class="number">22</span><span class="comment">-- 筛选出年龄&gt;=18 并且 年龄 &lt;= 22</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200501839.png" alt="在这里插入图片描述"></p><h2 id="2、逻辑判断"><a href="#2、逻辑判断" class="headerlink" title="2、逻辑判断"></a>2、逻辑判断</h2><blockquote><p><strong>and、or、not</strong></p><p>and：且</p><p>or：或</p><p>not：取反</p></blockquote><h3 id="and"><a href="#and" class="headerlink" title="and"></a>and</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_age <span class="operator">&gt;=</span><span class="number">18</span> <span class="keyword">and</span> e_age <span class="operator">&lt;=</span> <span class="number">22</span><span class="comment">-- 且</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020031420051079.png" alt="在这里插入图片描述"></p><h3 id="or"><a href="#or" class="headerlink" title="or"></a>or</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span> <span class="keyword">or</span> e_loc <span class="operator">=</span> <span class="number">2</span><span class="comment">-- 或</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200521232.png" alt="在这里插入图片描述"></p><h3 id="not"><a href="#not" class="headerlink" title="not"></a>not</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> <span class="keyword">not</span> e_loc <span class="operator">=</span> <span class="number">3</span><span class="comment">-- 取反</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020031420053143.png" alt="在这里插入图片描述"></p><h2 id="3、结果集操作"><a href="#3、结果集操作" class="headerlink" title="3、结果集操作"></a>3、结果集操作</h2><blockquote><p><strong>union、union all、intersect、minus</strong></p><p>union：并集，去除重复，两个结果集的并集，默认规则排序</p><p>union all：和上面一样，不过不会去除重复的记录值，不进行排序</p><p>intersect：交集，找出重复的记录，两个结果集的交集，默认排序</p><p>minus：差集，去掉重复记录，两个结果集的差集，默认排序</p></blockquote><h3 id="union"><a href="#union" class="headerlink" title="union"></a>union</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">3</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200542152.png" alt="在这里插入图片描述"></p><h3 id="union-all"><a href="#union-all" class="headerlink" title="union all"></a>union all</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200557767.png" alt="在这里插入图片描述"></p><h3 id="intersect"><a href="#intersect" class="headerlink" title="intersect"></a>intersect</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="operator">=</span> <span class="number">7839</span></span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200606560.png" alt="在这里插入图片描述"></p><h3 id="minus"><a href="#minus" class="headerlink" title="minus"></a>minus</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;=</span><span class="number">1500</span></span><br><span class="line">minus</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&lt;=</span><span class="number">3000</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200647420.png" alt="在这里插入图片描述"></p><h2 id="4、null"><a href="#4、null" class="headerlink" title="4、null"></a>4、null</h2><blockquote><p><strong>is null、is not null、not is null</strong></p><p>is null：是否为null</p><p>is not null|not is null：不为null</p></blockquote><h3 id="is-null"><a href="#is-null" class="headerlink" title="is null"></a>is null</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200657218.png" alt="在这里插入图片描述"></p><h3 id="not-is-null-is-not-null"><a href="#not-is-null-is-not-null" class="headerlink" title="not is null|is not null"></a>not is null|is not null</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">not</span> comm <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200708221.png" alt="在这里插入图片描述"></p><h2 id="5、模糊查询"><a href="#5、模糊查询" class="headerlink" title="5、模糊查询"></a>5、模糊查询</h2><blockquote><p>like：%、_</p><p>%：任意个字符</p><p>_：一个字符</p></blockquote><h3 id=""><a href="#" class="headerlink" title="%"></a>%</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_name <span class="keyword">like</span> <span class="string">&#x27;%二%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200720382.png" alt="在这里插入图片描述"></p><h3 id="-1"><a href="#-1" class="headerlink" title="_"></a>_</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_name <span class="keyword">like</span> <span class="string">&#x27;_美%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200730857.png" alt="在这里插入图片描述"></p><h2 id="6、in、exists"><a href="#6、in、exists" class="headerlink" title="6、in、exists"></a>6、in、exists</h2><blockquote><p>in、exists</p><p>in：相当于多个<code>or</code></p><p>exists：如果exists有结果则外层保存数据，内查询借助外部数据</p></blockquote><h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_age <span class="keyword">in</span> (<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200740618.png" alt="在这里插入图片描述"></p><h3 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee e1 <span class="keyword">where</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee e2 <span class="keyword">where</span> e1.e_id <span class="operator">=</span> e2.e_id)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200755108.png" alt="在这里插入图片描述"></p><h2 id="7、子查询"><a href="#7、子查询" class="headerlink" title="7、子查询"></a>7、子查询</h2><blockquote><p>把一个查询的结果当作数据源或者比较数据使用，查询语句内套查询语句</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询和ahh在一个地方的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> e_loc <span class="operator">=</span> (<span class="keyword">select</span> e_loc <span class="keyword">from</span> employee <span class="keyword">where</span> e_name <span class="operator">=</span> <span class="string">&#x27;啊哈哈&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200804829.png" alt="在这里插入图片描述"></p><h1 id="十一、排序"><a href="#十一、排序" class="headerlink" title="十一、排序"></a>十一、排序</h1><p>在SQL语言中，如果想要对结果集进行按照指定字段排序，需要使用<code>Order By</code>，排序不是真正改变真正数据储存的排序，只是对展示的结果集进行排序。</p><h2 id="1、升序"><a href="#1、升序" class="headerlink" title="1、升序"></a>1、升序</h2><blockquote><p>升序就是由小到大的排序，例如：1、2、3、4、5、6、7、8、9。</p><p>在SQL中使用asc关键字默认是升序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> e_age <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> e_age;<span class="comment">-- asc可以省略</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200818921.png" alt="在这里插入图片描述"></p><h2 id="2、降序"><a href="#2、降序" class="headerlink" title="2、降序"></a>2、降序</h2><blockquote><p>降序就是由小大小的排序，例如：9、8、7、6、5、4、3、2、1</p><p>在SQL中使用<strong>desc</strong>关键字</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> e_age <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200841458.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200314200829342.png" alt="在这里插入图片描述"></p><h2 id="3、多个字段排序"><a href="#3、多个字段排序" class="headerlink" title="3、多个字段排序"></a>3、多个字段排序</h2><blockquote><p>可以对多个字段排序，如果第一个字段相等，则按照第二个字段排序….</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> e_age <span class="keyword">desc</span>,e_id <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="3、null的排序"><a href="#3、null的排序" class="headerlink" title="3、null的排序"></a>3、null的排序</h2><blockquote><p>null做为一个特殊的存在，也有自己的排序关键字</p><ul><li><p>nulls first：所有的null在前面</p></li><li><p>nulls last：所有的null在后面</p></li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm nulls <span class="keyword">first</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314200852702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><blockquote><p>函数分为系统内置函数、自定义函数，根据函数的返回结果分为：<code>单行函数</code>和<code>组函数</code></p><ul><li>单行函数：一条记录返回一个结果</li><li>组函数(多行函数)：多条记录返回一个结果</li></ul></blockquote><h1 id="十二、单行函数"><a href="#十二、单行函数" class="headerlink" title="十二、单行函数"></a>十二、单行函数</h1><h2 id="1、日期函数"><a href="#1、日期函数" class="headerlink" title="1、日期函数"></a>1、日期函数</h2><h3 id="1-1、sysdate-current-date函数"><a href="#1-1、sysdate-current-date函数" class="headerlink" title="1.1、sysdate|current_date函数"></a>1.1、sysdate|current_date函数</h3><blockquote><p>sysdate|current_date返回当前日期</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 获取当前日期时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">current_date</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/2020031119454142.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-2、add-months函数"><a href="#1-2、add-months函数" class="headerlink" title="1.2、add_months函数"></a>1.2、add_months函数</h3><blockquote><p>add_months(日期,x)：返回加上x月后的日期</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 当前时间加上2月后的时间</span></span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">2</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194601513.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-3、last-day函数"><a href="#1-3、last-day函数" class="headerlink" title="1.3、last_day函数"></a>1.3、last_day函数</h3><blockquote><p>last_day(日期)：返回当前月份的最后一天</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 本月的最后一天</span></span><br><span class="line"><span class="keyword">select</span> last_day(sysdate) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194610889.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-4、months-between函数"><a href="#1-4、months-between函数" class="headerlink" title="1.4、months_between函数"></a>1.4、months_between函数</h3><blockquote><p>months_between(日期1,日期2)：返回日期1和日期2之间相差的月份数量</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 时间差</span></span><br><span class="line"><span class="keyword">select</span> months_between(sysdate,sysdate<span class="number">-125</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194622652.png"></td></tr></tbody></table><p><strong>Tips：日期可以参与加减运算</strong></p><h3 id="1-5、next-day函数"><a href="#1-5、next-day函数" class="headerlink" title="1.5、next_day函数"></a>1.5、next_day函数</h3><blockquote><p>next_day(日期,’x’)：返回下一个x的日期</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 下一个周五</span></span><br><span class="line"><span class="keyword">select</span> next_day(sysdate,<span class="string">&#x27;星期五&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/2020031119464218.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>星期几可以使用数字代替：</p><p>1-&gt;星期日，2-&gt;星期一，3-&gt;星期二，4-&gt;星期三，5-&gt;星期四，6-&gt;星期五，7-&gt;星期六</p><h2 id="2、日期转换函数"><a href="#2、日期转换函数" class="headerlink" title="2、日期转换函数"></a>2、日期转换函数</h2><h3 id="2-1、to-char函数"><a href="#2-1、to-char函数" class="headerlink" title="2.1、to_char函数"></a>2.1、to_char函数</h3><blockquote><p>to_char(日期,m)：把日期转换为m样式的字符串</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 日期转换为字符串</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyy&quot;年&quot;mm&quot;月&quot;dd&quot;日&quot; hh24:mi:ss&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194653995.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>Tips: 如果字符串样式里要使用中文，需要给中文加上<code>&quot;&quot;</code>,<code>hh24</code>代表是24小时制，<code>mi</code>是分，<code>ss</code>是秒</p><h3 id="2-2、to-date函数"><a href="#2-2、to-date函数" class="headerlink" title="2.2、to_date函数"></a>2.2、to_date函数</h3><p>刚好和上面的相反，把字符串转换为日期</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 字符串转换为日期</span></span><br><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;2020-3-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194708909.png" alt="在这里插入图片描述"></td></tr></tbody></table><h2 id="3、其它函数"><a href="#3、其它函数" class="headerlink" title="3、其它函数"></a>3、其它函数</h2><h3 id="3-1、nvl"><a href="#3-1、nvl" class="headerlink" title="3.1、nvl"></a>3.1、nvl</h3><blockquote><p>nvl(参数1,参数2)：如果参数1为null，则返回参数2</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,nvl(comm,<span class="number">0</span>) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194721568.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="3-2、decode"><a href="#3-2、decode" class="headerlink" title="3.2、decode"></a>3.2、decode</h3><blockquote><p>decode(参数,参数1,参数2,参数3,参数4,…….)：对参数进行判断，如果参数是参数1，就返回参数2，如果是参数3就返回参数4…</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> decode(deptno,<span class="number">10</span>,<span class="string">&#x27;十&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;二十&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;三十&#x27;</span>,<span class="string">&#x27;默认时-四十&#x27;</span>) <span class="keyword">from</span> dept</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194731213.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="3-2、case-when-then-else-end"><a href="#3-2、case-when-then-else-end" class="headerlink" title="3.2、case when then else end"></a>3.2、case when then else end</h3><blockquote><p>类似于java的switch选择语句</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select <span class="keyword">case</span> deptno</span><br><span class="line">         when <span class="number">10</span> then</span><br><span class="line">          <span class="string">&#x27;十&#x27;</span></span><br><span class="line">         when <span class="number">20</span> then</span><br><span class="line">          <span class="string">&#x27;二十&#x27;</span></span><br><span class="line">         when <span class="number">30</span> then</span><br><span class="line">          <span class="string">&#x27;三十&#x27;</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">          <span class="string">&#x27; 默认四十&#x27;</span></span><br><span class="line">       end</span><br><span class="line">  from dept</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194741194.png" alt="在这里插入图片描述"></td></tr></tbody></table><h1 id="十三、组函数"><a href="#十三、组函数" class="headerlink" title="十三、组函数"></a>十三、组函数</h1><blockquote><p>常用的组函数：count、max、min、sum、avg</p><ul><li>count：记录数量统计</li><li>max：最大值</li><li>min：最小值</li><li>sum：求和</li><li>avg：平均值</li></ul></blockquote><p><strong>Tips：组函数仅在选择列表和having子句中有效，出现组函数，select中只能有组函数或者分组字段</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(ename) 员工数量,<span class="built_in">max</span>(sal) 最高工资,<span class="built_in">min</span>(sal) 最低工资,<span class="built_in">sum</span>(sal) 工资总和,<span class="built_in">avg</span>(sal) 平均工资 <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311194755848.png" alt="在这里插入图片描述"></td></tr></tbody></table><h1 id="十四、分组"><a href="#十四、分组" class="headerlink" title="十四、分组"></a>十四、分组</h1><p>之前都是单条记录数据筛选分析，分组就可以对一组记录数据进行筛选分析。</p><p><code>group by 字段</code>用来对数据进行分组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 每个部门有几个员工</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311201609714.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>Tips:</p><ul><li>如果出现了分组，select后就不能在出现非分组信息</li><li><code>group by 字段</code>关键字不能出现在<code>select</code>中</li></ul><h2 id="组过滤"><a href="#组过滤" class="headerlink" title="组过滤"></a>组过滤</h2><p><code>having</code>关键字是组过滤</p><p>where：过滤行信息，不能使用组顾虑</p><p>having：过滤组，可以使用组函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 每个部门平均工资高于2000的</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal) <span class="operator">&gt;</span> <span class="number">2000</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>运行结果</th></tr></thead><tbody><tr><td><img src="https://img-blog.csdnimg.cn/20200311201619189.png" alt="在这里插入图片描述"></td></tr></tbody></table><h1 id="十五、表连接"><a href="#十五、表连接" class="headerlink" title="十五、表连接"></a>十五、表连接</h1><p>当获取的数据不是来源于同一张表，而是来源于多张表的时候就需要用到表连接。</p><h2 id="1、92连接"><a href="#1、92连接" class="headerlink" title="1、92连接"></a>1、92连接</h2><h3 id="1-1、笛卡尔积"><a href="#1-1、笛卡尔积" class="headerlink" title="1.1、笛卡尔积"></a>1.1、笛卡尔积</h3><p><img src="https://img-blog.csdnimg.cn/20200311210328297.png" alt="在这里插入图片描述"><br>两个集合A和B，A*B就是笛卡尔积</p><p>course表</p><p><img src="https://img-blog.csdnimg.cn/20200311210337875.png" alt="在这里插入图片描述"></p><p>teacher表</p><p><img src="https://img-blog.csdnimg.cn/20200311210345876.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> course,teacher</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311210402263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-2、等值连接"><a href="#1-2、等值连接" class="headerlink" title="1.2、等值连接"></a>1.2、等值连接</h3><p>等值连接，就是在笛卡尔积的基础上去条件相同的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> course c,teacher t <span class="keyword">where</span> c.tno <span class="operator">=</span> t.tno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311210417606.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-3、非等值连接"><a href="#1-3、非等值连接" class="headerlink" title="1.3、非等值连接"></a>1.3、非等值连接</h3><p>非等值连接：&gt;、&lt;、!=、&lt;&gt;、between and</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询员工姓名，工资及等级</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> salgrade s,emp e <span class="keyword">where</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311210429723.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-4、自连接"><a href="#1-4、自连接" class="headerlink" title="1.4、自连接"></a>1.4、自连接</h3><p>特殊的等值连接，来自于一张表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 员工的名字和员工的上级名字</span></span><br><span class="line"><span class="keyword">select</span> e1.ename 员工,e2.ename 上级 <span class="keyword">from</span> emp e1,emp e2 <span class="keyword">where</span> e1.mgr <span class="operator">=</span> e2.empno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311210440221.png" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="1-5、外连接"><a href="#1-5、外连接" class="headerlink" title="1.5、外连接"></a>1.5、外连接</h3><p>在上述的自连接有一个问题，缺一条记录。那是因为有一条的记录的上级为null，为了解决这一问题，可以使用外连接解决。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 员工的名字和员工的上级名字</span></span><br><span class="line"><span class="keyword">select</span> e1.ename 员工,e2.ename 上级 <span class="keyword">from</span> emp e1,emp e2 <span class="keyword">where</span> e1.mgr <span class="operator">=</span> e2.empno(<span class="operator">+</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200311210451217.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>就多加了一个<code>+</code>号就解决了这个问题，加号对面的表，也就是上面的e1表是主表，如果主表在左边就是左连接，在右边就是右连接</p><h2 id="2、99连接"><a href="#2、99连接" class="headerlink" title="2、99连接"></a>2、99连接</h2><h3 id="2-1、内连接"><a href="#2-1、内连接" class="headerlink" title="2.1、内连接"></a>2.1、内连接</h3><h4 id="2-1-1、交叉连接-笛卡尔积"><a href="#2-1-1、交叉连接-笛卡尔积" class="headerlink" title="2.1.1、交叉连接(笛卡尔积)"></a>2.1.1、交叉连接(笛卡尔积)</h4><p>和92链接一样，99连接也有笛卡尔积,不过99连接使用指定关键字<code>[inner] cross join</code>实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">cross</span> <span class="keyword">join</span> dept;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312134954466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><p>Tips：在内连接中可以省略<code>inner</code>关键字。</p><h4 id="2-1-2、自然连接"><a href="#2-1-2、自然连接" class="headerlink" title="2.1.2、自然连接"></a>2.1.2、自然连接</h4><p>在92连接中，为了避免出现笛卡尔积现象，可以使用等值连接来避免，当然在99语法中也可以同样避免。在99语法中叫做自然连接，也算是等值连接。使用<code>natural join</code>关键字实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">natural</span> <span class="keyword">join</span> dept</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/2020031213500555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><p>使用自然连接不需要指定字段，系统会自动按照两个表中的同名字段或主键进行关联。</p><h4 id="2-1-3、join-using"><a href="#2-1-3、join-using" class="headerlink" title="2.1.3、join using"></a>2.1.3、join using</h4><p>上面的自然连接不用指定字段，但是如果有多个同名字段，那么就可以使用指定的字段进行关联，在99语法中使用<code>join using</code>关键字实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">join</span> dept <span class="keyword">using</span>(deptno)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312135018256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h4 id="2-1-4、非等值连接"><a href="#2-1-4、非等值连接" class="headerlink" title="2.1.4、非等值连接"></a>2.1.4、非等值连接</h4><p>和92语法一样99语法也有非等值连接，使用关键字<code>join on</code>实现。<code>join on</code>可以实现等值连接，也可以实现非等值连接。</p><h5 id="2-1-4-1、等值连接"><a href="#2-1-4-1、等值连接" class="headerlink" title="2.1.4.1、等值连接"></a>2.1.4.1、等值连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312135034874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h5 id="2-1-4-2、非等值连接"><a href="#2-1-4-2、非等值连接" class="headerlink" title="2.1.4.2、非等值连接"></a>2.1.4.2、非等值连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">join</span> salgrade s <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312135050166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h3 id="2-2、外连接"><a href="#2-2、外连接" class="headerlink" title="2.2、外连接"></a>2.2、外连接</h3><p>和内连接不同的是，内连接只要满足条件就可以显示，外连接不仅包含满足条件的还包含不满足条件的，外连接分为左连接和右连接，左连接就是，在不满足条件的情况下包含左边的表的所有记录数据，右连接就是包含右边表的所有记录数据。</p><p>99语法的外连接和92语法的外连接稍微不同，99语法中不再是使用<code>+</code>，而且多了一个全连接。</p><h4 id="2-2-1、左连接"><a href="#2-2-1、左连接" class="headerlink" title="2.2.1、左连接"></a>2.2.1、左连接</h4><blockquote><p>在99语法中左连接使用<strong>left join</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e1 <span class="keyword">left</span> <span class="keyword">join</span> emp e2 <span class="keyword">on</span> e1.mgr <span class="operator">=</span> e2.empno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/2020031213510150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h4 id="2-2-2、右连接"><a href="#2-2-2、右连接" class="headerlink" title="2.2.2、右连接"></a>2.2.2、右连接</h4><blockquote><p>99语法中右连接使用<code>right join</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e1 <span class="keyword">right</span> <span class="keyword">join</span> emp e2 <span class="keyword">on</span> e1.mgr <span class="operator">=</span> e2.empno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312135121309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h4 id="2-2-3、全连接"><a href="#2-2-3、全连接" class="headerlink" title="2.2.3、全连接"></a>2.2.3、全连接</h4><blockquote><p>在99语法中还有一个全连接，不管满足不满足条件，左边和右边的表都全部显示，相互补充null。使用<code>full join on|using</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e1 <span class="keyword">full</span> <span class="keyword">join</span> emp e2 <span class="keyword">on</span> e1.mgr <span class="operator">=</span> e2.empno</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312135137907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FzZHp4Yzk2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr></tbody></table><h1 id="十六、视图"><a href="#十六、视图" class="headerlink" title="十六、视图"></a>十六、视图</h1><blockquote><p>视图是一个虚拟的表，可以当作一个真实的表使用。视图也有行和列数据，但是视图并不在数据库中以储存数据的形式存在。视图里的数据来自于定义视图查询所引用的表，并且在引用视图时动态生成（视图不是真是存在磁盘上的）。</p><ul><li>简化：select查询语句</li><li>重用：封装select 语句</li><li>隐藏：隐藏内部细节</li><li>区分：相同数据不同查询</li></ul></blockquote><h2 id="1、视图的创建"><a href="#1、视图的创建" class="headerlink" title="1、视图的创建"></a>1、视图的创建</h2><blockquote><p>不是所有的用户都有创建视图的权限，如果没有权限需要提权。</p><ul><li>授权：<code>gran   t dba to 用户;</code></li><li>回收：<code>revoke dba from 用户;</code></li></ul></blockquote><blockquote><p>视图创建的语法：</p><p><code>create or replace view 视图名称 as 查询语句;</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> vw_sstudent <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sstudent;</span><br></pre></td></tr></table></figure><p><strong>Tips：</strong></p><ul><li><strong>如果要修改视图只需要更改查询语句再次执行创建视图的SQL语句就行。</strong></li><li><strong>如果修改源数据则视图中的数据也会发生改变。</strong></li></ul><h2 id="2、删除视图"><a href="#2、删除视图" class="headerlink" title="2、删除视图"></a>2、删除视图</h2><blockquote><p>对视图的删除操作不会影响到源表</p><p>删除视图的语法：</p><p><code>drop view 视图名称</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> vw_sstudent;</span><br></pre></td></tr></table></figure><h1 id="十七、索引"><a href="#十七、索引" class="headerlink" title="十七、索引"></a>十七、索引</h1><blockquote><p>索引时数据库的对象之一，用于加快数据库的检索。</p><p>索引时提查询速度的一种手段，但不是适用于任何场景。如果数据很少不建议使用，数据量特别多使用才有明显效果，否则很有可能会降低查询速度。</p></blockquote><h2 id="1、索引的创建"><a href="#1、索引的创建" class="headerlink" title="1、索引的创建"></a>1、索引的创建</h2><blockquote><p>给表设置属性的时候会默认自动生成一个索引。</p><p>创建索引的语法：</p><p><code>create index 索引名称 on 表名(字段名...);</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index index_sal <span class="keyword">on</span> emp(sal);</span><br></pre></td></tr></table></figure><h2 id="2、删除索引"><a href="#2、删除索引" class="headerlink" title="2、删除索引"></a>2、删除索引</h2><blockquote><p>删除索引的语法：</p><p><code>drop index 索引名称;</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> index index_sal;</span><br></pre></td></tr></table></figure><h1 id="十八、rowid和rownum"><a href="#十八、rowid和rownum" class="headerlink" title="十八、rowid和rownum"></a>十八、rowid和rownum</h1><hr><blockquote><p>rowid是Oracle的一个重要概念，用于定位数据库中一条记录的一个相对位移的地址值。用rowid来定位记录时最快的。</p><p>rownum是一种伪列，它会根据返回的记录审生成一个有序的数字。</p></blockquote><h2 id="1、rowid"><a href="#1、rowid" class="headerlink" title="1、rowid"></a>1、rowid</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.<span class="operator">*</span>,rowid <span class="keyword">from</span> sstudent s</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/20200312230333137.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>每条记录的rowid是唯一的，可以用来快速定位到一条记录。</p><h2 id="2、rownum"><a href="#2、rownum" class="headerlink" title="2、rownum"></a>2、rownum</h2><blockquote><p>rownum是一个伪列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.<span class="operator">*</span>,rownum <span class="keyword">from</span> sstudent s</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/2020031223034584.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>mysql数据库里可以使用<code>limit</code>截取数据，模仿分页，oracle里没有这个，但是可以使用rownum实现。</p><h3 id="rownum模仿实现分页"><a href="#rownum模仿实现分页" class="headerlink" title="rownum模仿实现分页"></a>rownum模仿实现分页</h3><blockquote><p>数据少，所以模拟设置为每页显示2条数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> s.<span class="operator">*</span>,rownum n <span class="keyword">from</span> sstudent s) <span class="keyword">where</span> n <span class="keyword">between</span> <span class="number">3</span><span class="operator">*</span><span class="number">2</span><span class="number">-1</span> <span class="keyword">and</span> <span class="number">3</span><span class="operator">*</span><span class="number">2</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运行结果</th></tr></thead><tbody><tr><td align="left"><img src="https://img-blog.csdnimg.cn/2020031223035444.png" alt="在这里插入图片描述"></td></tr></tbody></table><p>通过这条命令可以实现分页查询数据，3表示的是3页，2是每页显示2条记录</p>]]></content>
      
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
